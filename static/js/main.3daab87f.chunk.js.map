{"version":3,"sources":["styles/avatar1.png","store/reducers/updateState.js","store/utility.js","store/reducers/user.js","store/actions/actionTypes.js","store/reducers/goals.js","store/reducers/initialize.js","store/reducers/questionnaire.js","store/reducers/accounts.js","store/reducers/models.js","store/reducers/allocations.js","store/reducers/funding.js","store/store.js","serviceWorker.js","history.js","auth.js","configuration.js","Initializer.js","store/actions/user.js","store/actions/goals.js","store/actions/accounts.js","store/actions/models.js","components/SpinnerComponent.js","App.js","pages/Login.js","pages/Tabs.js","components/Navbar.js","pages/Dashboard.js","store/actions/allocations.js","store/actions/funding.js","components/JsonEditorComponent.js","components/PurgeButton.js","pages/RequestCheckerComponent.js","store/actions/initialize.js","pages/InitPage.js","store/actions/updateStateAction.js","pages/steps.js","pages/AddAccount.js","store/actions/questionnaire.js","pages/ClientPage.js","index.js"],"names":["module","exports","initialState","securities","name","security_class","ticker","asset_class","is_active","transaction_codes","category","is_buy","transaction_code","transaction_code_description","accountTypes","code","is_taxable","short_name","allocations","description","volatility","performance","models","current_weight","strategic_weight","date","holdings","security_ticker","goals","image","is_decumulation","questionnaire_name","allocationName","type","children","decision_tree","questionnaire","questions","title","question_type","order_index","answers","value","label","decision_paths","question","answer","leads_to","allocation","clients","first_name","last_name","username","email","password","client_type","authorities","phone_number","client_account_association_type","accounts","accout_type_name","allocation_name","goal_name","goal_amount","accumulation_horizon","cash","updateObject","oldObject","updatedProperties","userAccessToken","loading","accessToken","localStorage","getItem","user","clientAssetSize","clientAnnualVolume","clientCumulativeReturn","clientHoldings","authenticateUserStart","state","action","authenticateUserSuccess","console","log","authenticateUserFail","getUserStart","getUserSuccess","getUserFail","getClientsStart","getClientsSuccess","getClientsFail","getClientAssetSizeStart","getClientAssetSizeSuccess","getClientAssetSizeFail","getClientAnnualVolumeStart","getClientAnnualVolumeSuccess","getClientAnnualVolumeFail","getClientCumulativeReturnStart","getClientCumulativeReturnSuccess","getClientCumulativeReturnFail","getClientHoldingsStart","getClientHoldingsSuccess","getClientHoldingsFail","reducer","goal","goalPerformance","getGoalsStart","getGoalsSuccess","getGoalsFail","getGoalStart","getGoalSuccess","getGoalFail","updateGoalStart","updateGoalSuccess","updateGoalFail","getGoalPerformanceStart","getGoalPerformanceSuccess","getGoalPerformanceFail","accountType","security","model","modelHoldings","modelHolding","clientAdminService","clientNucleusService","clientsAdminService","clientsNucleusService","account","subscriptions","subscription","porfolios","porfolio","porfolioHoldings","porfolioHolding","decisionTree","nodes","node","nodeRelationships","nodeRelationship","transactionCodes","portfolioTransactions","portfolioAssetSize","createSecurity","createAllocation","createModel","createAccountType","createModelHolding","createGoal","createClientAdminService","createClientNucleusService","createAccount","subscribeAccount","createPortfolio","portfolios","createPortfolioHolding","createDecisionTree","createQuestionnaire","createNode","createNodeRelationShip","createTransactionCodes","createPortfolioTransactions","createPortfolioAssetSize","questionnaires","getQuestionnairesStart","getQuestionnairesSuccess","getQuestionnairesFail","getNodesStart","getNodesSuccess","getNodesFail","getNodeRelationshipsStart","getNodeRelationshipsSuccess","getNodeRelationshipsFail","getAllocationsStart","getAllocationsSuccess","getAllocationsFail","accountAllocation","accountPortifolio","accountAssetSize","fundings","accountPortifolioHoldings","accountSubscription","setAccount","setDate","getAccountsStart","getAccountsSuccess","getAccountsFail","getAccountTypesStart","getAccountTypesSuccess","getAccountTypesFail","createAccountStart","createAccountSuccess","createAccountFail","subscribeAccountStart","subscribeAccountSuccess","subscribeAccountFail","getAccountAllocationStart","getAccountAllocationSuccess","getAccountAllocationFail","getAccountPortifolioStart","getAccountPortifolioSuccess","getAccountPortifolioFail","getAccountFundingStart","getAccountFundingSuccess","getAccountFundingFail","getAccountAssetSizeStart","getAccountAssetSizeSuccess","getAccountAssetSizeFail","getAccountPortifolioHoldingsStart","getAccountPortifolioHoldingsSuccess","getAccountPortifolioHoldingsFail","createPortfolioHoldingStart","createPortfolioHoldingSuccess","createPortfolioHoldingFail","retrieveModelStart","retrieveModelSuccess","retrieveModelFail","getModelHoldingsStart","getModelHoldingsSuccess","getModelHoldingsFail","getAllSecuritiesFail","getAllSecuritiesStart","getAllSecuritiesSuccess","allocationPerformance","allocationComposition","getAllocationStart","getAllocationSuccess","getAllocationFail","getAllocationPerformanceStart","getAllocationPerformanceSuccess","getAllocationPerformanceFail","getAllocationCompositionStart","getAllocationCompositionSuccess","getAllocationCompositionFail","funding","getFundingStart","getFundingSuccess","getFundingFail","createFundingStart","createFundingSuccess","createFundingFail","createPortifolioAssetSizeStart","createPortifolioAssetSizeSuccess","createPortifolioAssetSizeFail","rootReducer","combineReducers","updateState","payload","userReducer","goalsReducer","initialize","initializeReducer","questionnaireReducer","accountsReducer","allocationReducer","modelReducer","fundingReducer","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","createBrowserHistory","auth","isAuthenticated","authenticate","cb","this","setTimeout","signout","BASE_PATH","CLIENT_CREDENTIALS","ADMIN_SERVICE_PATH","Initializer","Component","getAccessToken","callback","client_credentials","btoa","headers","options","url","method","axios","request","err","then","res","catch","isInitalized","params","page","size","ascending","data","content","map","acc","getAllAllocations","a","promise","updateAllocation","allocationID","node_map","updateAccount","account_id","deleteAllAccountTypes","id","response","getAllAccountTypes","deleteAllSecurities","getAllSecurities","deleteAllAllocations","deleteAllGoals","getAllGoals","getAllPortfolios","updateGoal","questionnaire_id","goal_id","deleteAllClientsNucleus","client","deleteAllPortfolioAssetSize","assetSize","getAllAdminServiceClients","getAllNucleusServiceClients","deleteAllAccounts","deleteAllPortfolios","portfolio","deleteAllPortfolioHoldings","portfolioHolding","deleteAllModels","deleteAllDecisionTrees","tree","deleteAllQuestionnaires","deleteAllNodes","getAllNodes","deleteAllNodeRelationships","authenticateUser","model_id","allocation_id","deleteAllocationComposition","composition","getAccountPortifolio","clearAll","error","dispatch","getState","access_token","getUser","getClients","getClientAssetSize","getClientAnnualVolume","getClientCumulativeReturn","getClientHoldings","getGoal","getAccounts","subscribeAccountt","allocationId","goalId","accountId","SpinnerComponent","className","color","App","props","getAccountTypes","isAccountExists","setState","redirecting","history","push","setAccessToken","to","connect","Login","login","credentials","onAuthenticateUser","onSetDate","redirectToReferrer","rememberMe","invalidCredentials","prevProps","field","e","target","checked","preventDefault","from","pathname","style","backgroundImage","process","paddingBottom","viewBox","xmlns","xmlnsXlink","x1","x2","y1","y2","gradientUnits","stopOpacity","offset","xlinkHref","transform","d","fill","Form","Group","Label","Control","onChange","onValueChange","Button","onClick","variant","Account","currentBalance","colors","length","mh","index","securityType","find","s","security_id","accountGoal","Row","noGutters","Card","Dropdown","Divider","substr","indexOf","width","height","Col","sm","md","lg","xl","amount","decumulation_horizon","metadata","labels","datasets","borderWidth","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointRadius","scales","xAxes","gridLines","display","ticks","fontColor","autoSkipPadding","yAxes","maxTicksLimit","legend","responsive","maintainAspectRatio","LogOutItem","withRouter","Item","removeItem","NavbarComponent","fillSelectList","rating","selectedOption","prevState","groupedOptions","groupedValue","handleInputChange","routerHistory","onSetAccount","handleShowAccountName","disabled","singleValue","onGetAccounts","onResetClick","isRTL","document","documentElement","getAttribute","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","classNamePrefix","placeholder","defaultValue","defaultInputValue","isClearable","isSearchable","isDisabled","as","alignRight","Link","src","avatar1","alt","Menu","onGetUser","onGetClients","Dashboard","accountName","componentDidMount","onGetAllSecurities","onGetClientAssetSize","getDate","today","Date","day","month","getMonth","year","getFullYear","handleModal","modal","showModal","isDeleting","handleCreatePrices","onCreatePortfolioHolding","onCreateFunding","fundingsForAccount","onCreatePortifolioAssetSize","forEach","price","shares","weight","portfolio_id","parseInt","newDate","replace","cashFlow","portfolioId","handleGetValue","selectedTab","selectedAccount","onGetClientHoldings","onGetAllocation","onGetAccountPortifolio","onGetModelHoldings","onGetGoal","onGetAccountAllocation","onGetFunding","slice","onGetAllocationPerformance","onGetGoalPerformance","lenght","prevent","Modal","centered","show","onHide","Header","closeButton","Title","Body","sec","InputGroup","key","Prepend","Text","FormControl","aria-label","aria-describedby","Footer","onRetrieveModel","retrieveModel","getModelHoldings","createPortfolioHoldingg","getAllocation","getAccountAllocation","getAllocationPerformance","onGetClientAnnualVolume","onGetClientCumulativeReturn","onGetAllocationComposition","getAllocationComposition","userId","getGoalPerformance","toISOString","substring","frequency_unit","start_date","is_deposit","funding_type","funding_status","createFunding","getFunding","asset_size","cash_flow","createPortifolioAssetSize","JsonEditorComponent","handleRenderButton","isShow","onSubmit","initState","theme","collapsed","displayDataTypes","onEdit","values","iconStyle","PurgeButton","LoginButton","SmallButton","float","DisabledButton","AlertComponent","Alert","RequestCheckerComponent","scrollToBottom","setupEnviroment","initialData","onCreateSecurity","onCreateDecisionTree","onCreateQuestionnaire","onCreateNode","onCreateNodeRelationship","onCreateAllocation","onCreateModel","onCreateModelHolding","onCreateGoal","onCreateAccountType","onCreateClientOnNucleusService","onCreateClientOnAdminService","onCreateAccount","onSubcribeAccount","onCreateTransactionCodes","onCreatePortfolioTransactions","onCreatePortfolioAssetSize","resetingState","isAccountTypePassed","isSecurityPassed","allocationResponse","isAllocationPassed","allAllocations","securitiesResponse","allModels","compositionPayload","holding","filteredSecurities","filter","localeCompare","modelHoldingResponse","allModelHoldings","isModelPassed","isModelHoldingPassed","goalResponse","child","isGoalPassed","transCodesRes","tranCodes","allClients","existingClient","c","clientNucleusResponse","accountMessage","allAccounts","goalsResponse","filteredAccount","accountResponse","filteredGoal","g","accountPorfolios","m","h","buyTransaction","transactionPayload","quantity","transaction_code_id","assetSizePayload","currency_code","assetSizePayload2","assetSizePayload3","assetSizePayload4","assetSizePayload5","isClientPassed","isAccountPassed","isSubcriptionPassed","decisionTreeResponse","isDecisionTreePassed","IDs","isFailed","questionnaireResponse","isQuestionnairePassed","allGoals","listAllAllocations","parentNode","questionID","is_first","nodeResponse","relation","childQuestion","q","nodeChildResponse","decisionTreeID","nodeParentID","nodeChildID","isLeaf","riskQuestion","leafRelationships","includes","leaf","node_id","isNodePassed","isNodeRelationshipPassed","isButtonRender","listItems","isPassed","req","ref","el","messagesEnd","portfolioHoldings","allAccountPortfolios","status","securityID","modelID","parentGoal","parentGoalID","parent_goal_id","decision_tree_id","question_id","answer_id","node_parent_id","node_child_id","is_leaf","clientNucleus","accountTypeID","account_type_id","client_id","onCreatePortfolio","accountID","percentage","StepTitle","icon","doneIcon","InitPage","updated_src","hideNextButton","stepzillaDefaultProps","nextButtonCls","backButtonCls","nextButtonText","stepsNavigation","backButtonText","steps","component","SelectGoal","handleGoalSelect","selectedGoal","span","CustumizeGoal","customizeGoal","disableNext","customGoal","isNextDisabled","Questionnaire","showQuestion","jumpToStep","answerChecked","allocationSelected","findFirstQuestion","Check","custom","FundAccount","onChangeAccountType","onChangeCurr","Math","floor","random","AddAccount","onGetGoals","onGetQuestionnaires","onGetNodes","onGetNodeRelationships","onGetAllocations","onGetAccountTypes","event","currency","accType","form","currentTarget","stopPropagation","accountNumber","elements","currencyCode","accountTypeId","isDecomulation","decumulationHorizon","accumulationHorizon","goalAmount","clientId","parseFloat","answerId","nextNodeRelationships","nr","nm","nextNode","n","nextQuestion","currentQuestion","firstNode","firstQuestion","step","Object","entries","constructor","mainGoals","account_number","createAccountt","ClientPage","totalEarnings","firstCashFlow","allAdditions","additions","reduce","prev","next","ch","cum_return","toFixed","ann_vol","paddingLeft","paddingTop","marginBottom","ca","stepSize","PrivateRoute","rest","render","app","exact","path","exaxt","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3daab87f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar1.60299587.png\";","import { UPDATE_INIT_STATE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  securities: [\r\n    {\r\n      name: 'Vanguard Total Stock Market ETF',\r\n      security_class: 'ETF',\r\n      ticker: 'VTI',\r\n      asset_class: 'US Equities',\r\n      is_active: true,\r\n    },\r\n    {\r\n      name: 'Vanguard Total Bond Market ETF',\r\n      ticker: 'BND',\r\n      security_class: 'ETF',\r\n      asset_class: 'US Fixed Income',\r\n      is_active: true,\r\n    }\r\n  ],\r\n  transaction_codes: [\r\n    {\r\n      category: \"Security Purchases\",\r\n      is_buy: true,\r\n      transaction_code: \"BUY\",\r\n      transaction_code_description: \"Buy Security\"\r\n    },\r\n    {\r\n      category: \"Security Sales\",\r\n      is_buy: false,\r\n      transaction_code: \"SELL\",\r\n      transaction_code_description: \"Sell Security\"\r\n    },\r\n  ],\r\n  accountTypes: [\r\n    {\r\n      name: 'Taxable',\r\n      code: '103',\r\n      is_taxable: true,\r\n      short_name: 'TXB'\r\n    },\r\n    {\r\n      name: 'Non-taxable',\r\n      code: '104',\r\n      is_taxable: false,\r\n      short_name: 'NTXB'\r\n    },\r\n  ],\r\n  allocations: [\r\n    {\r\n      name: 'Conservative Allocation',\r\n      description: 'Allocation for an investor with a conservative risk profile.',\r\n      volatility: 0.03,\r\n      performance: 0.04,\r\n      is_active: true,\r\n      models: [\r\n        {\r\n          name: 'Conservative',\r\n          description: 'Investment model for an investor with a conservative risk profile.',\r\n          current_weight: 100,\r\n          strategic_weight: 100,\r\n          date: '2020-02-13T17:55:07.069Z',\r\n          holdings: [\r\n            {\r\n              current_weight: 20,\r\n              strategic_weight: 20,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'VTI'\r\n            },\r\n            {\r\n              current_weight: 80,\r\n              strategic_weight: 80,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'BND'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Moderate Allocation',\r\n      description: 'Investment allocation for an investor with a moderate risk profile.',\r\n      is_active: true,\r\n      volatility: 0.05,\r\n      performance: 0.08,\r\n      models: [\r\n        {\r\n          name: 'Moderate',\r\n          description: 'Investment model for an investor with a moderate risk profile.',\r\n          current_weight: 100,\r\n          strategic_weight: 100,\r\n          date: '2020-02-13T17:55:07.069Z',\r\n          holdings: [\r\n            {\r\n              current_weight: 40,\r\n              strategic_weight: 40,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'VTI'\r\n            },\r\n            {\r\n              current_weight: 60,\r\n              strategic_weight: 60,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'BND'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Moderate-Aggressive Allocation',\r\n      description: 'Investment allocation for an investor with a moderate-aggressive risk profile.',\r\n      is_active: true,\r\n      volatility: 0.08,\r\n      performance: 0.1,\r\n      models: [\r\n        {\r\n          name: 'Moderate-Aggressive',\r\n          description: 'Investment model for an investor with a moderate risk profile.',\r\n          current_weight: 100,\r\n          strategic_weight: 100,\r\n          date: '2020-02-13T17:55:07.069Z',\r\n          holdings: [\r\n            {\r\n              current_weight: 60,\r\n              strategic_weight: 60,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'VTI'\r\n            },\r\n            {\r\n              current_weight: 40,\r\n              strategic_weight: 40,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'BND'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Aggressive Allocation',\r\n      description: 'Investment model for an investor with a aggressive risk profile.',\r\n      is_active: true,\r\n      volatility: 0.11,\r\n      performance: 0.13,\r\n      models: [\r\n        {\r\n          name: 'Aggressive',\r\n          description: 'Investment model for an investor with a moderate risk profile.',\r\n          current_weight: 100,\r\n          strategic_weight: 100,\r\n          date: '2020-02-13T17:55:07.069Z',\r\n          holdings: [\r\n            {\r\n              current_weight: 80,\r\n              strategic_weight: 80,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'VTI'\r\n            },\r\n            {\r\n              current_weight: 20,\r\n              strategic_weight: 20,\r\n              date: \"2019-01-01\",\r\n              security_ticker: 'BND'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n  ],\r\n  goals: [\r\n    {\r\n      name: 'Retirement',\r\n      image: 'icon-retirement',\r\n      is_decumulation: true,\r\n      questionnaire_name: 'Investment Profile Questionnaire',\r\n      allocations: [\r\n        {\r\n          allocationName: 'Conservative Allocation',\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Education',\r\n      image: 'icon-education',\r\n      is_decumulation: true,\r\n      questionnaire_name: 'Investment Profile Questionnaire',\r\n      allocations: [\r\n        {\r\n          allocationName: 'Conservative Allocation',\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Build Wealth',\r\n      image: 'icon-goal',\r\n      is_decumulation: false,\r\n      questionnaire_name: 'Investment Profile Questionnaire',\r\n      allocations: [\r\n        {\r\n          allocationName: 'Conservative Allocation',\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Major Purchase',\r\n      image: 'icon-major-purchase',\r\n      is_decumulation: false,\r\n      type: 'Client goal',\r\n      children: [\r\n        {\r\n          name: 'Home',\r\n          questionnaire_name: 'Investment Profile Questionnaire',\r\n          is_decumulation: false\r\n        },\r\n        {\r\n          name: 'Car',\r\n          questionnaire_name: 'Investment Profile Questionnaire',\r\n          is_decumulation: false\r\n        },\r\n        {\r\n          name: 'Wedding',\r\n          questionnaire_name: 'Investment Profile Questionnaire',\r\n          is_decumulation: false\r\n        }\r\n      ],\r\n      allocations: [\r\n        {\r\n          allocationName: 'Conservative Allocation',\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  decision_tree: {\r\n    name: 'Investment Profile Decision Tree',\r\n    description: 'Decision tree which allocates investors based on their investment profile.',\r\n    questionnaire: {\r\n      name: \"Investment Profile Questionnaire\",\r\n      description: 'Determine the investment profile for a client.',\r\n      questions: [\r\n        {\r\n          category: 'Investor Profile',\r\n          title: 'What is your age?',\r\n          question_type: 'text',\r\n          order_index: '1',\r\n        },\r\n        {\r\n          category: \"Investor Profile\",\r\n          title: \"How much will you be investing?\",\r\n          question_type: \"monetary\",\r\n          order_index: \"2\"\r\n        },\r\n        {\r\n          category: 'Investor Profile',\r\n          title: 'What is your time horizon?',\r\n          question_type: 'radio',\r\n          order_index: '3',\r\n          answers: [\r\n            {\r\n              value: '<10 years',\r\n              label: 'Less than 10 years'\r\n            },\r\n            {\r\n              value: '10-20 years',\r\n              label: '10-20 years'\r\n            },\r\n            {\r\n              value: '>20 years',\r\n              label: 'Greather than 20 years'\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          category: 'Risk Profile',\r\n          title: \"What is your risk profile?\",\r\n          question_type: 'radio',\r\n          order_index: '4',\r\n          answers: [\r\n            {\r\n              value: 'conservative',\r\n              label: 'Conservative'\r\n            },\r\n            {\r\n              value: 'moderate',\r\n              label: 'Moderate'\r\n            },\r\n            {\r\n              value: 'aggressive',\r\n              label: 'Aggressive'\r\n            },\r\n          ],\r\n        }\r\n      ],\r\n    },\r\n    decision_paths: {\r\n      question: \"What is your time horizon?\", //Node 1\r\n      answers: [{\r\n        answer: \"<10 years\", //Relation Node 1 <=> Node.1.1\r\n        leads_to: {\r\n          question: \"What is your risk profile?\", //Node 1.1 (<10yrs)\r\n          answers: [{\r\n            answer: \"conservative\", //Relation Node 1.1 <=> Node.1.1.1 (<10 years, convervastive)\r\n            leads_to: {\r\n              allocation: \"Conservative Allocation\" //Node 1.1.1 (<10 years, convervastive)\r\n            }\r\n          }, {\r\n            answer: \"moderate\",\r\n            leads_to: {\r\n              allocation: \"Moderate Allocation\" //Node 1.1.1 (<10 years, Moderate)\r\n            }\r\n          },\r\n          {\r\n            answer: \"aggressive\",\r\n            leads_to: {\r\n              allocation: \"Moderate-Aggressive Allocation\"\r\n            }\r\n          }]\r\n        }\r\n      },\r\n      {\r\n        answer: \"10-20 years\",\r\n        leads_to: {\r\n          question: \"What is your risk profile?\",  //Node 1.2\r\n          answers: [{\r\n            answer: \"conservative\",\r\n            leads_to: {\r\n              allocation: \"Conservative Allocation\"\r\n            }\r\n          }, {\r\n            answer: \"moderate\",\r\n            leads_to: {\r\n              allocation: \"Moderate-Aggressive Allocation\"\r\n            }\r\n          },\r\n          {\r\n            answer: \"aggressive\",\r\n            leads_to: {\r\n              allocation: \"Aggressive Allocation\"\r\n            }\r\n          }]\r\n        }\r\n      },\r\n      {\r\n        answer: \">20 years\",\r\n        leads_to: {\r\n          question: \"What is your risk profile?\",\r\n          answers: [{\r\n            answer: \"conservative\",\r\n            leads_to: {\r\n              allocation: \"Moderate Allocation\"\r\n            }\r\n          }, {\r\n            answer: \"moderate\",\r\n            leads_to: {\r\n              allocation: \"Moderate-Aggressive Allocation\"\r\n            }\r\n          },\r\n          {\r\n            answer: \"aggressive\",\r\n            leads_to: {\r\n              allocation: \"Aggressive Allocation\"\r\n            }\r\n          }]\r\n        }\r\n      }\r\n      ]\r\n    }\r\n  },\r\n  clients: [\r\n    {\r\n      first_name: 'Lemmy',\r\n      last_name: 'laondon',\r\n      username: 'vbnml@gmail.com',\r\n      email: 'vbnml@gmail.com',\r\n      password: '123456789',\r\n      client_type: 'individual',\r\n      authorities: 'ROLE_PORTFOLIO_MANAGER',\r\n      phone_number: '123-123-2211',\r\n      client_account_association_type: 'owner',\r\n      accounts: [\r\n        {\r\n          name: \"Invenstment Account\",\r\n          current_weight: 50,\r\n          strategic_weight: 50,\r\n          date: '2018-06-28',\r\n          accout_type_name: 'Non-taxable',\r\n          allocation_name: 'Moderate Allocation',\r\n          goals: [\r\n            {\r\n              goal_name: \"Education\",\r\n              goal_amount: 40000,\r\n              accumulation_horizon: 5,\r\n            }\r\n          ],\r\n          cash: 100\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_INIT_STATE:\r\n            return {\r\n              initialState: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n      ...oldObject,\r\n      ...updatedProperties\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  userAccessToken: '',\r\n  loading: false,\r\n  accessToken: localStorage.getItem('accessToken'),\r\n  username: '',\r\n  user: {},\r\n  clientAssetSize: [],\r\n  clientAnnualVolume: {},\r\n  clientCumulativeReturn: {},\r\n  clientHoldings: []\r\n}\r\nconst setAccessToken = (state, action) => {\r\n  // return updateObject(state, { accessToken: action.accessToken })\r\n}\r\n\r\nconst authenticateUserStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst authenticateUserSuccess = ( state, action ) => {\r\n  console.log('jadi action', action)\r\n  return updateObject( state, {\r\n      userAccessToken: action.accessToken,\r\n      username: action.username,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst authenticateUserFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getUserStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getUserSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getUserSuccess', action)\r\n  return updateObject( state, {\r\n      user: action.user,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getUserFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getClientsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getClientsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getClientsSuccess', action)\r\n  return updateObject( state, {\r\n      // ClientsAccessToken: action.accessToken,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getClientsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getClientAssetSizeStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getClientAssetSizeSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getClientAssetSizeSuccess', action)\r\n  return updateObject( state, {\r\n      clientAssetSize: action.clientAssetSize,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getClientAssetSizeFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getClientAnnualVolumeStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getClientAnnualVolumeSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getClientAnnualVolumeSuccess', action)\r\n  return updateObject( state, {\r\n      clientAnnualVolume: action.clientAnnualVolume,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getClientAnnualVolumeFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getClientCumulativeReturnStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getClientCumulativeReturnSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getClientCumulativeReturnSuccess', action)\r\n  return updateObject( state, {\r\n      clientCumulativeReturn: action.clientCumulativeReturn,\r\n      loading: false\r\n  })\r\n}\r\n\r\nconst getClientCumulativeReturnFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getClientHoldingsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getClientHoldingsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getClientHoldingsSuccess', action)\r\n  // const ids = new Set(state.clientHoldings.map(d => d.id));\r\n  // const merged = [...state.clientHoldings, ...action.clientHoldings.filter(d => !ids.has(d.id))];\r\n  // console.log('getClientHoldingsSuccess MERGED ARRAY OF HOLDINGS', merged)\r\n  return updateObject( state, {\r\n      clientHoldings: action.clientHoldings,\r\n      loading: false\r\n  })\r\n}\r\n\r\nconst getClientHoldingsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.GET_CLIENT_HOLDING_START: return getClientHoldingsStart( state, action )\r\n    case actionTypes.GET_CLIENT_HOLDING_SUCCESS: return getClientHoldingsSuccess( state, action )\r\n    case actionTypes.GET_CLIENT_HOLDING_FAIL: return getClientHoldingsFail( state, action )\r\n    case actionTypes.GET_CLIENT_CUM_RETURN_START: return getClientCumulativeReturnStart( state, action )\r\n    case actionTypes.GET_CLIENT_CUM_RETURN_SUCCESS: return getClientCumulativeReturnSuccess( state, action )\r\n    case actionTypes.GET_CLIENT_CUM_RETURN_FAIL: return getClientCumulativeReturnFail( state, action )\r\n    case actionTypes.GET_CLIENT_ANN_VOLUME_START: return getClientAnnualVolumeStart( state, action )\r\n    case actionTypes.GET_CLIENT_ANN_VOLUME_SUCCESS: return getClientAnnualVolumeSuccess( state, action )\r\n    case actionTypes.GET_CLIENT_ANN_VOLUME_FAIL: return getClientAnnualVolumeFail( state, action )\r\n    case actionTypes.GET_CLIENT_ASSET_SIZE_START: return getClientAssetSizeStart( state, action )\r\n    case actionTypes.GET_CLIENT_ASSET_SIZE_SUCCESS: return getClientAssetSizeSuccess( state, action )\r\n    case actionTypes.GET_CLIENT_ASSET_SIZE_FAIL: return getClientAssetSizeFail( state, action )\r\n    case actionTypes.AUTHENTICATE_USER_START: return authenticateUserStart( state, action )\r\n    case actionTypes.AUTHENTICATE_USER_SUCCESS: return authenticateUserSuccess( state, action )\r\n    case actionTypes.AUTHENTICATE_USER_FAIL: return authenticateUserFail( state, action )\r\n    case actionTypes.GET_USER_START: return getUserStart( state, action )\r\n    case actionTypes.GET_USER_SUCCESS: return getUserSuccess( state, action )\r\n    case actionTypes.GET_USER_FAIL: return getUserFail( state, action )\r\n    case actionTypes.SET_ACCESS_TOKEN: return setAccessToken( state, action )\r\n    case actionTypes.GET_CLIENTS_START: return getClientsStart( state, action )\r\n    case actionTypes.GET_CLIENTS_SUCCESS: return getClientsSuccess( state, action )\r\n    case actionTypes.GET_CLIENTS_FAIL: return getClientsFail( state, action )\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","export const UPDATE_INIT_STATE = 'UPDATE_INIT_STATE'\r\n\r\nexport const AUTHENTICATE_USER_START = 'AUTHENTICATE_USER_START'\r\nexport const AUTHENTICATE_USER_SUCCESS = 'AUTHENTICATE_USER_SUCCESS'\r\nexport const AUTHENTICATE_USER_FAIL = 'AUTHENTICATE_USER_FAIL'\r\n\r\nexport const GET_USER_START = 'GET_USER_START'\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'\r\nexport const GET_USER_FAIL = 'AUTHENTICATE_USER_FAIL'\r\n\r\nexport const GET_CLIENTS_START = 'GET_CLIENTS_START'\r\nexport const GET_CLIENTS_SUCCESS = 'GET_CLIENTS_SUCCESS'\r\nexport const GET_CLIENTS_FAIL = 'AUTHENTICATE_CLIENTS_FAIL'\r\n\r\nexport const GET_GOALS_START = 'GET_GOALS_START'\r\nexport const GET_GOALS_SUCCESS = 'GET_GOALS_SUCCESS'\r\nexport const GET_GOALS_FAIL = 'GET_GOALS_FAIL'\r\n\r\nexport const GET_GOAL_START = 'GET_GOAL_START'\r\nexport const GET_GOAL_SUCCESS = 'GET_GOAL_SUCCESS'\r\nexport const GET_GOAL_FAIL = 'GET_GOAL_FAIL'\r\n\r\nexport const GET_FUNDING_START = 'GET_FUNDING_START'\r\nexport const GET_FUNDING_SUCCESS = 'GET_FUNDING_SUCCESS'\r\nexport const GET_FUNDING_FAIL = 'GET_FUNDING_FAIL'\r\n\r\nexport const CREATE_FUNDING_START = 'CREATE_FUNDING_START'\r\nexport const CREATE_FUNDING_SUCCESS = 'CREATE_FUNDING_SUCCESS'\r\nexport const CREATE_FUNDING_FAIL = 'CREATE_FUNDING_FAIL'\r\n\r\nexport const GET_GOAL_PERFORMANCE_START = 'GET_GOAL_PERFORMANCE_START'\r\nexport const GET_GOAL_PERFORMANCE_SUCCESS = 'GET_GOAL_PERFORMANCE_SUCCESS'\r\nexport const GET_GOAL_PERFORMANCE_FAIL = 'GET_GOAL_PERFORMANCE_FAIL'\r\n\r\nexport const UPDATE_GOAL_START = 'UPDATE_GOAL_START'\r\nexport const UPDATE_GOAL_SUCCESS = 'UPDATE_GOAL_SUCCESS'\r\nexport const UPDATE_GOAL_FAIL = 'UPDATE_GOALS_FAIL'\r\n\r\nexport const GET_QUESTIONNAIRES_START = 'GET_QUESTIONNAIRES_START'\r\nexport const GET_QUESTIONNAIRES_SUCCESS = 'GET_QUESTIONNAIRES_SUCCESS'\r\nexport const GET_QUESTIONNAIRES_FAIL = 'GET_QUESTIONNAIRES_FAIL'\r\n\r\nexport const GET_NODES_START = 'GET_NODES_START'\r\nexport const GET_NODES_SUCCESS = 'GET_NODES_SUCCESS'\r\nexport const GET_NODES_FAIL = 'GET_NODES_FAIL'\r\n\r\nexport const GET_NODE_RELATIONSHIPS_START = 'GET_NODE_RELATIONSHIPS_START'\r\nexport const GET_NODE_RELATIONSHIPS_SUCCESS = 'GET_NODE_RELATIONSHIPS_SUCCESS'\r\nexport const GET_NODE_RELATIONSHIPS_FAIL = 'GET_NODE_RELATIONSHIPS_FAIL'\r\n\r\nexport const GET_ALLOCATIONS_START = 'GET_ALLOCATIONS_START'\r\nexport const GET_ALLOCATIONS_SUCCESS = 'GET_ALLOCATIONS_SUCCESS'\r\nexport const GET_ALLOCATIONS_FAIL = 'GET_ALLOCATIONS_FAIL'\r\n\r\nexport const GET_ACCOUNT_ALLOCATION_START = 'GET_ACCOUNT_ALLOCATION_START'\r\nexport const GET_ACCOUNT_ALLOCATION_SUCCESS = 'GET_ACCOUNT_ALLOCATION_SUCCESS'\r\nexport const GET_ACCOUNT_ALLOCATION_FAIL = 'GET_ACCOUNT_ALLOCATION_FAIL'\r\n\r\nexport const GET_ALLOCATION_PERFORMANCE_START = 'GET_ALLOCATION_PERFORMANCE_START'\r\nexport const GET_ALLOCATION_PERFORMANCE_SUCCESS = 'GET_ALLOCATION_PERFORMANCE_SUCCESS'\r\nexport const GET_ALLOCATION_PERFORMANCE_FAIL = 'GET_ALLOCATION_PERFORMANCE_FAIL'\r\n\r\nexport const GET_CLIENT_ANN_VOLUME_START = 'GET_CLIENT_ANN_VOLUME_START'\r\nexport const GET_CLIENT_ANN_VOLUME_SUCCESS = 'GET_CLIENT_ANN_VOLUME_SUCCESS'\r\nexport const GET_CLIENT_ANN_VOLUME_FAIL = 'GET_CLIENT_ANN_VOLUME_FAIL'\r\n\r\nexport const GET_CLIENT_CUM_RETURN_START = 'GET_CLIENT_CUM_RETURN_START'\r\nexport const GET_CLIENT_CUM_RETURN_SUCCESS = 'GET_CLIENT_CUM_RETURN_SUCCESS'\r\nexport const GET_CLIENT_CUM_RETURN_FAIL = 'GET_CLIENT_CUM_RETURN_FAIL'\r\n\r\nexport const GET_CLIENT_HOLDING_START = 'GET_CLIENT_HOLDING_START'\r\nexport const GET_CLIENT_HOLDING_SUCCESS = 'GET_CLIENT_HOLDING_SUCCESS'\r\nexport const GET_CLIENT_HOLDING_FAIL = 'GET_CLIENT_HOLDING_FAIL'\r\n\r\nexport const GET_ALLOCATION_COMPOSITION_START = 'GET_ALLOCATION_COMPOSITION_START'\r\nexport const GET_ALLOCATION_COMPOSITION_SUCCESS = 'GET_ALLOCATION_COMPOSITION_SUCCESS'\r\nexport const GET_ALLOCATION_COMPOSITION_FAIL = 'GET_ALLOCATION_COMPOSITION_FAIL'\r\n\r\nexport const GET_ACCOUNTS_START = 'GET_ACCOUNTS_START'\r\nexport const GET_ACCOUNTS_SUCCESS = 'GET_ACCOUNTS_SUCCESS'\r\nexport const GET_ACCOUNTS_FAIL = 'GET_ACCOUNTS_FAIL'\r\n\r\nexport const GET_ACCOUNT_TYPES_START = 'GET_ACCOUNT_TYPES_START'\r\nexport const GET_ACCOUNT_TYPES_SUCCESS = 'GET_ACCOUNT_TYPES_SUCCESS'\r\nexport const GET_ACCOUNT_TYPES_FAIL = 'GET_ACCOUNT_TYPES_FAIL'\r\n\r\nexport const GET_ACCOUNT_PORTIFOLIO_START = 'GET_ACCOUNT_PORTIFOLIO_START'\r\nexport const GET_ACCOUNT_PORTIFOLIO_SUCCESS = 'GET_ACCOUNT_PORTIFOLIO_SUCCESS'\r\nexport const GET_ACCOUNT_PORTIFOLIO_FAIL = 'GET_ACCOUNT_PORTIFOLIO_FAIL'\r\n\r\nexport const GET_ALLOCATION_START = 'GET_ALLOCATION_START'\r\nexport const GET_ALLOCATION_SUCCESS = 'GET_ALLOCATION_SUCCESS'\r\nexport const GET_ALLOCATION_FAIL = 'GET_ALLOCATION_FAIL'\r\n\r\nexport const CREATE_ACCOUNT_START = 'CREATE_ACCOUNT_START'\r\nexport const CREATE_ACCOUNT_SUCCESS = 'CREATE_ACCOUNT_SUCCESS'\r\nexport const CREATE_ACCOUNT_FAIL = 'CREATE_ACCOUNT_FAIL'\r\n\r\nexport const SUBSCRIBE_ACCOUNT_START = 'SUBSCRIBE_ACCOUNT_START'\r\nexport const SUBSCRIBE_ACCOUNT_SUCCESS = 'SUBSCRIBE_ACCOUNT_SUCCESS'\r\nexport const SUBSCRIBE_ACCOUNT_FAIL = 'SUBSCRIBE_ACCOUNT_FAIL'\r\n\r\nexport const GET_CLIENT_ASSET_SIZE_START = 'GET_CLIENT_ASSET_SIZE_START'\r\nexport const GET_CLIENT_ASSET_SIZE_SUCCESS = 'GET_CLIENT_ASSET_SIZE_SUCCESS'\r\nexport const GET_CLIENT_ASSET_SIZE_FAIL = 'GET_CLIENT_ASSET_SIZE_FAIL'\r\n\r\nexport const GET_ACCOUNT_ASSET_SIZE_START = 'GET_ACCOUNT_ASSET_SIZE_START'\r\nexport const GET_ACCOUNT_ASSET_SIZE_SUCCESS = 'GET_ACCOUNT_ASSET_SIZE_SUCCESS'\r\nexport const GET_ACCOUNT_ASSET_SIZE_FAIL = 'GET_ACCOUNT_ASSET_SIZE_FAIL'\r\n\r\nexport const CREATE_PORTIFOLIO_ASSET_SIZE_START = 'CREATE_PORTIFOLIO_ASSET_SIZE_START'\r\nexport const CREATE_PORTIFOLIO_ASSET_SIZE_SUCCESS = 'CREATE_PORTIFOLIO_ASSET_SIZE_SUCCESS'\r\nexport const CREATE_PORTIFOLIO_ASSET_SIZE_FAIL = 'CREATE_PORTIFOLIO_ASSET_SIZE_FAIL'\r\n\r\nexport const GET_ACCOUNT_FUNDING_START = 'GET_ACCOUNT_FUNDING_START'\r\nexport const GET_ACCOUNT_FUNDING_SUCCESS = 'GET_ACCOUNT_FUNDING_SUCCESS'\r\nexport const GET_ACCOUNT_FUNDING_FAIL = 'GET_ACCOUNT_FUNDING_FAIL'\r\n\r\nexport const GET_ACCOUNT_PORTIFOLIO_HOLDING_START = 'GET_ACCOUNT_PORTIFOLIO_HOLDING_START'\r\nexport const GET_ACCOUNT_PORTIFOLIO_HOLDING_SUCCESS = 'GET_ACCOUNT_PORTIFOLIO_HOLDING_SUCCESS'\r\nexport const GET_ACCOUNT_PORTIFOLIO_HOLDING_FAIL = 'GET_ACCOUNT_PORTIFOLIO_HOLDING_FAIL'\r\n\r\nexport const SET_DATE = 'SET_DATE'\r\n\r\nexport const SET_ACCESS_TOKEN = 'SET_ACCESS_TOKEN'\r\n\r\nexport const SET_ACCOUNT = 'SET_ACCOUNT'\r\n\r\nexport const CREATE_SECURITY = 'CREATE_SECURITY'\r\nexport const CREATE_ACCOUNT_TYPE = 'CREATE_ACCOUNT_TYPE'\r\nexport const CREATE_ALLOCATION = 'CREATE_ALLOCATION'\r\nexport const CREATE_GOAL = 'CREATE_GOAL'\r\nexport const CREATE_MODEL = 'CREATE_MODEL'\r\nexport const CREATE_MODEL_HOLDING = 'CREATE_MODEL_HOLDING'\r\nexport const CREATE_CLIENT_ADMIN_SERVICE = 'CREATE_CLIENT_ADMIN_SERVICE'\r\nexport const CREATE_CLIENT_NUCLEUS_SERVICE = 'CREATE_CLIENT_NUCLEUS_SERVICE'\r\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT'\r\nexport const SUBSCRIBE_ACCOUNT = 'SUBSCRIBE_ACCOUNT'\r\nexport const CREATE_PORTFOLIO = 'CREATE_PORTFOLIO'\r\nexport const CREATE_PORTFOLIO_HOLDING = 'CREATE_PORTFOLIO_HOLDING'\r\nexport const CREATE_DECISION_TREE = 'CREATE_DECISION_TREE'\r\nexport const CREATE_QUESTIONNAIRE = 'CREATE_QUESTIONNAIRE'\r\nexport const CREATE_NODE = 'CREATE_NODE'\r\nexport const CREATE_NODE_RELATIONSHIP = 'CREATE_NODE_RELATIONSHIP'\r\nexport const CREATE_TRANSACTION_CODES = 'CREATE_TRANSACTION_CODES'\r\nexport const CREATE_PORTFOLIO_TRANSACTIONS = 'CREATE_PORTFOLIO_TRANSACTIONS'\r\nexport const CREATE_PORTFOLIO_ASSET_SIZE = 'CREATE_PORTFOLIO_ASSET_SIZE'\r\n\r\n\r\nexport const GET_ALL_SECURITIES_START = 'GET_ALL_SECURITIES_START'\r\nexport const GET_ALL_SECURITIES_SUCCESS = 'GET_ALL_SECURITIES_SUCCESS'\r\nexport const GET_ALL_SECURITIES_FAIL = 'GET_ALL_SECURITIES_FAIL'\r\n\r\nexport const RETRIEVE_MODEL_START = 'RETRIEVE_MODEL_START'\r\nexport const RETRIEVE_MODEL_SUCCESS = 'RETRIEVE_MODEL_SUCCESS'\r\nexport const RETRIEVE_MODEL_FAIL = 'RETRIEVE_MODEL_FAIL'\r\n\r\n\r\nexport const GET_MODEL_HOLDINGS_START = 'GET_MODEL_HOLDINGS_START'\r\nexport const GET_MODEL_HOLDINGS_SUCCESS = 'GET_MODEL_HOLDINGS_SUCCESS'\r\nexport const GET_MODEL_HOLDINGS_FAIL = 'GET_MODEL_HOLDINGS_FAIL'\r\n\r\nexport const CREATE_PORFOLIO_HOLDING_START = 'CREATE_PORFOLIO_HOLDING_START'\r\nexport const CREATE_PORFOLIO_HOLDING_SUCCESS = 'CREATE_PORFOLIO_HOLDING_SUCCESS'\r\nexport const CREATE_PORFOLIO_HOLDING_FAIL = 'CREATE_PORFOLIO_HOLDING_FAIL'","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  goals: [],\r\n  goal: {},\r\n  goalPerformance: {}\r\n}\r\n\r\nconst getGoalsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getGoalsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getGoalsSuccess', action)\r\n  return updateObject( state, {\r\n      goals: action.goals,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getGoalsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getGoalStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getGoalSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getGoalSuccess', action)\r\n  return updateObject( state, {\r\n      goal: action.goal,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getGoalFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst updateGoalStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst updateGoalSuccess = ( state, action ) => {\r\n  console.log('jadi reducer updateGoalSuccess', action)\r\n  return updateObject( state, {\r\n      goal: action.goal,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst updateGoalFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getGoalPerformanceStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getGoalPerformanceSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getGoalPerformanceSuccess', action)\r\n  return updateObject( state, {\r\n      goalPerformance: action.goalPerformance,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getGoalPerformanceFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.GET_GOAL_PERFORMANCE_START: return getGoalPerformanceStart( state, action )\r\n    case actionTypes.GET_GOAL_PERFORMANCE_SUCCESS: return getGoalPerformanceSuccess( state, action )\r\n    case actionTypes.GET_GOAL_PERFORMANCE_FAIL: return getGoalPerformanceFail( state, action )\r\n    case actionTypes.GET_GOALS_START: return getGoalsStart( state, action )\r\n    case actionTypes.GET_GOALS_SUCCESS: return getGoalsSuccess( state, action )\r\n    case actionTypes.GET_GOALS_FAIL: return getGoalsFail( state, action )\r\n    case actionTypes.GET_GOAL_START: return getGoalStart( state, action )\r\n    case actionTypes.GET_GOAL_SUCCESS: return getGoalSuccess( state, action )\r\n    case actionTypes.GET_GOAL_FAIL: return getGoalFail( state, action )\r\n    case actionTypes.UPDATE_GOAL_START: return updateGoalStart( state, action )\r\n    case actionTypes.UPDATE_GOAL_SUCCESS: return updateGoalSuccess( state, action )\r\n    case actionTypes.UPDATE_GOAL_FAIL: return updateGoalFail( state, action )\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  accountTypes: {},\r\n  accountType: [],\r\n  securities: [],\r\n  security: {},\r\n  allocations: [],\r\n  allocation: {},\r\n  models: [],\r\n  model: {},\r\n  modelHoldings: [],\r\n  modelHolding: {},\r\n  goals: [],\r\n  goal: {},\r\n  clientAdminService: {},\r\n  clientNucleusService: {},\r\n  clientsAdminService: [],\r\n  clientsNucleusService: [],\r\n  accounts: [],\r\n  account: {},\r\n  subscriptions: [],\r\n  subscription: {},\r\n  porfolios: [],\r\n  porfolio: {},\r\n  porfolioHoldings: [],\r\n  porfolioHolding: {},\r\n  decisionTree: {},\r\n  questionnaire: {},\r\n  nodes: [],\r\n  node: {},\r\n  nodeRelationships: [],\r\n  nodeRelationship: {},\r\n  transactionCodes: [],\r\n  portfolioTransactions: [],\r\n  portfolioAssetSize: []\r\n}\r\n\r\nconst createSecurity = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { securities: action.security });\r\n}\r\n\r\nconst createAllocation = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { allocations: action.allocation })\r\n}\r\n\r\nconst createModel = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { models: action.model });\r\n}\r\n\r\nconst createAccountType = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { accountTypes: action.accountType })\r\n}\r\n\r\nconst createModelHolding = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { modelHoldings: action.modelHolding })\r\n}\r\n\r\nconst createGoal = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { goals: action.goal })\r\n}\r\n\r\nconst createClientAdminService = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { clientsAdminService: action.clientAdminService })\r\n}\r\n\r\nconst createClientNucleusService = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { clientsNucleusService: action.clientNucleusService })\r\n}\r\n\r\nconst createAccount = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { accounts: action.account })\r\n}\r\n\r\nconst subscribeAccount = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { subscriptions: action.subscription })\r\n}\r\n\r\nconst createPortfolio = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { portfolios: action.porfolio })\r\n}\r\n\r\nconst createPortfolioHolding = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { porfolioHoldings: action.porfolioHolding })\r\n}\r\n\r\nconst createDecisionTree = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { decisionTree: action.decisionTree })\r\n}\r\n\r\nconst createQuestionnaire = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { questionnaire: action.questionnaire })\r\n}\r\n\r\nconst createNode = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { nodes: action.node })\r\n}\r\n\r\nconst createNodeRelationShip = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { nodeRelationships: action.nodeRelationship })\r\n}\r\n\r\nconst createTransactionCodes = (state, action) => {\r\n  console.log(\"action security\", action);\r\n  return updateObject(state, { transactionCodes: action.nodeRelationship })\r\n}\r\n\r\nconst createPortfolioTransactions = (state, action) => {\r\n  console.log(\"transaction action\", action);\r\n  return updateObject(state, { portfolioTransactions: action.portfolioTransactions })\r\n}\r\n\r\nconst createPortfolioAssetSize = (state, action) => {\r\n  console.log(\"transaction action\", action);\r\n  return updateObject(state, { portfolioAssetSize: action.portfolioTransactions })\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_ACCOUNT_TYPE: return createAccountType(state, action)\r\n    case actionTypes.CREATE_SECURITY: return createSecurity(state, action)\r\n    case actionTypes.CREATE_ALLOCATION: return createAllocation(state, action)\r\n    case actionTypes.CREATE_GOAL: return createGoal(state, action)\r\n    case actionTypes.CREATE_MODEL: return createModel(state, action)\r\n    case actionTypes.CREATE_MODEL_HOLDING: return createModelHolding(state, action)\r\n    case actionTypes.CREATE_CLIENT_NUCLEUS_SERVICE: return createClientNucleusService(state, action)\r\n    case actionTypes.CREATE_CLIENT_ADMIN_SERVICE: return createClientAdminService(state, action)\r\n    case actionTypes.CREATE_ACCOUNT: return createAccount(state, action)\r\n    case actionTypes.CREATE_PORTFOLIO: return createPortfolio(state, action)\r\n    case actionTypes.CREATE_PORTFOLIO_HOLDING: return createPortfolioHolding(state, action)\r\n    case actionTypes.SUBSCRIBE_ACCOUNT: return subscribeAccount(state, action)\r\n    case actionTypes.CREATE_DECISION_TREE: return createDecisionTree(state, action)\r\n    case actionTypes.CREATE_QUESTIONNAIRE: return createQuestionnaire(state, action)\r\n    case actionTypes.CREATE_NODE: return createNode(state, action)\r\n    case actionTypes.CREATE_NODE_RELATIONSHIP: return createNodeRelationShip(state, action)\r\n    case actionTypes.CREATE_TRANSACTION_CODES: return createTransactionCodes(state, action)\r\n    case actionTypes.CREATE_PORTFOLIO_TRANSACTIONS: return createPortfolioTransactions(state, action)\r\n    case actionTypes.CREATE_PORTFOLIO_ASSET_SIZE: return createPortfolioAssetSize(state, action)\r\n      default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  questionnaires: [],\r\n  nodes: [],\r\n  nodeRelationships: [],\r\n  allocations: [],\r\n  goal: {}\r\n}\r\n\r\nconst getQuestionnairesStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getQuestionnairesSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getQuestionnairesSuccess', action)\r\n  return updateObject( state, {\r\n      questionnaires: action.questionnaires,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getQuestionnairesFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getNodesStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getNodesSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getNodesSuccess', action)\r\n  return updateObject( state, {\r\n      nodes: action.nodes,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getNodesFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getNodeRelationshipsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getNodeRelationshipsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getNodeRelationshipsSuccess', action)\r\n  return updateObject( state, {\r\n      nodeRelationships: action.nodeRelationships,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getNodeRelationshipsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAllocationsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAllocationsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAllocationsSuccess', action)\r\n  return updateObject( state, {\r\n      allocations: action.allocations,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAllocationsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n      case actionTypes.GET_ALLOCATIONS_START: return getAllocationsStart( state, action )\r\n      case actionTypes.GET_ALLOCATIONS_SUCCESS: return getAllocationsSuccess( state, action )\r\n      case actionTypes.GET_ALLOCATIONS_FAIL: return getAllocationsFail( state, action )\r\n      case actionTypes.GET_NODE_RELATIONSHIPS_START: return getNodeRelationshipsStart( state, action )\r\n      case actionTypes.GET_NODE_RELATIONSHIPS_SUCCESS: return getNodeRelationshipsSuccess( state, action )\r\n      case actionTypes.GET_NODE_RELATIONSHIPS_FAIL: return getNodeRelationshipsFail( state, action )\r\n      case actionTypes.GET_NODES_START: return getNodesStart( state, action )\r\n      case actionTypes.GET_NODES_SUCCESS: return getNodesSuccess( state, action )\r\n      case actionTypes.GET_NODES_FAIL: return getNodesFail( state, action )\r\n      case actionTypes.GET_QUESTIONNAIRES_START: return getQuestionnairesStart( state, action )\r\n      case actionTypes.GET_QUESTIONNAIRES_SUCCESS: return getQuestionnairesSuccess( state, action )\r\n      case actionTypes.GET_QUESTIONNAIRES_FAIL: return getQuestionnairesFail( state, action )\r\n      default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  accounts: [],\r\n  accountTypes: [],\r\n  account: {},\r\n  accountAllocation: {},\r\n  accountPortifolio: {},\r\n  accountAssetSize: [],\r\n  fundings: [],\r\n  accountPortifolioHoldings: [],\r\n  model: {},\r\n  modelHoldings: [],\r\n  accountSubscription: {},\r\n  porfolioHolding: [],\r\n  date: ''\r\n}\r\n\r\nconst setAccount = (state, action) => {\r\n  console.log('jadi setAccount radi', action)\r\n  return updateObject(state, { account: action.account })\r\n}\r\n\r\nconst setDate = (state, action) => {\r\n  console.log('jadi setAccount radi', action)\r\n  return updateObject(state, { date: action.date })\r\n}\r\n\r\nconst getAccountsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountsSuccess', action)\r\n  return updateObject( state, {\r\n      accounts: action.accounts,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAccountsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountTypesStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountTypesSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountTypesSuccess', action)\r\n  return updateObject( state, {\r\n      accountTypes: action.accountTypes,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAccountTypesFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst createAccountStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst createAccountSuccess = ( state, action ) => {\r\n  console.log('jadi reducer createAccountSuccess', action)\r\n  return updateObject( state, {\r\n      account: action.account,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst createAccountFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst subscribeAccountStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst subscribeAccountSuccess = ( state, action ) => {\r\n  console.log('jadi reducer subscribeAccountSuccess', action)\r\n  return updateObject( state, {\r\n      accountSubscription: action.accountSubscription,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst subscribeAccountFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountAllocationStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountAllocationSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountAllocationSuccess', action)\r\n  return updateObject( state, {\r\n      accountAllocation: action.accountAllocation,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAccountAllocationFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountPortifolioStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountPortifolioSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountPortifolioSuccess', action)\r\n  return updateObject( state, {\r\n    accountPortifolio: action.accountPortifolio,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst getAccountPortifolioFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountFundingStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountFundingSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountFundingSuccess', action)\r\n  return updateObject( state, {\r\n    fundings: action.fundings,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst getAccountFundingFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountAssetSizeStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountAssetSizeSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountAssetSizeSuccess', action)\r\n  return updateObject( state, {\r\n    accountAssetSize: action.accountAssetSize,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst getAccountAssetSizeFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAccountPortifolioHoldingsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAccountPortifolioHoldingsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAccountPortifolioHoldingsSuccess', action)\r\n  return updateObject( state, {\r\n    accountAssetSize: action.accountAssetSize,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst getAccountPortifolioHoldingsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\n\r\nconst createPortfolioHoldingStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst createPortfolioHoldingSuccess = ( state, action ) => {\r\n  console.log('jadi reducer createPortfolioHoldingSuccess', action)\r\n  return updateObject( state, {\r\n    porfolioHolding: action.porfolioHolding,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst createPortfolioHoldingFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } )\r\n}\r\n  \r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_START: return getAccountPortifolioHoldingsStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_SUCCESS: return getAccountPortifolioHoldingsSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_FAIL: return getAccountPortifolioHoldingsFail( state, action )\r\n    case actionTypes.GET_ACCOUNT_ASSET_SIZE_START: return getAccountAssetSizeStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_ASSET_SIZE_SUCCESS: return getAccountAssetSizeSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_ASSET_SIZE_FAIL: return getAccountAssetSizeFail( state, action )\r\n    case actionTypes.GET_ACCOUNT_FUNDING_START: return getAccountFundingStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_FUNDING_SUCCESS: return getAccountFundingSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_FUNDING_FAIL: return getAccountFundingFail( state, action )\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_START: return getAccountPortifolioStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_SUCCESS: return getAccountPortifolioSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_PORTIFOLIO_FAIL: return getAccountPortifolioFail( state, action )\r\n    case actionTypes.GET_ACCOUNT_ALLOCATION_START: return getAccountAllocationStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_ALLOCATION_SUCCESS: return getAccountAllocationSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_ALLOCATION_FAIL: return getAccountAllocationFail( state, action )\r\n    case actionTypes.SUBSCRIBE_ACCOUNT_START: return subscribeAccountStart( state, action )\r\n    case actionTypes.SUBSCRIBE_ACCOUNT_SUCCESS: return subscribeAccountSuccess( state, action )\r\n    case actionTypes.SUBSCRIBE_ACCOUNT_FAIL: return subscribeAccountFail( state, action )\r\n    case actionTypes.CREATE_ACCOUNT_START: return createAccountStart( state, action )\r\n    case actionTypes.CREATE_ACCOUNT_SUCCESS: return createAccountSuccess( state, action )\r\n    case actionTypes.CREATE_ACCOUNT_FAIL: return createAccountFail( state, action )\r\n    case actionTypes.GET_ACCOUNTS_START: return getAccountsStart( state, action )\r\n    case actionTypes.GET_ACCOUNTS_SUCCESS: return getAccountsSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNTS_FAIL: return getAccountsFail( state, action )\r\n    case actionTypes.GET_ACCOUNT_TYPES_START: return getAccountTypesStart( state, action )\r\n    case actionTypes.GET_ACCOUNT_TYPES_SUCCESS: return getAccountTypesSuccess( state, action )\r\n    case actionTypes.GET_ACCOUNT_TYPES_FAIL: return getAccountTypesFail(state, action)\r\n    case actionTypes.SET_ACCOUNT: return setAccount(state, action)\r\n    case actionTypes.SET_DATE: return setDate(state, action)\r\n    case actionTypes.CREATE_PORFOLIO_HOLDING_START: return createPortfolioHoldingStart( state, action )\r\n    case actionTypes.CREATE_PORFOLIO_HOLDING_SUCCESS: return createPortfolioHoldingSuccess( state, action )\r\n    case actionTypes.CREATE_PORFOLIO_HOLDING_FAIL: return createPortfolioHoldingFail( state, action )\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  model: {},\r\n  modelHoldings: [],\r\n  securities: [],\r\n}\r\n\r\nconst retrieveModelStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst retrieveModelSuccess = ( state, action ) => {\r\n  console.log('jadi reducer retrieveModelSuccess', action)\r\n  return updateObject( state, {\r\n    model: action.model,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst retrieveModelFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getModelHoldingsStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getModelHoldingsSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getModelHoldingsSuccess', action)\r\n  return updateObject( state, {\r\n    modelHoldings: action.modelHoldings,\r\n    loading: false\r\n  })\r\n}\r\n\r\nconst getModelHoldingsFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAllSecuritiesFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAllSecuritiesStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAllSecuritiesSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAllSecuritiesSuccess', action)\r\n  return updateObject( state, {\r\n      securities: action.securities\r\n  } )\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.GET_ALL_SECURITIES_START: return getAllSecuritiesStart( state, action )\r\n    case actionTypes.GET_ALL_SECURITIES_SUCCESS: return getAllSecuritiesSuccess( state, action )\r\n    case actionTypes.GET_ALL_SECURITIES_FAIL: return getAllSecuritiesFail(state, action)\r\n    case actionTypes.RETRIEVE_MODEL_START: return retrieveModelStart( state, action )\r\n    case actionTypes.RETRIEVE_MODEL_SUCCESS: return retrieveModelSuccess( state, action )\r\n    case actionTypes.RETRIEVE_MODEL_FAIL: return retrieveModelFail( state, action )\r\n    case actionTypes.GET_MODEL_HOLDINGS_START: return getModelHoldingsStart( state, action )\r\n    case actionTypes.GET_MODEL_HOLDINGS_SUCCESS: return getModelHoldingsSuccess( state, action )\r\n    case actionTypes.GET_MODEL_HOLDINGS_FAIL: return getModelHoldingsFail(state, action)\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  allocation: {},\r\n  allocationPerformance: {},\r\n  allocationComposition: {}\r\n}\r\n\r\nconst getAllocationStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAllocationSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAllocationSuccess', action)\r\n  return updateObject( state, {\r\n      allocation: action.allocation,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAllocationFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAllocationPerformanceStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAllocationPerformanceSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAllocationPerformanceSuccess', action)\r\n  return updateObject( state, {\r\n      allocationPerformance: action.allocationPerformance,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAllocationPerformanceFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst getAllocationCompositionStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getAllocationCompositionSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getAllocationCompositionSuccess', action)\r\n  return updateObject( state, {\r\n      allocationComposition: action.allocationComposition,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getAllocationCompositionFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.GET_ALLOCATION_COMPOSITION_START: return getAllocationCompositionStart( state, action )\r\n    case actionTypes.GET_ALLOCATION_COMPOSITION_SUCCESS: return getAllocationCompositionSuccess( state, action )\r\n    case actionTypes.GET_ALLOCATION_COMPOSITION_FAIL: return getAllocationCompositionFail( state, action )\r\n    case actionTypes.GET_ALLOCATION_START: return getAllocationStart( state, action )\r\n    case actionTypes.GET_ALLOCATION_SUCCESS: return getAllocationSuccess( state, action )\r\n    case actionTypes.GET_ALLOCATION_FAIL: return getAllocationFail( state, action )\r\n    case actionTypes.GET_ALLOCATION_PERFORMANCE_START: return getAllocationPerformanceStart( state, action )\r\n    case actionTypes.GET_ALLOCATION_PERFORMANCE_SUCCESS: return getAllocationPerformanceSuccess( state, action )\r\n    case actionTypes.GET_ALLOCATION_PERFORMANCE_FAIL: return getAllocationPerformanceFail( state, action )\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n  funding: [],\r\n  loading: false\r\n}\r\n\r\nconst getFundingStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst getFundingSuccess = ( state, action ) => {\r\n  console.log('jadi reducer getFundingSuccess', action)\r\n  return updateObject( state, {\r\n      funding: action.funding,\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst getFundingFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst createFundingStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst createFundingSuccess = ( state, action ) => {\r\n  console.log('jadi reducer createFundingSuccess', action)\r\n  return updateObject( state, {\r\n      funding: [action.funding],\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst createFundingFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst createPortifolioAssetSizeStart = ( state, action ) => {\r\n  return updateObject( state, { loading: true } )\r\n}\r\n\r\nconst createPortifolioAssetSizeSuccess = ( state, action ) => {\r\n  console.log('jadi reducer createPortifolioAssetSizeSuccess', action)\r\n  return updateObject( state, {\r\n      loading: false\r\n  } )\r\n}\r\n\r\nconst createPortifolioAssetSizeFail = ( state, action ) => {\r\n  return updateObject( state, { loading: false } )\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_START: return createPortifolioAssetSizeStart( state, action )\r\n    case actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_SUCCESS: return createPortifolioAssetSizeSuccess( state, action )\r\n    case actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_FAIL: return createPortifolioAssetSizeFail( state, action )\r\n    case actionTypes.CREATE_FUNDING_START: return createFundingStart( state, action )\r\n    case actionTypes.CREATE_FUNDING_SUCCESS: return createFundingSuccess( state, action )\r\n    case actionTypes.CREATE_FUNDING_FAIL: return createFundingFail( state, action )\r\n    case actionTypes.GET_FUNDING_START: return getFundingStart( state, action )\r\n    case actionTypes.GET_FUNDING_SUCCESS: return getFundingSuccess( state, action )\r\n    case actionTypes.GET_FUNDING_FAIL: return getFundingFail( state, action )\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default reducer","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport updateStateReducer from './reducers/updateState'\r\nimport userReducer from './reducers/user'\r\nimport goalsReducer from './reducers/goals'\r\nimport initializeReducer from './reducers/initialize'\r\nimport questionnaireReducer from './reducers/questionnaire'\r\nimport accountsReducer from './reducers/accounts'\r\nimport modelReducer from './reducers/models'\r\nimport allocationReducer from './reducers/allocations'\r\nimport fundingReducer from './reducers/funding'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  updateState: updateStateReducer,\r\n  user: userReducer,\r\n  goals: goalsReducer,\r\n  initialize: initializeReducer,\r\n  questionnaire: questionnaireReducer,\r\n  accounts: accountsReducer,\r\n  allocations: allocationReducer,\r\n  models: modelReducer,\r\n  funding: fundingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","const auth = {\r\n  isAuthenticated: localStorage.getItem('userAccessToken') ? true : false,\r\n  // isAuthenticated: false,\r\n\r\n  authenticate(cb) {\r\n    this.isAuthenticated = true\r\n    setTimeout(cb, 100)\r\n  },\r\n  signout(cb) {\r\n    this.isAuthenticated = false\r\n    setTimeout(cb, 100)\r\n  }\r\n}\r\n\r\nexport default auth;","export const BASE_PATH = 'https://cors-proxy.singularity.is/https://sandbox.hydrogenplatform.com/nucleus/v1/';\r\n// export const CLIENT_CREDENTIALS = 'dd8ntr4fa7kevdcuudm8lmo9fe:1hsi865dxdmhzcptgl2zva67vv'; //Milos\r\nexport const CLIENT_CREDENTIALS = 'v956qdattolnt31zh9zhnwpib9:e5zh7ponrca8qf43zm1x3h4hxe'; // Mileta\r\nexport const AUTHORIZATION_PATH = 'https://cors-proxy.singularity.is/https://sandbox.hydrogenplatform.com/authorization/v1/oauth/token?grant_type=client_credentials';\r\nexport const ADMIN_SERVICE_PATH = 'https://cors-proxy.singularity.is/https://sandbox.hydrogenplatform.com/admin/v1/client';\r\nexport const AUTH_PATH = 'https://cors-proxy.singularity.is/https://sandbox.hydrogenplatform.com/authorization/v1/oauth/token?grant_type';\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { BASE_PATH, CLIENT_CREDENTIALS, AUTHORIZATION_PATH, ADMIN_SERVICE_PATH } from \"./configuration\";\r\n\r\nclass Initializer extends Component {\r\n\r\n  static getAccessToken = (callback) => {\r\n    const client_credentials = window.btoa(`${CLIENT_CREDENTIALS}`);\r\n    const headers = {\r\n      'Authorization': `Basic ${client_credentials}`\r\n    };\r\n    const options = {\r\n      url: `${AUTHORIZATION_PATH}`,\r\n      method: 'POST',\r\n      headers: headers\r\n    };\r\n\r\n    axios\r\n      .request(options, (err) => {\r\n        if (err) return err;\r\n      })\r\n      .then(res => {\r\n        callback(res);\r\n      })\r\n      .catch(err => console.log('error while getting data', err));\r\n  }\r\n\r\n  static isInitalized = (accessToken) => {\r\n    let promise = axios({\r\n      method: 'GET',\r\n      url: `${BASE_PATH}account_type`,\r\n      headers: { 'Authorization': `Bearer ${accessToken}` },\r\n      params: {\r\n        page: 0,\r\n        size: 25,\r\n        ascending: false\r\n      }\r\n    })\r\n      .then(res => {\r\n        const check = res.data.content.map(acc => {\r\n          return acc.name\r\n        });\r\n        return check;\r\n      })\r\n      .catch(err => console.log('error while getting account type', err))\r\n    return promise;\r\n  }\r\n\r\n  static getAllAllocations = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}allocation`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static updateAllocation = async (accessToken, allocationID, node_map) => {\r\n    const promise = await axios({\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      data: {\r\n        node_map: node_map\r\n      },\r\n      url: `${BASE_PATH}allocation/${allocationID}`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static updateAccount = async (payload) => {\r\n    const { accessToken, goals, account_id } = payload;\r\n    const promise = await axios({\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      data: {\r\n        goals\r\n      },\r\n      url: `${BASE_PATH}account/${account_id}`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static deleteAllAccountTypes = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}account_type`\r\n    })\r\n\r\n    promise.data.content.map(async accountType => {\r\n\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}account_type/${accountType.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n\r\n  }\r\n  static getAllAccountTypes = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}account_type`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static deleteAllSecurities = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}security`\r\n    })\r\n\r\n    promise.data.content.map(async security => {\r\n\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}security/${security.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static getAllSecurities = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}security`\r\n    })\r\n\r\n    return promise;\r\n  }\r\n\r\n  static deleteAllAllocations = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}allocation`\r\n    })\r\n\r\n    promise.data.content.map(async allocation => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}allocation/${allocation.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n\r\n\r\n  }\r\n\r\n  static deleteAllGoals = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}goal`\r\n    })\r\n\r\n    promise.data.content.map(async goal => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}goal/${goal.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static getAllGoals = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}goal`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static getAllPortfolios = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}portfolio`\r\n    })\r\n    return promise;\r\n  }\r\n  \r\n\r\n\r\n  static updateGoal = async (accessToken, payload) => {\r\n    const promise = await axios({\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      data: {\r\n        questionnaire_id: payload.questionnaire_id\r\n      },\r\n      url: `${BASE_PATH}goal/${payload.goal_id}`\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static deleteAllClientsNucleus = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}client`\r\n    })\r\n\r\n    promise.data.content.map(async client => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}client/${client.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static deleteAllPortfolioAssetSize = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}portfolio_asset_size`\r\n    })\r\n\r\n    promise.data.content.map(async assetSize => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}portfolio_asset_size/${assetSize.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n\r\n  static getAllAdminServiceClients = async (payload, accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        \"filter\": `username==${payload}`\r\n      },\r\n      url: `${ADMIN_SERVICE_PATH}`,\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static getAllNucleusServiceClients = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}client`,\r\n    })\r\n    return promise;\r\n  }\r\n\r\n\r\n  static deleteAllAccounts = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}account`\r\n    });\r\n\r\n    promise.data.content.map(async account => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}account/${account.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    });\r\n  }\r\n\r\n  static deleteAllPortfolios = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}portfolio`\r\n    })\r\n\r\n    promise.data.content.map(async portfolio => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}portfolio/${portfolio.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    });\r\n  }\r\n\r\n  static deleteAllPortfolioHoldings = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}portfolio_holding`\r\n    })\r\n\r\n    promise.data.content.map(async portfolioHolding => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}portfolio_holding/${portfolioHolding.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static deleteAllModels = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}model`\r\n    })\r\n\r\n    promise.data.content.map(async model => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}model/${model.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n  static deleteAllDecisionTrees = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}decision_tree`\r\n    })\r\n\r\n    promise.data.content.map(async tree => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}decision_tree/${tree.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static deleteAllQuestionnaires= async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}questionnaire`\r\n    })\r\n\r\n    promise.data.content.map(async questionnaire => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}questionnaire/${questionnaire.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n\r\n  }\r\n\r\n  static deleteAllNodes = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}node`\r\n    })\r\n\r\n    promise.data.content.map(async node => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}node/${node.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n\r\n  }\r\n\r\n  static getAllNodes = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}node`\r\n    })\r\n\r\n    return promise;\r\n  }\r\n\r\n  static deleteAllNodeRelationships = async (accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      params: {\r\n        page: 0,\r\n        size: 25\r\n      },\r\n      url: `${BASE_PATH}node_relationship`\r\n    })\r\n\r\n    promise.data.content.map(async nodeRelationship => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}node_relationship/${nodeRelationship.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n\r\n  }\r\n\r\n  static authenticateUser = async (payload) => {\r\n    const { username, password } = payload;\r\n    const client_credentials = window.btoa(CLIENT_CREDENTIALS);\r\n    const promise = await axios({\r\n      headers: {\r\n        'Authorization': `Basic ${client_credentials}`\r\n      },\r\n      url: `https://sandbox.hydrogenplatform.com/authorization/v1/oauth/token?grant_type=password&username=${username}&password=${password}`,\r\n      method: 'POST',\r\n    })\r\n    return promise;\r\n  }\r\n\r\n  static allocationComposition = async (accessToken, payload) => {  \r\n    const { current_weight, strategic_weight, date, model_id, allocation_id } = payload;\r\n    console.log(\"payloaddddd\", payload);\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}allocation_composition`,\r\n      data: {\r\n        current_weight: current_weight,\r\n        strategic_weight: strategic_weight,\r\n        date: date,\r\n        allocation_id: allocation_id,\r\n        model_id: model_id\r\n      }\r\n    })\r\n    return response;\r\n  }\r\n\r\n  static deleteAllocationComposition = async (accessToken, payload) => {  \r\n    const { current_weight, strategic_weight, date, model_id, allocation_id } = payload;\r\n    console.log(\"payloaddddd\", payload);\r\n    const promise = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}allocation_composition`,\r\n      data: {\r\n        current_weight: current_weight,\r\n        strategic_weight: strategic_weight,\r\n        date: date,\r\n        allocation_id: allocation_id,\r\n        model_id: model_id\r\n      }\r\n    })\r\n    promise.data.content.map(async composition => {\r\n      const response = await axios({\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'DELETE',\r\n        url: `${BASE_PATH}allocation_composition/${composition.id}`\r\n      });\r\n      console.log(\"response\", response);\r\n      return response;\r\n    })\r\n  }\r\n\r\n  static getAccountPortifolio = async (payload, accessToken) => {\r\n    const promise = await axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}portfolio`,\r\n      params: {\r\n        \"filter\": `account_id==${payload}`\r\n      }\r\n    })\r\n    return promise;\r\n  }\r\n\r\n\r\n  static clearAll = async (accessToken) => {\r\n    await this.deleteAllAccountTypes(accessToken);\r\n    await this.deleteAllSecurities(accessToken);\r\n    await this.deleteAllAllocations(accessToken);\r\n    await this.deleteAllGoals(accessToken);\r\n    await this.deleteAllAccounts(accessToken);\r\n    await this.deleteAllPortfolios(accessToken);\r\n    await this.deleteAllPortfolioHoldings(accessToken);\r\n    await this.deleteAllModels(accessToken);\r\n    await this.deleteAllQuestionnaires(accessToken);\r\n    await this.deleteAllDecisionTrees(accessToken);\r\n    await this.deleteAllNodes(accessToken);\r\n    await this.deleteAllNodeRelationships(accessToken);\r\n    await this.deleteAllClientsNucleus(accessToken);\r\n    await this.deleteAllPortfolioAssetSize(accessToken);\r\n    return true;\r\n  };\r\n}\r\n\r\n\r\nexport default Initializer;","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { CLIENT_CREDENTIALS, AUTH_PATH, BASE_PATH } from '../../configuration';\r\n\r\nexport const setAccessToken = (payload) => {\r\n  return {\r\n      type: actionTypes.SET_ACCESS_TOKEN,\r\n      accessToken: payload,\r\n  }\r\n}\r\n\r\nexport const authenticateUserSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.AUTHENTICATE_USER_SUCCESS,\r\n      accessToken: res.data.access_token,\r\n      username: res.username\r\n  }\r\n}\r\n\r\nexport const authenticateUserFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.AUTHENTICATE_USER_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const authenticateUserStart = () => {\r\n  return {\r\n      type: actionTypes.AUTHENTICATE_USER_START\r\n  }\r\n}\r\n\r\nexport const authenticateUser = payload => (dispatch, getState) => {\r\n  const { username, password } = payload;\r\n  const client_credentials = window.btoa(CLIENT_CREDENTIALS);\r\n  const headers = {\r\n    'Authorization': `Basic ${client_credentials}`\r\n  };\r\n  const options = {\r\n    url: `${AUTH_PATH}=password&username=${username}&password=${password}`,\r\n    method: 'POST',\r\n    headers: headers\r\n  };\r\n    dispatch(authenticateUserStart())\r\n    axios\r\n      .request(options, (err) => {\r\n        if (err) dispatch(authenticateUserFail(err));\r\n      })\r\n      .then(res => {\r\n        console.log('jadi authenticateUser res', res);\r\n        res.username = username;\r\n        localStorage['userAccessToken'] = res.data.access_token;\r\n        localStorage['username'] = username;\r\n        dispatch(authenticateUserSuccess(res));\r\n        dispatch(getUser({username, accessToken: res.data.access_token}));\r\n      })\r\n      .catch(err => dispatch(authenticateUserFail(err)));\r\n}\r\n\r\nexport const getUserSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_USER_SUCCESS,\r\n      user: res.data.content[0]\r\n  }\r\n}\r\n\r\nexport const getUserFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_USER_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getUserStart = () => {\r\n  return {\r\n      type: actionTypes.GET_USER_START\r\n  }\r\n}\r\n\r\nexport const getUser = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { username } = payload;\r\n  console.log('jadi POZIVA SEEEEEEE getUser', username, accessToken);\r\n    dispatch(getUserStart())\r\n    axios({\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}client`,\r\n      params: {\"filter\": `username==${username}`}\r\n    })\r\n      .then(res => {\r\n        console.log('jadi getUser res', res);\r\n        dispatch(getUserSuccess(res));\r\n      })\r\n      .catch(err => dispatch(getUserFail(err)))\r\n}\r\n\r\nexport const getClientsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENTS_SUCCESS,\r\n      accessToken: res.data.access_token\r\n  }\r\n}\r\n\r\nexport const getClientsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENTS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getClientsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_CLIENTS_START\r\n  }\r\n}\r\n\r\nexport const getClients = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getClients accessToken', accessToken)\r\n  // const { username } = payload;\r\n  dispatch(getClientsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}client`,\r\n    // params: username ? {\r\n    //   \"filter\": `username==${username}`\r\n    // } : {}\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getClients res', res);\r\n      dispatch(getClientsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getClientsFail(err)))\r\n\r\n}\r\n\r\nexport const getClientAssetSizeSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ASSET_SIZE_SUCCESS,\r\n      clientAssetSize: res.data\r\n  }\r\n}\r\n\r\nexport const getClientAssetSizeFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ASSET_SIZE_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getClientAssetSizeStart = () => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ASSET_SIZE_START\r\n  }\r\n}\r\n\r\nexport const getClientAssetSize = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getClientAssetSize ULAAAAAZZZZASIIII', payload);\r\n  dispatch(getClientAssetSizeStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}client/${payload}/asset_size`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getClientAssetSize res', res);\r\n      dispatch(getClientAssetSizeSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getClientAssetSizeFail(err)))\r\n}\r\n\r\nexport const getClientAnnualVolumeSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ANN_VOLUME_SUCCESS,\r\n      clientAnnualVolume: res.data\r\n  }\r\n}\r\n\r\nexport const getClientAnnualVolumeFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ANN_VOLUME_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getClientAnnualVolumeStart = () => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_ANN_VOLUME_START\r\n  }\r\n}\r\n\r\nexport const getClientAnnualVolume = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getClientAnnualVolume ULAAAAAZZZZASIIII');\r\n  dispatch(getClientAnnualVolumeStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}client/${payload}/performance?stat=ann_vol`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getClientAnnualVolume res', res);\r\n      dispatch(getClientAnnualVolumeSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getClientAnnualVolumeFail(err)))\r\n}\r\n\r\nexport const getClientCumulativeReturnSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_CUM_RETURN_SUCCESS,\r\n      clientCumulativeReturn: res.data\r\n  }\r\n}\r\n\r\nexport const getClientCumulativeReturnFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_CUM_RETURN_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getClientCumulativeReturnStart = () => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_CUM_RETURN_START\r\n  }\r\n}\r\n\r\nexport const getClientCumulativeReturn = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getClientCumulativeReturn ULAAAAAZZZZASIIII');\r\n  dispatch(getClientCumulativeReturnStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}client/${payload}/performance?stat=cum_return`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getClientCumulativeReturn res', res);\r\n      dispatch(getClientCumulativeReturnSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getClientCumulativeReturnFail(err)))\r\n}\r\n\r\nexport const getClientHoldingsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_HOLDING_SUCCESS,\r\n      clientHoldings: res.data\r\n  }\r\n}\r\n\r\nexport const getClientHoldingsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_HOLDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getClientHoldingsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_CLIENT_HOLDING_START\r\n  }\r\n}\r\n\r\nexport const getClientHoldings = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getClientHoldings ULAAAAAZZZZASIIII');\r\n  dispatch(getClientHoldingsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    // url: `${BASE_PATH}portfolio_holding`,\r\n    url: `${BASE_PATH}client/${payload}/holding?order_by=date`,\r\n    // params: {\r\n    //   \"filter\": `account_id==${payload}`\r\n    // }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getClientHoldings res', res);\r\n      dispatch(getClientHoldingsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getClientHoldingsFail(err)))\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const getGoalsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_GOALS_SUCCESS,\r\n      goals: res.data.content\r\n  }\r\n}\r\n\r\nexport const getGoalsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_GOALS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getGoalsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_GOALS_START\r\n  }\r\n}\r\n\r\nexport const getGoals = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getGoals accessToken', accessToken);\r\n  dispatch(getGoalsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}goal`,\r\n    // params: username ? {\r\n    //   \"filter\": `username==${username}`\r\n    // } : {}\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getGoals res', res);\r\n      dispatch(getGoalsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getGoalsFail(err)))\r\n}\r\n\r\nexport const getGoalSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_SUCCESS,\r\n      goal: res.data\r\n  }\r\n}\r\n\r\nexport const getGoalFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getGoalStart = () => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_START\r\n  }\r\n}\r\n\r\nexport const getGoal = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getGoal accessToken', accessToken);\r\n  dispatch(getGoalStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}goal/${payload}`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getGoal res', res);\r\n      dispatch(getGoalSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getGoalFail(err)))\r\n}\r\n\r\nexport const updateGoalSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.UPDATE_GOAL_SUCCESS,\r\n      goal: res.data\r\n  }\r\n}\r\n\r\nexport const updateGoalFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.UPDATE_GOAL_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const updateGoalStart = () => {\r\n  return {\r\n      type: actionTypes.UPDATE_GOAL_START\r\n  }\r\n}\r\n\r\nexport const updateGoal = payload => (dispatch, getState) => {\r\n  const { accessToken, name, type, category, goal_amount, is_decumulation } = getState().user;\r\n  const { id } = payload;\r\n  console.log('jadi updateGoal accessToken', accessToken);\r\n  dispatch(updateGoalStart())\r\n  axios({\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}goal/${id}`,\r\n    data: {\r\n      name,\r\n      type,\r\n      category,\r\n      goal_amount,\r\n      is_decumulation    \r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi updateGoal res', res);\r\n      dispatch(updateGoalSuccess(res));\r\n    })\r\n    .catch(err => dispatch(updateGoalFail(err)))\r\n}\r\n\r\nexport const getGoalPerformanceSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_PERFORMANCE_SUCCESS,\r\n      goalPerformance: res.data\r\n  }\r\n}\r\n\r\nexport const getGoalPerformanceFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_PERFORMANCE_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getGoalPerformanceStart = () => {\r\n  return {\r\n      type: actionTypes.GET_GOAL_PERFORMANCE_START\r\n  }\r\n}\r\n\r\nexport const getGoalPerformance = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { goalId, userId } = payload;\r\n  console.log('jadi getGoalPerformance accessToken', accessToken);\r\n  dispatch(getGoalPerformanceStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}goal/${goalId}/performance?client_id=${userId}&stat=annualized_return_period`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getGoalPerformance res', res);\r\n      dispatch(getGoalPerformanceSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getGoalPerformanceFail(err)))\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { subscribeAccount } from './initialize';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const setAccount = (payload) => {\r\n  return {\r\n      type: actionTypes.SET_ACCOUNT,\r\n      account: payload,\r\n  }\r\n}\r\n\r\nexport const setDate = (payload) => {\r\n  return {\r\n      type: actionTypes.SET_DATE,\r\n      date: payload,\r\n  }\r\n}\r\n\r\nexport const getAccountTypesSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_TYPES_SUCCESS,\r\n      accountTypes: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAccountTypesFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_TYPES_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountTypesStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_TYPES_START\r\n  }\r\n}\r\n\r\nexport const getAccountTypes = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccountTypes accessToken', accessToken);\r\n  dispatch(getAccountTypesStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account_type`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountTypes res', res);\r\n      dispatch(getAccountTypesSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountTypesFail(err)))\r\n}\r\n\r\nexport const getAccountsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNTS_SUCCESS,\r\n      accounts: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAccountsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNTS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNTS_START\r\n  }\r\n}\r\n\r\nexport const getAccounts = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccounts accessToken', accessToken);\r\n  dispatch(getAccountsStart())\r\n  await axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccounts res', res);\r\n      dispatch(getAccountsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountsFail(err)))\r\n}\r\n\r\nexport const createAccountSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.CREATE_ACCOUNT_SUCCESS,\r\n      account: res.data\r\n  }\r\n}\r\n\r\nexport const createAccountFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.CREATE_ACCOUNT_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const createAccountStart = () => {\r\n  return {\r\n      type: actionTypes.CREATE_ACCOUNT_START\r\n  }\r\n}\r\n\r\nexport const createAccountt = payload => (dispatch, getState) => {\r\n  const { accessToken, name } = getState().user;\r\n  const { accountTypeId, clientId, isDecomulation, goalId, goalAmount, decumulationHorizon, accumulationHorizon, currencyCode, accountNumber, accountName } = payload;\r\n  console.log('jadi createAccount accessToken', accessToken);\r\n  dispatch(createAccountStart())\r\n  axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account`,\r\n    data: {\r\n      name: accountName,\r\n      account_type_id: accountTypeId,\r\n      currency_code: currencyCode,\r\n      account_number: accountNumber,\r\n      clients: [{\r\n        client_id: clientId,\r\n        client_account_association_type: 'owner'\r\n      }],\r\n      goals: isDecomulation ? [{\r\n        goal_id: goalId,\r\n        goal_amount: goalAmount,\r\n        decumulation_horizon: decumulationHorizon\r\n      }] : [{\r\n        goal_id: goalId,\r\n        goal_amount: goalAmount,\r\n         accumulation_horizon: accumulationHorizon\r\n      }]\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi createAccount res', res);\r\n      dispatch(createAccountSuccess(res));\r\n      payload.accountId = res.data.id\r\n      dispatch(subscribeAccountt(payload))\r\n    })\r\n    .catch(err => dispatch(createAccountFail(err)))\r\n}\r\n\r\nexport const subscribeAccountSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.SUBSCRIBE_ACCOUNT_SUCCESS,\r\n      accountSubscription: res.data[0]\r\n  }\r\n}\r\n\r\nexport const subscribeAccountFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.SUBSCRIBE_ACCOUNT_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const subscribeAccountStart = () => {\r\n  return {\r\n      type: actionTypes.SUBSCRIBE_ACCOUNT_START\r\n  }\r\n}\r\n\r\nexport const subscribeAccountt = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { allocationId, goalId, accountId } = payload;\r\n  dispatch(subscribeAccountStart())\r\n  axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account/${accountId}/subscribe`,\r\n    data: {\r\n      current_weight: 100,\r\n      strategic_weight: 100,\r\n      allocation_id: allocationId,\r\n      goal_id: goalId,\r\n      date: \"2018-06-28\"\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi subscribeAccount res', res);\r\n      dispatch(subscribeAccountSuccess(res));\r\n    })\r\n    .catch(err => dispatch(subscribeAccountFail(err)))\r\n}\r\n\r\nexport const getAccountAllocationSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_SUCCESS,\r\n      accountAllocation: res.data.content[0]\r\n  }\r\n}\r\n\r\nexport const getAccountAllocationFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountAllocationStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_START\r\n  }\r\n}\r\n\r\nexport const getAccountAllocation = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccountAllocation getAccountAllocation>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>..', payload);\r\n  dispatch(getAccountAllocationStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account_allocation`,\r\n    params: {\r\n      \"filter\": `account_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountAllocation res', res);\r\n      dispatch(getAccountAllocationSuccess(res));\r\n    })\r\n    .catch(err => {\r\n      console.log('jadi getAccountAllocation err', err);\r\n      dispatch(getAccountAllocationFail(err))})\r\n}\r\n\r\nexport const getAccountPortifolioSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_SUCCESS,\r\n      accountPortifolio: res.data.content[0]\r\n  }\r\n}\r\n\r\nexport const getAccountPortifolioFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\n\r\nexport const getAccountPortifolioStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_START\r\n  }\r\n}\r\n\r\nexport const getAccountPortifolio = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccountPortifolio paylodad', payload);\r\n  dispatch(getAccountPortifolioStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio`,\r\n    params: {\r\n      \"filter\": `account_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountPortifolio res', res);\r\n      dispatch(getAccountPortifolioSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountPortifolioFail(err)))\r\n}\r\n\r\nexport const getAccountFundingSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_FUNDING_SUCCESS,\r\n      fundings: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAccountFundingFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_FUNDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountFundingStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_FUNDING_START\r\n  }\r\n}\r\n\r\nexport const getAccountFunding = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccountFunding accessToken', accessToken);\r\n  dispatch(getAccountFundingStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}funding`,\r\n    params: {\r\n      \"filter\": `account_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountFunding res', res);\r\n      dispatch(getAccountFundingSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountFundingFail(err)))\r\n}\r\n\r\nexport const getAccountAssetSizeSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ASSET_SIZE_SUCCESS,\r\n      accountAssetSize: res.data\r\n  }\r\n}\r\n\r\nexport const getAccountAssetSizeFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ASSET_SIZE_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountAssetSizeStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ASSET_SIZE_START\r\n  }\r\n}\r\n\r\nexport const getAccountAssetSize = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAccountAssetSize accessToken', accessToken);\r\n  dispatch(getAccountAssetSizeStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account/${payload}/asset_size`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountAssetSize res', res);\r\n      dispatch(getAccountAssetSizeSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountAssetSizeFail(err)))\r\n}\r\n\r\nexport const getAccountPortifolioHoldingsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_SUCCESS,\r\n      accountPortifolioHoldings: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAccountPortifolioHoldingsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAccountPortifolioHoldingsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_PORTIFOLIO_HOLDING_START\r\n  }\r\n}\r\n\r\nexport const getAccountPortifolioHoldings = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  dispatch(getAccountPortifolioHoldingsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_holding`,\r\n    params: {\r\n      \"filter\": `account_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAccountPortifolioHoldings res', res);\r\n      dispatch(getAccountPortifolioHoldingsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAccountPortifolioHoldingsFail(err)))\r\n}\r\n\r\nexport const createPortfolioHoldingSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.CREATE_PORFOLIO_HOLDING_SUCCESS,\r\n      porfolioHolding: res.data\r\n  }\r\n}\r\n\r\nexport const createPortfolioHoldingFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.CREATE_PORFOLIO_HOLDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const createPortfolioHoldingStart = () => {\r\n  return {\r\n      type: actionTypes.CREATE_PORFOLIO_HOLDING_START\r\n  }\r\n}\r\n\r\nexport const createPortfolioHoldingg = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { amount, shares, date, weight, security_id, portfolio_id } = payload;\r\n  dispatch(createPortfolioHoldingStart())\r\n  axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_holding`,\r\n    data: {\r\n      amount: amount,\r\n      shares: shares,\r\n      date: date,\r\n      weight: weight,\r\n      security_id: security_id,\r\n      portfolio_id: portfolio_id\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi createPortfolioHolding res', res);\r\n      dispatch(createPortfolioHoldingSuccess(res));\r\n    })\r\n    .catch(err => dispatch(createPortfolioHoldingFail(err)))\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { subscribeAccount } from './initialize';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const retrieveModelSuccess = (res) => {\r\n  return {\r\n      type: actionTypes.RETRIEVE_MODEL_SUCCESS,\r\n      model: res.data\r\n  }\r\n}\r\n\r\nexport const retrieveModelFail = (error) => {\r\n  return {\r\n    type: actionTypes.RETRIEVE_MODEL_FAIL,\r\n  }\r\n}\r\n\r\nexport const retrieveModelStart = () => {\r\n  return {\r\n      type: actionTypes.RETRIEVE_MODEL_START\r\n  }\r\n}\r\n\r\n \r\nexport const retrieveModel = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { model_id } = payload;\r\n  dispatch(retrieveModelStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}model/${model_id}`,\r\n  })\r\n    .then(res => {\r\n      dispatch(retrieveModelSuccess(res));\r\n    })\r\n    .catch(err => dispatch(retrieveModelFail(err)))\r\n}\r\n\r\n\r\nexport const getModelHoldingsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_MODEL_HOLDINGS_SUCCESS,\r\n      modelHoldings: res.data.content\r\n  }\r\n}\r\n\r\nexport const getModelHoldingsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_MODEL_HOLDINGS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getModelHoldingsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_MODEL_HOLDINGS_START\r\n  }\r\n}\r\n\r\nexport const getModelHoldings = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log(\"paloaddddd\", payload);\r\n  dispatch(getModelHoldingsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}model_holding`,\r\n    params: {\r\n      \"filter\": `model_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getModelHoldings res', res);\r\n      dispatch(getModelHoldingsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getModelHoldingsFail(err)))\r\n}\r\n\r\nexport const getAllSecuritiesSuccess = (res) => {\r\n  return {\r\n      type: actionTypes.GET_ALL_SECURITIES_SUCCESS,\r\n      securities: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAllSecuritiesFail = (error) => {\r\n  return {\r\n    type: actionTypes.GET_ALL_SECURITIES_FAIL,\r\n  }\r\n}\r\n\r\nexport const getAllSecuritiesStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ALL_SECURITIES_START\r\n  }\r\n}\r\n\r\n \r\nexport const getAllSecurities = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  dispatch(getAllSecuritiesStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}security`,\r\n  })\r\n    .then(res => {\r\n      dispatch(getAllSecuritiesSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAllSecuritiesFail(err)))\r\n}","import React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FoldingCube } from 'better-react-spinkit'\r\n\r\nclass SpinnerComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-container\">\r\n          <FoldingCube size={100} color='#26B4FF'/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpinnerComponent;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Initializer from './Initializer';\r\nimport './App.css';\r\nimport { setAccessToken } from './store/actions';\r\nimport SpinnerComponent from './components/SpinnerComponent';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accessToken: '',\r\n      isAccountExists: false\r\n    }; \r\n  }\r\n  componentDidMount() {\r\n    const { getAccessToken } = Initializer;\r\n    const { setAccessToken } = this.props;\r\n    getAccessToken((response) => {\r\n      this.setState({ accessToken: response.data.access_token });\r\n      localStorage['accessToken'] = response.data.access_token;\r\n      // setAccessToken(response.data.access_token);\r\n      this.getAccountTypes();\r\n    });\r\n  }\r\n\r\n  getAccountTypes = () => {\r\n    const { accessToken } = this.state;\r\n    const { isInitalized } = Initializer;\r\n\r\n    isInitalized(accessToken)\r\n      .then((isAccountExists) => {\r\n        isAccountExists && this.setState({ isAccountExists: true });\r\n      });\r\n  }\r\n\r\n  redirecting = () => {\r\n    const { isAccountExists } = this.state;\r\n    const { history } = this.props;\r\n    if (isAccountExists) {\r\n      history.push('/initialize');\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const { isAccountExists, accessToken } = this.state;\r\n    const { history } = this.props;\r\n    if (accessToken === '') {\r\n      return (\r\n        <SpinnerComponent />\r\n      )\r\n    } else {\r\n      return (\r\n      // isAccountExists.length>0 ?\r\n      //     <Redirect to='/initialize'/>\r\n      //   : <Redirect to='/login' />)\r\n        <Redirect to='/login'  />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  accessToken: state.user.accessToken\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setAccessToken: payload => dispatch(setAccessToken(payload)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport '../styles/login.scss'\r\nimport auth from '../auth';\r\n\r\nimport { authenticateUser, setDate } from '../store/actions/index'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      credentials: {\r\n        username: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        redirectToReferrer: false,\r\n        invalidCredentials: false,\r\n        userAccessToken: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.userAccessToken !== prevProps.userAccessToken) {\r\n      const { userAccessToken } = this.props;\r\n      this.setState({ userAccessToken });\r\n    }\r\n  }\r\n\r\n  onValueChange(field, e) {\r\n    this.setState({\r\n      credentials: {\r\n        ...this.state.credentials,\r\n        [field]: field === 'rememberMe' ? e.target.checked : e.target.value\r\n      }\r\n    }, () => console.log(\"this.state.\", this.state.credentials))\r\n    this.setState({ invalidCredentials: false });\r\n  }\r\n\r\n  prevent(e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  login = () => {\r\n    const { username, password } = this.state.credentials;\r\n    const { userAccessToken } = this.state;\r\n    localStorage['userAccessToken'] = userAccessToken;\r\n    const { onAuthenticateUser, user, loading, onSetDate } = this.props;\r\n    console.log(\"loadingggg\", loading);\r\n\r\n    // if (loading && !userAccessToken) {\r\n    //   console.log(\"test1\");\r\n    //   this.setState({ invalidCredentials: true })\r\n    // } else if (!loading) {\r\n    //   console.log(\"test2\");\r\n      auth.authenticate(() => {\r\n        onAuthenticateUser({ username, password });\r\n        this.setState({ redirectToReferrer: true })\r\n      })\r\n      onSetDate('2020-02-03')\r\n    //  }\r\n   \r\n  }\r\n\r\n  // componentDidMount = () => {\r\n  //   const { userAccessToken } = this.props;\r\n  // }\r\n\r\n  render() {\r\n    const { username, password } = this.state.credentials;\r\n    const { onAuthenticateUser, userAccessToken, user, initialState } = this.props;\r\n    const { from } = this.props.location.state || { from: { pathname: '/dashboard' } };\r\n    const { redirectToReferrer, invalidCredentials } = this.state;\r\n    const client = initialState.clients[0];\r\n\r\n    console.log('jadi userAccessToken', user);\r\n    console.log('jadi redirectToReferrer', redirectToReferrer);\r\n    if (userAccessToken && user && user.id && redirectToReferrer) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <div className=\"authentication-wrapper authentication-3\">\r\n        <div className=\"authentication-inner\">\r\n          <div className=\"d-none d-lg-flex col-lg-8 align-items-center ui-bg-cover ui-bg-overlay-container p-5\" style={{ backgroundImage: `url('${process.env.PUBLIC_URL}/img/bg/21.jpg')` }}>\r\n            <div className=\"ui-bg-overlay bg-dark opacity-50\"></div>\r\n\r\n            <div className=\"w-100 text-white px-5\">\r\n              <h1 className=\"display-2 font-weight-bolder mb-4\">ENABLING FINTECH<br />INOVATION</h1>\r\n              <div className=\"text-large font-weight-light\">\r\n                Quickly add digital financial components to your business using ONE integrated platform.\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"d-flex col-lg-4 align-items-center bg-white p-5\">\r\n            <div className=\"d-flex col-sm-7 col-md-5 col-lg-12 px-0 px-xl-4 mx-auto\">\r\n              <div className=\"w-100\">\r\n\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  <div className=\"ui-w-60\">\r\n                    <div className=\"w-100 position-relative\" style={{ paddingBottom: '54%' }}>\r\n                      <svg className=\"w-100 h-100 position-absolute\" viewBox=\"0 0 148 80\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><defs><linearGradient id=\"a\" x1=\"46.49\" x2=\"62.46\" y1=\"53.39\" y2=\"48.2\" gradientUnits=\"userSpaceOnUse\"><stop stopOpacity=\".25\" offset=\"0\"></stop><stop stopOpacity=\".1\" offset=\".3\"></stop><stop stopOpacity=\"0\" offset=\".9\"></stop></linearGradient><linearGradient id=\"e\" x1=\"76.9\" x2=\"92.64\" y1=\"26.38\" y2=\"31.49\" xlinkHref=\"#a\"></linearGradient><linearGradient id=\"d\" x1=\"107.12\" x2=\"122.74\" y1=\"53.41\" y2=\"48.33\" xlinkHref=\"#a\"></linearGradient></defs><path className=\"fill-primary\" transform=\"translate(-.1)\" d=\"M121.36,0,104.42,45.08,88.71,3.28A5.09,5.09,0,0,0,83.93,0H64.27A5.09,5.09,0,0,0,59.5,3.28L43.79,45.08,26.85,0H.1L29.43,76.74A5.09,5.09,0,0,0,34.19,80H53.39a5.09,5.09,0,0,0,4.77-3.26L74.1,35l16,41.74A5.09,5.09,0,0,0,94.82,80h18.95a5.09,5.09,0,0,0,4.76-3.24L148.1,0Z\"></path><path transform=\"translate(-.1)\" d=\"M52.19,22.73l-8.4,22.35L56.51,78.94a5,5,0,0,0,1.64-2.19l7.34-19.2Z\" fill=\"url(#a)\"></path><path transform=\"translate(-.1)\" d=\"M95.73,22l-7-18.69a5,5,0,0,0-1.64-2.21L74.1,35l8.33,21.79Z\" fill=\"url(#e)\"></path><path transform=\"translate(-.1)\" d=\"M112.73,23l-8.31,22.12,12.66,33.7a5,5,0,0,0,1.45-2l7.3-18.93Z\" fill=\"url(#d)\"></path></svg>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <h4 className=\"text-center text-lighter font-weight-normal mt-5 mb-0\">Login to Your Account</h4>\r\n\r\n                <form className=\"my-5\">\r\n                  <Form.Group>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control className={invalidCredentials ? `invalid-login-input` : ``} value={this.state.credentials.username} onChange={e => this.onValueChange('username', e)} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label className=\"d-flex justify-content-between align-items-end\">\r\n                      <div>Password</div>\r\n                      {/* <a href=\"#d\" onClick={this.prevent} className=\"d-block small\">Forgot password?</a> */}\r\n                    </Form.Label>\r\n                    <Form.Control className={invalidCredentials ? `invalid-login-input` : ``} type=\"password\" value={this.state.credentials.password} onChange={e => this.onValueChange('password', e)} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Form.Label>Default credentials</Form.Label> <br/>\r\n                  <span>Username: {client.username}</span><br/>\r\n                    <span>Password: {client.password}</span><br />\r\n                    </Form.Group>\r\n                  <div className=\"d-flex justify-content-between align-items-center m-0\">\r\n                    {/* <Form.Check type=\"checkbox\" custom checked={this.state.credentials.rememberMe} onChange={e => this.onValueChange('rememberMe', e)} label=\"Remember me\" className=\"m-0\" id=\"login-remember-me\" /> */}\r\n                    <Button onClick={() => this.login()} variant=\"primary\">Sign In</Button>\r\n                  </div>\r\n                </form>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userAccessToken: state.user.userAccessToken,\r\n  user: state.user.user,\r\n  initialState: state.updateState,\r\n  loading: state.user.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAuthenticateUser: payload => dispatch(authenticateUser(payload)),\r\n  onSetDate: payload => dispatch(setDate(payload)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);","import React from 'react';\r\nimport SpinnerComponent from '../components/SpinnerComponent';\r\nimport { Card, Row, Col, Button, Dropdown, Form, InputGroup, Media, Tab, Tabs, Modal, FormControl } from 'react-bootstrap';\r\nimport * as Recharts from 'recharts';\r\nimport * as Chartjs from 'react-chartjs-2'\r\n\r\nimport {\r\n  Hover,\r\n  ChartTooltip,\r\n  ChartWrapperForLineChart,\r\n  LineChart,\r\n  AreaChart,\r\n  DonutChart,\r\n  ColorListTable,\r\n  ColorListTableRow,\r\n  ColorListTableCell,\r\n  BarChart,\r\n  InsightTabsContainer,\r\n  InsightTab\r\n\r\n} from '@hydrogenapi/react-components'\r\nimport '../styles/element/css/element.min.css'\r\nimport '../App.css'\r\n\r\nexport const Account = ({ goal, account, clientAssetSize, funding,  allocation, allocationComposition, currentBalance, modelHoldings, securities }) => {\r\n    const colors = ['#0DA694', '#4F0FDA', '#327fa8', '#133080', '#335fd6']\r\n  const data = (modelHoldings && modelHoldings.length > 0 && securities.length > 0) ? modelHoldings.map((mh, index) => {\r\n    const security = securities.find(s => s.id === mh.security_id);\r\n    let securityType;\r\n    if (security && security.ticker === 'VTI') securityType = 'Stocks';\r\n    if (security && security.ticker === 'BND') securityType = 'Bonds';\r\n    return {\r\n      value: mh.current_weight,\r\n      label: securityType,\r\n      asset_class: security.asset_class,\r\n      color: colors[index],\r\n    }\r\n  }) : [];\r\nconsole.log('jadi clientAssetSize>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', clientAssetSize)\r\nconsole.log('jadi goal>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', goal)\r\nconst accountGoal = account && account.id && account.goals.length > 0 ? account.goals[0] : {};\r\nreturn (\r\n  <div>\r\n        <Row noGutters className=\"row-bordered container-m-nx\">\r\n          <Card className=\"p-3 m-2 float-left allocation-info-card\">\r\n        <h4 className='font-weight-light card-allocation-name text-center'>{allocation.name}</h4>\r\n        <Dropdown.Divider />\r\n        <span className='font-weight-light'>{allocation.description}</span>\r\n        <Dropdown.Divider /> \r\n        <span className='font-weight-light mt-1'>Projected growth in <b> 10 years</b></span>\r\n        <Dropdown.Divider /> \r\n              {allocation.id && <span className='font-weight-light'>Risk level: <b>{allocation.name.substr(0,allocation.name.indexOf(' '))}</b></span>}\r\n            </Card>\r\n            <Card className=\"client-card-dashboard m-2 pt-4 flex-grow-1 float-right\">\r\n          <DonutChart\r\n              width={200}\r\n              height={250}\r\n              // data={[\r\n              //   {  value: 0.1, color: '#16D9F0' },\r\n              //   {  value: 0.2, color: '#0D96A6' },\r\n              // ]}\r\n              data={data.map(d => { return { value: d.value / 100, color: d.color, label: d.label } })}\r\n          />\r\n        <div className=\"client-table-dashboard pt-1\">\r\n           <ColorListTable data={data.map(d => { return { value: d.value, label: d.label, color: d.color } })}>\r\n                {\r\n                  data.map(d => {\r\n                    return (\r\n                      <ColorListTableRow>\r\n                        <ColorListTableCell>{d.asset_class}</ColorListTableCell>\r\n                        <ColorListTableCell>{d.value}%</ColorListTableCell>\r\n                      </ColorListTableRow>\r\n                    )\r\n                  })\r\n                }\r\n        </ColorListTable>\r\n        </div>\r\n\r\n       \r\n      </Card>\r\n            {/* <Card className=\"m-2 flex-grow-1 float-right d-flex justify-content-center\">\r\n              <Row className=\"\">\r\n              <div className=\"chart-info-dashboard float-left\">\r\n              <DonutChart\r\n                width={200}\r\n                height={300}\r\n                data={data.map(d => { return { value: d.value / 100, color: d.color, label: d.label } })}\r\n              />\r\n            </div>\r\n            <div className=\"info-table-dashboard model-holdings-table\">\r\n              <ColorListTable \r\n                data={data.map(d => { return { value: d.value, label: d.label, color: d.color } })}\r\n              >\r\n                {\r\n                  data.map(d => {\r\n                    return (\r\n                      <ColorListTableRow>\r\n                        <ColorListTableCell>{d.asset_class}</ColorListTableCell>\r\n                        <ColorListTableCell>{d.value}%</ColorListTableCell>\r\n                      </ColorListTableRow>\r\n                    )\r\n                  })\r\n                }\r\n              </ColorListTable>\r\n          </div>\r\n              </Row>\r\n            </Card> */}\r\n\r\n      </Row>\r\n      <Row noGutters className=\"row-bordered container-m-nx\">\r\n\r\n        <Col sm={6} md={3} lg={6} xl={3}>\r\n          <Card className=\"m-2 account-info-cards\">\r\n          <div className=\"d-flex align-items-center container-p-x py-4\">\r\n            <div className=\"icon-vertical-bar-chart display-4 text-primary\"></div>\r\n            <div className=\"ml-3\">\r\n              <div className=\"text-muted small\">Current Balance</div>\r\n              <div className=\"text-large\">${currentBalance}</div>\r\n            </div>\r\n          </div>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={6} md={3} lg={6} xl={3}>\r\n          <Card className=\"m-2 account-info-cards\">\r\n          <div className=\"d-flex align-items-center container-p-x py-4\">\r\n            <div className=\"icon-circle-dollar display-4 text-primary\"></div>\r\n            <div className=\"ml-3\">\r\n              <div className=\"text-muted small\">Recent Deposit</div>\r\n              <div className=\"text-large\">${funding.length > 0 ? funding[0].amount : '0'}</div>\r\n            </div>\r\n          </div>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={6} md={3} lg={6} xl={3}>\r\n          <Card className=\"m-2 account-info-cards\">\r\n            <div className=\"d-flex align-items-center container-p-x py-3\">\r\n            <div className=\"icon-goal display-4 text-primary\"></div>\r\n            <div className=\"ml-3\">\r\n              <div className=\"text-muted small\">Goal Target</div>\r\n              <div className=\"text-large\">{accountGoal.goal_amount}</div>\r\n              <span className=\"text-muted\">{`in ${accountGoal.accumulation_horizon || accountGoal.decumulation_horizon} years`}</span>\r\n            </div>\r\n          </div>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={6} md={3} lg={6} xl={3}>\r\n          <Card className=\"m-2 account-info-cards\">\r\n          <div className=\"d-flex align-items-center container-p-x py-4\">\r\n            <div className={`${goal && goal.metadata && goal.metadata.image ? goal.metadata.image : `icon-education`} display-4 text-primary`}></div>\r\n            <div className=\"ml-3\">\r\n              <div className=\"text-muted small\">{goal.name}</div>\r\n              <div className=\"text-large\">is On Track</div>\r\n            </div>\r\n          </div>\r\n          </Card>\r\n        </Col>\r\n          <Card className=\"p-3 m-2 w-100\">\r\n          <h5 className=\"text-muted font-weight-normal mb-4\">Payments received</h5>\r\n          <div className=\"w-100 dashboard-chart\">\r\n            <Chartjs.Line\r\n              height={200}\r\n              data={{\r\n                labels: ['2016-09', '2016-10', '2016-11', '2016-12', '2017-01', '2017-02', '2017-03', '2017-04', '2017-05', '2017-06', '2017-07', '2017-08', '2017-09', '2017-10', '2017-11', '2017-12', '2018-01', '2018-02'],\r\n                datasets: [{\r\n                  label: 'Sales',\r\n                  data: [137, 187, 85, 72, 85, 120, 183, 89, 143, 105, 116, 77, 76, 180, 158, 172, 143, 164],\r\n                  borderWidth: 2,\r\n                  backgroundColor: 'rgba(87, 181, 255, .85)',\r\n                  borderColor: 'rgba(87, 181, 255, 1)',\r\n                  pointBackgroundColor: 'rgba(0,0,0,0)',\r\n                  pointBorderColor: 'rgba(0,0,0,0)',\r\n                  pointRadius: 10\r\n                }]\r\n              }}\r\n              options={{\r\n                scales: {\r\n                  xAxes: [{\r\n                    gridLines: {\r\n                      display: false\r\n                    },\r\n                    ticks: {\r\n                      fontColor: '#aaa',\r\n                      autoSkipPadding: 50\r\n                    }\r\n                  }],\r\n                  yAxes: [{\r\n                    gridLines: {\r\n                      display: false\r\n                    },\r\n                    ticks: {\r\n                      fontColor: '#aaa',\r\n                      maxTicksLimit: 5\r\n                    }\r\n                  }]\r\n                },\r\n                legend: {\r\n                  display: false\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false\r\n              }}\r\n            />\r\n          </div>\r\n          </Card>\r\n        </Row>\r\n  </div>\r\n)}\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavDropdown, Dropdown } from 'react-bootstrap';\r\nimport { NavLink as RouterLink, Link } from \"react-router-dom\";\r\nimport { getUser, getClients, authenticateUser, getAccounts, setAccount } from '../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport history from '../history';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Login from '../pages/Login';\r\nimport avatar1 from '../styles/avatar1.png';\r\nimport Select from 'react-select';\r\nimport auth from '../auth';\r\n\r\nconst LogOutItem = withRouter(({ history }) => (\r\n  (\r\n    <Dropdown.Item onClick={() => {\r\n      localStorage.removeItem('userAccessToken');\r\n      auth.signout(() => history.push('/login'))\r\n    }}><i className=\"ion ion-ios-log-out text-danger\"></i> &nbsp; Log Out</Dropdown.Item>\r\n  )\r\n));\r\n\r\n\r\nclass NavbarComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accounts: [],\r\n      disabled: false,\r\n      singleValue: [],\r\n      groupedValue: [],\r\n      options: [],\r\n      accessToken: '',\r\n      selectedOption: '',\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    const { onGetAccounts } = this.props;\r\n    onGetAccounts();\r\n    this.setState({ accessToken: this.props.accessToken });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.accounts !== prevProps.accounts) {\r\n      const { accounts } = this.props;\r\n      this.fillSelectList(accounts);\r\n      this.setState({ accounts });\r\n    }\r\n    if (this.props.accessToken !== prevProps.accessToken) {\r\n      this.setState({ accessToken: this.props.accessToken });\r\n    }\r\n  }\r\n\r\n  fillSelectList = (accounts) => {\r\n    const options = accounts.map(acc => { return { value: acc.name, label: acc.name, rating: 'safe', id: acc.id } });\r\n    this.setState({ selectedOption: options[0] });\r\n    this.setState(prevState => ({\r\n      options: [...prevState.options, options]\r\n    }));\r\n\r\n    const groupedOptions = [\r\n      {\r\n        label: 'Existing accounts',\r\n        options: options,\r\n      },\r\n      {\r\n        label: 'Create new account',\r\n        options: [\r\n          { value: 'addAccount', label: 'Add new account', rating: 'safe' },\r\n        ],\r\n      },\r\n      {\r\n        label: 'Client',\r\n        options: [\r\n          { value: 'allAccounts', label: 'All accounts', rating: 'safe' },\r\n        ],\r\n      }\r\n    ];\r\n\r\n    this.setState(prevState => ({\r\n      groupedValue: [...prevState.groupedValue, groupedOptions]\r\n    }));\r\n  }\r\n\r\n  prevent(e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  handleInputChange = (selectedOption) => {\r\n    console.log(\"ssss\", selectedOption);\r\n    const { routerHistory, onSetAccount } = this.props;\r\n    const { accounts } = this.state;\r\n\r\n    this.setState({ selectedOption });\r\n    if (selectedOption.value === 'addAccount') {\r\n      routerHistory.push('/add-account');\r\n    } else if (selectedOption.value === 'allAccounts') {\r\n      routerHistory.push('/client');\r\n    }\r\n    else {\r\n      const account = accounts.find(acc => acc.id === selectedOption.id);\r\n      this.props.handleShowAccountName(selectedOption.value);\r\n      onSetAccount(account);\r\n      routerHistory.push('dashboard');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, onResetClick, account } = this.props;\r\n    const isRTL = document.documentElement.getAttribute('dir') === 'rtl';\r\n\r\n    return (\r\n      (<Navbar bg='white' expand=\"lg\" className=\"layout-navbar align-items-lg-center container-p-x\">\r\n        <Navbar.Brand href=\"/dashboard\">Hydrogen Demo</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse>\r\n          <Nav className=\"mr-auto\">\r\n            \r\n          </Nav>\r\n          <span style={{ width: '30%' }} className='navbar-text'>\r\n            <Select className=\"react-select\" classNamePrefix=\"react-select\"\r\n              placeholder={(account && account.id )? account.name : `Change or add new account`}\r\n              options={this.state.groupedValue[0]}\r\n              onChange={this.handleInputChange}\r\n              defaultValue={this.state.options[0]}\r\n              defaultInputValue={this.state.options[0]}\r\n              isClearable={false}\r\n              isSearchable={false}\r\n              isDisabled={this.state.disabled} />\r\n\r\n          </span>\r\n          <Dropdown as={Nav.Item} className=\"demo-navbar-user\" alignRight={!isRTL}>\r\n            <Dropdown.Toggle as={Nav.Link}>\r\n              <span className=\"d-inline-flex flex-lg-row-reverse align-items-center align-middle\">\r\n                <img src={avatar1} className=\"d-block ui-w-30 rounded-circle\" alt=\"User\" />\r\n                <span className=\"px-1 mr-lg-2 ml-2 ml-lg-0\">{user && user.first_name}</span>\r\n              </span>\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <LogOutItem/>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item id='item-delete-all' onClick={onResetClick} ><i className=\"ion ion-ios-log-out text-danger\"></i> &nbsp; Log Out and reset</Dropdown.Item>\r\n\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Navbar.Collapse>\r\n      </Navbar>)\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  accessToken: state.user.accessToken,\r\n  userAccessToken: state.user.userAccessToken,\r\n  username: state.user.username,\r\n  accounts: state.accounts.accounts,\r\n  account: state.accounts.account\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetUser: payload => dispatch(getUser(payload)),\r\n  onGetClients: payload => dispatch(getClients(payload)),\r\n  onAuthenticateUser: payload => dispatch(authenticateUser(payload)),\r\n  onGetAccounts: payload => dispatch(getAccounts(payload)),\r\n  onSetAccount: payload => dispatch(setAccount(payload))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavbarComponent);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Card, Row, Col, Button, Dropdown, Form, InputGroup, Media, Tab, Tabs, Modal, FormControl } from 'react-bootstrap'\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { Account, Client, Info } from './Tabs'\r\nimport Navbar from '../components/Navbar';\r\nimport SpinnerComponent from '.././components/SpinnerComponent';\r\nimport auth from '../auth';\r\nimport Initializer from '../Initializer';\r\nimport '../styles/element/css/element.min.css';\r\n\r\n\r\nimport {\r\n  getUser,\r\n  getAllSecurities,\r\n  createFunding,\r\n  getClientAnnualVolume,\r\n  getGoalPerformance,\r\n  getClientHoldings,\r\n  getClientCumulativeReturn,\r\n  getAccountAllocation,\r\n  retrieveModel,\r\n  getAllocation,\r\n  getClients,\r\n  getModelHoldings,\r\n  createPortfolioHoldingg,\r\n  getAllocationComposition,\r\n  authenticateUser,\r\n  getAllocationPerformance,\r\n  getAccounts,\r\n  getAccountPortifolio,\r\n  getGoal,\r\n  setAccount,\r\n  getClientAssetSize,\r\n  getFunding,\r\n  createPortifolioAssetSize,\r\n  setDate\r\n} from '../store/actions/index'\r\nimport '../styles/element/css/element.min.css'\r\n\r\n// import * as Chartjs from 'react-chartjs-2'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // props.setTitle('Dashboard 2 - Dashboards')\r\n    this.state = {\r\n      showModal: '',\r\n      accountGoal: {},\r\n      price: null,\r\n      fundingsForAccount: null,\r\n      selectedTab: 'client',\r\n      accounts: [],\r\n      selectedAccount: {},\r\n      isDeleting: false,\r\n      currentBalance: null,\r\n      assetSize: null,\r\n      accountName: ''\r\n    }\r\n  }\r\n\r\n  prevent(e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { accounts, account, portfolio, user, onGetClientHoldings, onGetClientAssetSize, porfolioHolding, onGetAllocation, accountAllocation, onGetAccountPortifolio, onGetModelHoldings, onGetGoal, onGetAccountAllocation, clientAssetSize, accessToken, onSetAccount, onGetFunding } = this.props;\r\n    if (accounts !== prevProps.accounts) {\r\n      // this.setState({ accounts });\r\n      if(!account.id) onSetAccount(accounts[0]);\r\n    \r\n      // this.setState({ selectedAccount: accounts[0] }, () => console.log(\"sleected>>>>>>>>>>>>>>>\", this.state.selectedAccount));\r\n    }\r\n    // if (accessToken !== prevProps.accessToken) {\r\n    //   this.setState({ accessToken: accessToken });\r\n    // }porfolioHolding\r\n    if (account&& account.id && account !== prevProps.account) {\r\n      if(account && account.id && account.goals.length > 0) onGetGoal(account.goals[0].goal_id)\r\n      onGetAccountAllocation(account.id)\r\n      onGetFunding(account.id)\r\n      onGetAccountPortifolio(account.id);\r\n      // this.setState({ accessToken: accessToken });\r\n    }\r\n\r\n    if (porfolioHolding !== prevProps.porfolioHolding) {\r\n      onGetClientAssetSize(user.id);\r\n    }\r\n\r\n    if (accountAllocation !== prevProps.accountAllocation) {\r\n      onGetAllocation(accountAllocation.allocation_id);\r\n    }\r\n\r\n    if (portfolio !== prevProps.portfolio) {\r\n      onGetModelHoldings(portfolio.model_id)\r\n      // this.setState({ accessToken: accessToken });\r\n    }\r\n    // if(model.id && modelHoldings.length === 0) onGetModelHoldings(model.id)\r\n\r\n    if (clientAssetSize !== prevProps.clientAssetSize) {\r\n      this.setState({ currentBalance: clientAssetSize.slice(-1)[0].value });\r\n    }\r\n  }\r\n\r\n  handleShowAccountName = (name) => {\r\n    this.setState({accountName: name})\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    // const { accessToken, onGetGoal, accountAllocation, onGetClientHoldings, onGetAccountAllocation, user, account, onGetClients, portfolio, onGetAllocation, onGetAllSecurities, securities, onGetAccountPortifolio, onGetClientAssetSize } = this.props;\r\n    const {  onGetUser, user, onGetAllSecurities,onGetClientAssetSize, clientAssetSize } = this.props;\r\n    const username = localStorage.getItem('username')\r\n    if(!user.id) onGetUser({ username: username });\r\n    onGetAllSecurities();\r\n    // if(user.id) onGetClientAssetSize(user.id)\r\n    // if (!clientAssetSize || clientAssetSize.length > 0) this.setState({ currentBalance: clientAssetSize.slice(-1)[0].value });\r\n\r\n\r\n    // if(account.id && !portfolio.id) {\r\n    //   onGetAccountPortifolio(account.id);\r\n    // }\r\n    // if(account.id) {\r\n    //   // onGetGoal(account.goals[0].goal_id)\r\n    //   onGetAccountAllocation(account.id)\r\n    // }\r\n    // // onGetClients();\r\n    // onAuthenticateUser({ username: 'lemi1141@gmail.com', password: '123456789' })\r\n    // if(account.id) onGetAccountAllocation(account.id);\r\n    // if(account.id) onGetAccountPortifolio(account.id);\r\n    \r\n  }\r\n\r\n  getDate = () => {\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const today = new Date();\r\n    let date = {};\r\n    date.day = today.getDate();\r\n    date.month = monthNames[today.getMonth()];\r\n    date.year = today.getFullYear();\r\n    return date;\r\n  }\r\n\r\n\r\n  handleModal = modal => {\r\n    this.setState({ showModal: modal });\r\n  }\r\n\r\n  // retrieveData = () => {\r\n  //   const { model, portfolio, onRetrieveModel, onGetModelHoldings, modelHoldings } = this.props;\r\n    \r\n  //   if (portfolio && portfolio.id && model && !model.id) {\r\n  //     onRetrieveModel({ model_id: portfolio.model_id });\r\n  //   };\r\n  //   // const { firstName, modelHoldings, model, onGetModelHoldings, onRetrieveModel } = this.props;\r\n    \r\n  //   // if(account.id && portfolio && !portfolio.id) onGetAccountPortifolio(account.id);\r\n  //   // if (model.id && modelHoldings.length === 0) {\r\n  //   //   onGetModelHoldings(model.id)\r\n  //   // };\r\n   \r\n  // }\r\n\r\n  onResetClick = async () => {\r\n    this.setState({ isDeleting: true });\r\n\r\n    const { clearAll } = Initializer;\r\n    await clearAll(this.props.accessToken);\r\n    console.log(\"testttttt\");\r\n    auth.signout(() => this.props.history.push('/'))\r\n    this.setState({ isDeleting: false })\r\n  }\r\n\r\n  handleCreatePrices = () => {\r\n    \r\n    const { modelHoldings, portfolio, onCreatePortfolioHolding, date, onSetDate, fundingsForAccount, onCreateFunding, accountPortifolio, onCreatePortifolioAssetSize } = this.props;\r\n    const { currentBalance } = this.state;\r\n    var id = \"ctl03_Tabs1\";\r\nvar lastFive = id.substr(id.length - 5); // => \"Tabs1\"\r\nvar lastChar = id.substr(id.length - 1)\r\n    modelHoldings.forEach(mh => {\r\n      const amount = this.state.price*(mh.current_weight/100);\r\n      const payload = {\r\n        amount: amount,\r\n        shares: amount/10,\r\n        date: date,\r\n        weight: mh.current_weight,\r\n        security_id: mh.security_id,\r\n        portfolio_id: portfolio.id\r\n        }\r\n        const day = parseInt(date.substr(date.length - 1)) + 1\r\n        const newDate = date.replace(/.$/,day)\r\n        console.log(newDate);\r\n        onCreatePortfolioHolding(payload);\r\n        onCreateFunding({ amount: amount, accountId: accountPortifolio.id})\r\n        onCreatePortifolioAssetSize({ assetSize: currentBalance + amount, cashFlow: amount, portfolioId: accountPortifolio.id })\r\n        this.handleModal('')\r\n    })\r\n    // for (const holding of modelHoldings) {\r\n      \r\n    //   const payload = {\r\n    //   amount: this.state.price,\r\n    //   shares: '10',\r\n    //   date: holding.date,\r\n    //   weight: holding.current_weight,\r\n    //   security_id: holding.security_id,\r\n    //   portfolio_id: portfolio.id\r\n    //   }\r\n    //   console.log(payload);\r\n    //   onCreatePortfolioHolding(payload);\r\n    // }\r\n    \r\n  }\r\n\r\n  // fundingAccount = () => {\r\n  //   const { onCreateFunding, account, onCreatePortifolioAssetSize, accountPortifolio } = this.props\r\n  //   // const { assetSize, cashFlow, portfolioId } = payload\r\n  //   const { fundingsForAccount, currentBalance } = this.state\r\n  //   onCreateFunding({ amount: fundingsForAccount, accountId: account.id})\r\n  //   onCreatePortifolioAssetSize({ assetSize: 0, cashFlow: currentBalance + fundingsForAccount, portfolioId: accountPortifolio.id })\r\n  // }\r\n\r\n  handleGetValue = (e) => {\r\n    const { value, name } = e.target;\r\n    \r\n    this.setState({[name]: value}, () => console.log(this.state))\r\n  }\r\n\r\n  // getClientData = () => {\r\n  //   const {user, onGetClientAnnualVolume, onGetClientAssetSize, onGetClientCumulativeReturn, clientAnnualVolume, clientCumulativeReturn, clientAssetSize, onGetClientHoldings, clientHoldings } = this.props;\r\n  //   if(clientHoldings.length === 0)onGetClientHoldings(user.id);\r\n  //   if(!clientCumulativeReturn.cum_return)onGetClientCumulativeReturn(user.id)\r\n  //   if(!clientAnnualVolume.ann_vol) onGetClientAnnualVolume(user.id)\r\n  //   if(clientAssetSize.length === 0) onGetClientAssetSize(user.id)\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      onGetClientAssetSize,\r\n      history,\r\n      onGetAllocationPerformance,\r\n      allocationPerformance,\r\n      clientAnnualVolume,\r\n      clientCumulativeReturn,\r\n      securities,\r\n      account,\r\n      onGetAllocation,\r\n      allocation,\r\n      onGetAccountPortifolio,\r\n      portfolio,\r\n      user,\r\n      accountAllocation,\r\n      goal,\r\n      goalPerformance,\r\n      modelHoldings,\r\n      onGetAccountAllocation,\r\n      clientAssetSize,\r\n      accountPortifolio,\r\n      model,\r\n      clientHoldings,\r\n      onGetGoalPerformance,\r\n      onGetModelHoldings,\r\n      onGetGoal,\r\n      accounts,\r\n      funding\r\n    } = this.props;\r\n    const { showModal, accountGoal, selectedTab, selectedAccount, isDeleting, currentBalance } = this.state;\r\n    console.log('JADI ACCOUNTPORTIFOLIO ACCOUNTPORTIFOLIO', accountPortifolio)\r\n    if(user && user.id && clientAssetSize.length === 0) onGetClientAssetSize(user.id)\r\n    if (!currentBalance && clientAssetSize.length > 0) this.setState({ currentBalance: clientAssetSize.slice(-1)[0].value });\r\n    // if(account && account.id && !accountPortifolio.id) onGetAccountPortifolio(account.id);\r\n    const date = this.getDate();\r\n    // if (account.id && !accountGoal && !accountGoal.goal_id) this.setState({ accountGoal: account.goals[0] })\r\n    // if(accountAllocation.allocation_id && !allocation.id) onGetAllocation(accountAllocation.allocation_id);\r\n    // if(allocation.id && !allocationPerformance.id) onGetAllocationPerformance(allocation.id)\r\n    // if(account.id && !accountAllocation.id) onGetAccountAllocation(account.id)\r\n    // if(account.id && !portfolio.id) onGetAccountPortifolio(account.id);\r\n    // if(account.id && !portfolio.id) onGetAccountPortifolio(account.id);\r\n    // if(model.id && modelHoldings.length === 0) onGetModelHoldings(model.id)\r\n    // if(allocation.id && !allocationComposition.id) onGetAllocationComposition(allocation.id);\r\n    // if (account.id && Object.entries(goal).length === 0) {\r\n    //   onGetGoal(account.goals[0].goal_id);\r\n    //   onGetGoalPerformance({ goalId: account.goals[0].goal_id, userId: user.id});\r\n    // }\r\n    // console.log('jadi clientHoldings', clientHoldings);\r\n    // this.getClientData();\r\n    // if(user.id && !clientAssetSize.id) onGetClientAssetSize(user.id);\r\n    // if(user && user.id && !clientAssetSize.length > 0) onGetClientAssetSize(user.id);\r\n    \r\n    // this.retrieveData();\r\n\r\n    return ( \r\n      isDeleting ? <SpinnerComponent/> :\r\n\r\n      (<div className=\"dashboard-container\">\r\n        <Navbar handleShowAccountName= {(name) => this.handleShowAccountName(name)} onResetClick={this.onResetClick} user={user} routerHistory={history} />\r\n        <div className=\"container\">\r\n        <div className=\"page-header-dashboard\">\r\n              <h4 className=\"font-weight-light selected-account-dashboard\">{accounts.lenght ? accounts[0].name : this.state.accountName}</h4>\r\n              <Button className=\"button-buy-stocks-dashboard\" onClick={() => this.handleModal('buyStocks')} variant=\"primary\">Make investment</Button>\r\n        </div>\r\n        {/* <h4>{selectedAccount.name}</h4>\r\n        <hr className=\"container-m-nx mt-0 mb-4\" />\r\n            <Button onClick={() => this.handleModal('buyStocks')} variant=\"primary\">Make investment</Button> */}\r\n            {/* <Button onClick={() => this.handleModal('fundAccount')} variant=\"primary\">Make investment</Button>\r\n            <Button onClick={this.testAction} variant=\"primary\">Test Actions</Button> */}\r\n\r\n            <Account \r\n              goal={goal}\r\n              account={account}\r\n              funding={funding}\r\n              currentBalance={currentBalance}\r\n              modelHoldings={modelHoldings}\r\n              clientAssetSize={clientAssetSize}\r\n              prevent={this.prevent}\r\n              allocation={allocation}\r\n              securities={securities}\r\n            />\r\n\r\n          {/* <Tabs defaultActiveKey=\"info\"\r\n            className=\"nav nav-pills nav-fill\"\r\n            id=\"uncontrolled-tab-example\"\r\n            activeKey={selectedTab}\r\n            onSelect={k => this.setState({ selectedTab: k })}>\r\n          <Tab eventKey=\"client\" title=\"Client\">\r\n              <Client\r\n                clientAssetSize={clientAssetSize}\r\n                currentBalance={currentBalance}\r\n                clientHoldings={clientHoldings}\r\n                clientCumulativeReturn={clientCumulativeReturn}\r\n                clientAnnualVolume={clientAnnualVolume}\r\n                securities={securities}\r\n            />\r\n          </Tab>\r\n          <Tab eventKey=\"account\" title=\"Account\">\r\n            <Account \r\n              goal={goal}\r\n              account={account}\r\n              funding={funding}\r\n              currentBalance={currentBalance}\r\n              modelHoldings={modelHoldings}\r\n              clientAssetSize={clientAssetSize}\r\n              prevent={this.prevent}\r\n              allocation={allocation}\r\n              securities={securities}\r\n            />\r\n          </Tab>\r\n        </Tabs> */}\r\n        <Modal centered show={showModal === 'buyStocks'} onHide={() => this.handleModal('')}>\r\n              <Form>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Enter price</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{securities.map((sec, index) => {\r\n                return (\r\n                  < InputGroup key={index} className=\"mb-3\" >\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroup-sizing-default\">{sec.name}</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      value={10}\r\n                      disabled\r\n                      name={sec.id}\r\n                      onChange={this.handleGetValue}\r\n                      type='number'\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                  </InputGroup>\r\n                )})}\r\n                < InputGroup className=\"mb-3\" >\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroup-sizing-default\">Enter value</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      onChange={this.handleGetValue}\r\n                      type='number'\r\n                      name=\"price\"\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                  </InputGroup>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => this.handleModal('')}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={this.handleCreatePrices}>\r\n                  Save\r\n                </Button>\r\n              </Modal.Footer>\r\n              </Form>\r\n            </Modal>\r\n            {/* <Modal centered show={showModal === 'fundAccount'} onHide={() => this.handleModal('')}>\r\n              <Form>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Fund your account:</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                < InputGroup className=\"mb-3\" >\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroup-sizing-default\">Enter value</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      onChange={this.handleGetValue}\r\n                      type='number'\r\n                      name='fundingsForAccount'\r\n                      aria-label=\"Default\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                    />\r\n                  </InputGroup>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => this.handleModal('')}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={this.fundingAccount}>\r\n                  Save\r\n                </Button>\r\n              </Modal.Footer>\r\n              </Form>\r\n            </Modal> */}\r\n      </div>\r\n      </div>)\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  accessToken: state.user.accessToken,\r\n  userAccessToken: state.user.userAccessToken,\r\n  username: state.user.username,\r\n  user: state.user.user,\r\n  securities: state.models.securities,\r\n  account: state.accounts.account,\r\n  goal: state.goals.goal,\r\n  goalPerformance: state.goals.goalPerformance,\r\n  allocation: state.allocations.allocation,\r\n  clientAssetSize: state.user.clientAssetSize,\r\n  model: state.models.model,\r\n  portfolio: state.accounts.accountPortifolio,\r\n  accountAllocation: state.accounts.accountAllocation,\r\n  modelHoldings: state.models.modelHoldings,\r\n  allocationPerformance: state.allocations.allocationPerformance,\r\n  allocationComposition: state.allocations.allocationComposition,\r\n  clientCumulativeReturn: state.user.clientCumulativeReturn,\r\n  clientAnnualVolume: state.user.clientAnnualVolume,\r\n  clientHoldings: state.user.clientHoldings,\r\n  accountPortifolio: state.accounts.accountPortifolio,\r\n  accounts: state.accounts.accounts,\r\n  porfolioHolding: state.accounts.porfolioHolding,\r\n  funding: state.funding.funding,\r\n  date: state.accounts.date\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetUser: payload => dispatch(getUser(payload)),\r\n  onGetClients: payload => dispatch(getClients(payload)),\r\n  onAuthenticateUser: payload => dispatch(authenticateUser(payload)),\r\n  onGetAllSecurities: payload => dispatch(getAllSecurities(payload)),\r\n  onGetAccounts: payload => dispatch(getAccounts(payload)),\r\n  onGetGoal: payload => dispatch(getGoal(payload)),\r\n  onGetAccountPortifolio: payload => dispatch(getAccountPortifolio(payload)),\r\n  onGetClientAssetSize: payload => dispatch(getClientAssetSize(payload)),\r\n  onRetrieveModel: payload => dispatch(retrieveModel(payload)),\r\n  onGetModelHoldings: payload => dispatch(getModelHoldings(payload)),\r\n  onCreatePortfolioHolding: payload => dispatch(createPortfolioHoldingg(payload)),\r\n  onGetAllocation: payload => dispatch(getAllocation(payload)),\r\n  onGetAccountAllocation: payload => dispatch(getAccountAllocation(payload)),\r\n  onGetAllocationPerformance: payload => dispatch(getAllocationPerformance(payload)),\r\n  onGetClientAnnualVolume: payload => dispatch(getClientAnnualVolume(payload)),\r\n  onGetClientCumulativeReturn: payload => dispatch(getClientCumulativeReturn(payload)),\r\n  onGetClientHoldings: payload => dispatch(getClientHoldings(payload)),\r\n  onGetAllocationComposition: payload => dispatch(getAllocationComposition(payload)),\r\n  onGetGoalPerformance: payload => dispatch(getGoalPerformance(payload)),\r\n  onCreateFunding: payload => dispatch(createFunding(payload)),\r\n  onGetFunding: payload => dispatch(getFunding(payload)),\r\n  onCreatePortifolioAssetSize: payload => dispatch(createPortifolioAssetSize(payload)),\r\n  onSetAccount: payload => dispatch(setAccount(payload)),\r\n  onSetDate: payload => dispatch(setDate(payload)),\r\n\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { subscribeAccount } from './initialize';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const getAllocationSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_SUCCESS,\r\n      allocation: res.data\r\n  }\r\n}\r\n\r\nexport const getAllocationFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAllocationStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_START\r\n  }\r\n}\r\n\r\nexport const getAllocation = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAllocation accessToken', accessToken);\r\n  dispatch(getAllocationStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}allocation/${payload}`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAllocation res', res);\r\n      dispatch(getAllocationSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAllocationFail(err)))\r\n}\r\n\r\nexport const getAllocationPerformanceFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAllocationPerformanceStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_START\r\n  }\r\n}\r\n\r\nexport const getAllocationPerformanceSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ACCOUNT_ALLOCATION_SUCCESS,\r\n      allocationPerformance: res.data\r\n  }\r\n}\r\n\r\nexport const getAllocationPerformance = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  dispatch(getAllocationPerformanceStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}allocation/${payload}/performance?stat=monte_carlo`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAllocationPerformance res', res);\r\n      dispatch(getAllocationPerformanceSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAllocationPerformanceFail(err)))\r\n}\r\n\r\nexport const getAllocationCompositionFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_COMPOSITION_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAllocationCompositionStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_COMPOSITION_START\r\n  }\r\n}\r\n\r\nexport const getAllocationCompositionSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATION_COMPOSITION_SUCCESS,\r\n      allocationComposition: res.data.content[0]\r\n  }\r\n}\r\n\r\nexport const getAllocationComposition = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  dispatch(getAllocationCompositionStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}allocation_composition?filter=allocation_id==${payload}`\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAllocationComposition res', res);\r\n      dispatch(getAllocationCompositionSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAllocationCompositionFail(err)))\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { subscribeAccount } from './initialize';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const getFundingSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_FUNDING_SUCCESS,\r\n      funding: res.data.content\r\n  }\r\n}\r\n\r\nexport const getFundingFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_FUNDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getFundingStart = () => {\r\n  return {\r\n      type: actionTypes.GET_FUNDING_START\r\n  }\r\n}\r\n\r\nexport const getFunding = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getFunding accessToken', accessToken);\r\n  dispatch(getFundingStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}funding`,\r\n    params: {\r\n      \"filter\": `account_id==${payload}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getFunding res', res);\r\n      dispatch(getFundingSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getFundingFail(err)))\r\n}\r\n\r\nexport const createFundingSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.CREATE_FUNDING_SUCCESS,\r\n      funding: res.data\r\n  }\r\n}\r\n\r\nexport const createFundingFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.CREATE_FUNDING_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const createFundingStart = () => {\r\n  return {\r\n      type: actionTypes.CREATE_FUNDING_START\r\n  }\r\n}\r\n\r\nexport const createFunding = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { amount, accountId } = payload\r\n  let today = new Date();\r\n  today.toISOString().substring(0, 10);\r\n  console.log('jadi createFunding accessToken', accessToken);\r\n  dispatch(createFundingStart())\r\n  axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}funding`,\r\n    data: {\r\n      amount: amount,\r\n      account_id: accountId,\r\n      frequency_unit: \"one_time\",\r\n      start_date: today,\r\n      is_active: true,\r\n      is_deposit: true,\r\n      funding_type: \"cash\",\r\n      funding_status: \"request_completed\"\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi createFunding res', res);\r\n      dispatch(createFundingSuccess(res));\r\n    })\r\n    .catch(err => dispatch(createFundingFail(err)))\r\n}\r\n\r\nexport const createPortifolioAssetSizeSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const createPortifolioAssetSizeFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const createPortifolioAssetSizeStart = () => {\r\n  return {\r\n      type: actionTypes.CREATE_PORTIFOLIO_ASSET_SIZE_START\r\n  }\r\n}\r\n\r\nexport const createPortifolioAssetSize = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { assetSize, cashFlow, portfolioId } = payload\r\n  let today = new Date();\r\n  today.toISOString().substring(0, 10);\r\n  console.log('jadi createPortifolioAssetSize accessToken', accessToken);\r\n  dispatch(createPortifolioAssetSizeStart())\r\n  axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_asset_size`,\r\n    data: {\r\n      asset_size: assetSize,\r\n      cash_flow: cashFlow,\r\n      date: today,\r\n      portfolio_id: portfolioId\r\n    }\r\n  })\r\n    .then(res => {\r\n      console.log('jadi createPortifolioAssetSize res', res);\r\n      dispatch(createPortifolioAssetSizeSuccess(res));\r\n    })\r\n    .catch(err => dispatch(createPortifolioAssetSizeFail(err)))\r\n}","import React, { Component } from 'react';\r\nimport ReactJson from 'react-json-view';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nexport default class JsonEditorComponent extends Component {\r\n  componentDidMount() {\r\n    const { handleRenderButton, isShow } = this.props;\r\n    if (isShow) {\r\n      handleRenderButton(false);\r\n    }\r\n  }\r\n  render() {\r\n    const { onSubmit, initState, handleInputChange } = this.props;\r\n    \r\n\r\n    return (\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <Card className=\"jsonCard\">\r\n          <Card.Header as=\"h4\">JSON configuration <br />\r\n            <span>Hydrogen environment is not initialized. Please initialize it by using json bellow.</span></Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Edit JSON data</Card.Title>\r\n            <ReactJson\r\n              src={initState}\r\n              theme=\"apathy:inverted\"\r\n              collapsed={1}\r\n              displayDataTypes={false}\r\n              onEdit={values => handleInputChange(values)}\r\n              iconStyle='circle'\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Initializer from '../Initializer';\r\n\r\nclass PurgeButton extends Component {\r\n  render() {\r\n    const { clearAll } = Initializer;\r\n    const { accessToken } = this.props;\r\n    return (\r\n      <Button className=\"purge-button\" variant=\"danger\" onClick={() => clearAll(accessToken)}>Reset to default</Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  accessToken: state.user.accessToken\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, null\r\n)(PurgeButton);","import React, { Component } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport Initializer from '../Initializer';\r\nimport {\r\n  createSecurity,\r\n  createDecisionTree,\r\n  createQuestionnaire,\r\n  createNode,\r\n  createNodeRelationShip,\r\n  createAllocation,\r\n  createModel,\r\n  createGoal,\r\n  createAccountType,\r\n  createClientNucleusService,\r\n  createClientAdminService,\r\n  createAccount,\r\n  createPortfolio,\r\n  createPortfolioHolding,\r\n  createModelHolding,\r\n  getAccountPortifolio,\r\n  subscribeAccount,\r\n} from '../store/actions/index';\r\nimport { createTransactionCodes,createPortfolioTransactions, createPortfolioAssetSize } from '../store/actions/initialize';\r\n\r\nconst LoginButton = withRouter(({ history }) => (\r\n  <Button    \r\n    size=\"md\"\r\n    variant=\"success\"\r\n    onClick={() => { history.push('/login') }}\r\n    className=\"btnGoToLogin\">Go to login\r\n  </Button>\r\n))\r\n\r\nconst SmallButton = withRouter(({ history }) => (\r\n  <Button\r\n    style={{ float: 'right' }}\r\n    size=\"md\"\r\n    variant=\"success\"\r\n    onClick={() => { history.push('/login') }}\r\n    className=\"btnGoToLogin\">Go to login\r\n  </Button>\r\n))\r\n\r\nconst DisabledButton = () => (\r\n  <Button\r\n    style={{ float: 'right' }}\r\n    disabled\r\n    size=\"md\"\r\n    variant=\"secondary\"\r\n    className=\"btnGoToLogin\">Go to login\r\n  </Button>\r\n)\r\n\r\nconst AlertComponent = ({ variant, name }) => (\r\n  <Alert variant={variant}>{name}</Alert>\r\n);\r\nclass RequestCheckerComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialData: {},\r\n      decisionTree: {\r\n        IDs: []\r\n      },\r\n      allAllocations: [],\r\n      allModels: [],\r\n      allModelHoldings: [],\r\n      tranCodes: [],\r\n      isButtonRender: false,\r\n      isAccountPassed: false,\r\n      isSecurityPassed: false,\r\n      isModelPassed: false,\r\n      isAllocationPassed: false,\r\n      isGoalPassed: false,\r\n      isModelHoldingPassed: false,\r\n      isSubcriptionPassed: false,\r\n      isAccountTypePassed: false,\r\n      isClientPassed: false,\r\n      isDecisionTreePassed: false,\r\n      isQuestionnairePassed: false,\r\n      isNodePassed: false,\r\n      isNodeRelationshipPassed: false,\r\n      accountMessage: '',\r\n      resetingState: false\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const { handleRenderButton, isShow } = this.props;\r\n    if (!isShow) {\r\n      handleRenderButton(true);\r\n    }\r\n\r\n    await this.setupEnviroment();\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    // this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  setupEnviroment = async () => {\r\n    const {\r\n      initialData,\r\n      onCreateSecurity,\r\n      onCreateDecisionTree,\r\n      onCreateQuestionnaire,\r\n      onCreateNode,\r\n      onCreateNodeRelationship,\r\n      onCreateAllocation,\r\n      onCreateModel,\r\n      onCreateModelHolding,\r\n      onCreateGoal,\r\n      onCreateAccountType,\r\n      onCreateClientOnNucleusService,\r\n      onCreateClientOnAdminService,\r\n      onCreateAccount,\r\n      onSubcribeAccount,\r\n      onCreatePortfolioHolding,\r\n      onCreateTransactionCodes,\r\n      onCreatePortfolioTransactions,\r\n      onCreatePortfolioAssetSize,\r\n      accessToken\r\n    } = this.props;\r\n\r\n    const { accountTypes, securities, allocations, goals, clients, decision_tree, transaction_codes } = initialData;\r\n    const { decision_paths } = decision_tree;\r\n    const {\r\n      getAllAllocations,\r\n      updateAllocation,\r\n      updateGoal,\r\n      getAllGoals,\r\n      getAllSecurities,\r\n      getAllAdminServiceClients,\r\n      getAllAccountTypes,\r\n      allocationComposition,\r\n      getAccountPortifolio,\r\n      updateAccount,\r\n      clearAll,\r\n      getAllNucleusServiceClients\r\n      \r\n    } = Initializer;\r\n    await clearAll(accessToken);\r\n    this.setState({ resetingState: true });\r\n    \r\n    //ACCOUNT TYPES\r\n    for (const account of accountTypes) {\r\n      await onCreateAccountType(account);\r\n    }\r\n    this.setState({ isAccountTypePassed: true });\r\n\r\n    // //SECURITIES\r\n    for (const security of securities) {\r\n      await onCreateSecurity(security);\r\n    }\r\n    this.setState({ isSecurityPassed: true });\r\n\r\n    //ALLOCATIONS\r\n    for (const allocation of allocations) {\r\n      const allocationResponse = await onCreateAllocation(allocation);\r\n      this.setState({ isAllocationPassed: true });\r\n      \r\n      this.setState(prevState => ({\r\n        allAllocations: [...prevState.allAllocations, allocationResponse.data ]\r\n      }));\r\n      \r\n      const securitiesResponse = await getAllSecurities(accessToken);\r\n\r\n      //MODELS\r\n\r\n      for (const model of allocation.models) {\r\n        const response = await onCreateModel(model);\r\n        \r\n        this.setState(prevState => ({\r\n          allModels: [...prevState.allModels, response.data ]\r\n        }));\r\n\r\n        const compositionPayload = {\r\n          current_weight: model.current_weight,\r\n          strategic_weight: model.strategic_weight,\r\n          allocation_id: allocationResponse.data.id,\r\n          date: model.date,\r\n          model_id: response.data.id\r\n        }\r\n        await allocationComposition(accessToken, compositionPayload);\r\n\r\n        for (const holding of model.holdings) {\r\n          const filteredSecurities =\r\n            securitiesResponse.data.content.filter(security => security.ticker.localeCompare(holding.security_ticker) === 0);\r\n          \r\n          const security_id = filteredSecurities[0].id;\r\n          const modelHoldingResponse = await onCreateModelHolding(holding, security_id, response.data.id);\r\n\r\n          this.setState(prevState => ({\r\n            allModelHoldings: [...prevState.allModelHoldings, modelHoldingResponse.data ]\r\n          }));\r\n        };\r\n      }\r\n      this.setState({ isModelPassed: true });\r\n      this.setState({ isModelHoldingPassed: true });\r\n    }\r\n\r\n    //GOALS\r\n    for (const goal of goals) {\r\n      const goalResponse = await onCreateGoal(goal, null);\r\n      if (goal && goal.children) {\r\n        for (const child of goal.children) {\r\n          await onCreateGoal(child, goalResponse.data.id);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ isGoalPassed: true });\r\n\r\n\r\n    //TRANSACTION CODES\r\n    for (const code of transaction_codes) {\r\n      const { category, is_buy, transaction_code, transaction_code_description } = code;\r\n      const payload = { \r\n        category,\r\n        is_buy,\r\n        transaction_code,\r\n        transaction_code_description\r\n      }\r\n      const transCodesRes = await onCreateTransactionCodes(payload);\r\n      this.setState(prevState => ({\r\n        tranCodes: [...prevState.tranCodes, transCodesRes.data ]\r\n      }));\r\n    }\r\n\r\n    const res = await getAllNucleusServiceClients(accessToken);\r\n    console.log(\"REDSSSSSSSSSS\", res);\r\n    //CLIENTS\r\n    for (const client of clients) {\r\n      const allClients = await getAllAdminServiceClients(client.username, accessToken);\r\n      const existingClient = allClients.data.content.find(c => c.username === client.username );\r\n\r\n      const clientNucleusResponse = await onCreateClientOnNucleusService(client);\r\n      if (!existingClient) {\r\n        await onCreateClientOnAdminService(client, clientNucleusResponse.data.username);\r\n      } else {\r\n        this.setState({ accountMessage: \"(User already exists)\" });\r\n      }\r\n      //ACCOUNT\r\n      for (const account of client.accounts) {\r\n        const allAccounts = await getAllAccountTypes(accessToken);\r\n        const goalsResponse = await getAllGoals(accessToken);\r\n\r\n        const filteredAccount = allAccounts.data.content.filter(acc => acc.name.localeCompare(account.accout_type_name) === 0);\r\n        const accountResponse = await onCreateAccount(account, clientNucleusResponse, filteredAccount[0].id, client);\r\n\r\n        const allocationResponse = await getAllAllocations(accessToken);\r\n        const allocation = allocationResponse.data.content.filter(allocation => allocation.name.localeCompare(account.allocation_name) === 0);\r\n        \r\n        for (const goal of account.goals) {\r\n          const filteredGoal = goalsResponse.data.content.filter(g => g.name === goal.goal_name);\r\n          const payload = {\r\n            account_id: accountResponse.data.id,\r\n            accessToken: accessToken,\r\n            goals: [\r\n              {\r\n                goal_id: filteredGoal[0].id,\r\n                goal_amount: goal.goal_amount,\r\n                accumulation_horizon: goal.accumulation_horizon\r\n              }\r\n            ]\r\n          }\r\n          await updateAccount(payload);\r\n        }\r\n        const goal = account.goals.map(g => {\r\n          const filter = goalsResponse.data.content.filter(res => res.name.localeCompare(g.goal_name) === 0);\r\n          return filter[0];\r\n        });\r\n\r\n        const data = {\r\n          account_id: accountResponse.data.id,\r\n          goal_id: goal[0].id,\r\n          allocation_id: allocation[0].id,\r\n          current_weight: account.current_weight,\r\n          strategic_weight: account.strategic_weight,\r\n          date: account.date,\r\n        }\r\n        await onSubcribeAccount(data);\r\n\r\n        const accountPorfolios = await getAccountPortifolio(accountResponse.data.id, accessToken);\r\n\r\n        const { allModels, allModelHoldings } = this.state;\r\n        const { cash } = account;\r\n\r\n        for (const portfolio of accountPorfolios.data.content) {\r\n          const model = allModels.filter(m => m.id === portfolio.model_id);\r\n          const modelHoldings = allModelHoldings.filter(h => h.model_id === model[0].id);\r\n\r\n          for (const holding of modelHoldings) {\r\n            const { cash } = account;\r\n            const weight = holding.current_weight / 100;\r\n            const amount = cash * weight;\r\n            const sec_fix_price = 10;\r\n            const shares = amount / sec_fix_price;\r\n\r\n            const payload = {\r\n              shares,\r\n              weight: holding.current_weight,\r\n              amount: amount,\r\n              date: holding.date,\r\n              security_id: holding.security_id,\r\n              portfolio_id: portfolio.id\r\n            }\r\n            await onCreatePortfolioHolding(payload);\r\n            const { tranCodes } = this.state;\r\n            const buyTransaction = tranCodes.filter(code => code.is_buy);\r\n\r\n            const transactionPayload = {\r\n              price: cash,\r\n              quantity: amount,\r\n              date: holding.date,\r\n              security_id: holding.security_id,\r\n              portfolio_id: portfolio.id,\r\n              model_id: model[0].id,\r\n              account_id: accountResponse.data.id,\r\n              transaction_code_id: buyTransaction[0].id\r\n            }\r\n            await onCreatePortfolioTransactions(transactionPayload);\r\n          }\r\n          \r\n           // SIMULATION ON PORFOLIO ASSET SIZE\r\n           const assetSizePayload = {\r\n            asset_size: cash,\r\n            cash_flow: cash,\r\n            date: '2019-01-01',\r\n            currency_code: 'USD',\r\n            portfolio_id: portfolio.id\r\n          }\r\n          await onCreatePortfolioAssetSize(assetSizePayload);\r\n\r\n          const assetSizePayload2 = {\r\n            asset_size: cash +1,\r\n            cash_flow: 0,\r\n            date: '2019-01-03',\r\n            currency_code: 'USD',\r\n            portfolio_id: portfolio.id\r\n          }\r\n          await onCreatePortfolioAssetSize(assetSizePayload2);\r\n\r\n          const assetSizePayload3 = {\r\n            asset_size: cash + 3,\r\n            cash_flow: 0,\r\n            date: '2019-01-04',\r\n            currency_code: 'USD',\r\n            portfolio_id: portfolio.id\r\n          }\r\n          await onCreatePortfolioAssetSize(assetSizePayload3);\r\n\r\n          const assetSizePayload4 = {\r\n            asset_size: cash + 4,\r\n            cash_flow: 0,\r\n            date: '2019-01-05',\r\n            currency_code: 'USD',\r\n            portfolio_id: portfolio.id\r\n          }\r\n          await onCreatePortfolioAssetSize(assetSizePayload4);\r\n\r\n          const assetSizePayload5 = {\r\n            asset_size: cash + 5,\r\n            cash_flow: 0,\r\n            date: '2019-01-06',\r\n            currency_code: 'USD',\r\n            portfolio_id: portfolio.id\r\n          }\r\n          await onCreatePortfolioAssetSize(assetSizePayload5);\r\n          //END OF SIMULATION\r\n        }\r\n      }\r\n    }\r\n    this.setState({ isClientPassed: true });\r\n    this.setState({ isAccountPassed: true });\r\n    this.setState({ isSubcriptionPassed: true });\r\n\r\n    // DECISION TREE AND QUESTIONNAIRE\r\n    const decisionTreeResponse = await onCreateDecisionTree(decision_tree);\r\n    this.setState({ isDecisionTreePassed: true });\r\n\r\n    this.setState(prevState => ({\r\n      decisionTree: { ...prevState.decisionTree, IDs: decisionTreeResponse.data.id, isFailed: !decisionTreeResponse.data.id }\r\n    }));\r\n\r\n    const { IDs } = this.state.decisionTree;\r\n\r\n    const questionnaireResponse = await onCreateQuestionnaire(decision_tree.questionnaire, IDs)\r\n    this.setState({ isQuestionnairePassed: true });\r\n\r\n    // ADD QUESTIONNAIRE ID TO GOALS\r\n    const allGoals = await getAllGoals(accessToken);\r\n\r\n    for (const goal of allGoals.data.content) {\r\n      const payload = {\r\n        questionnaire_id: questionnaireResponse.id,\r\n        goal_id: goal.id\r\n      }\r\n      await updateGoal(accessToken, payload);\r\n    }\r\n\r\n    const { questionnaire } = this.props;\r\n    const listAllAllocations = await getAllAllocations(accessToken);\r\n\r\n    const parentNode = questionnaire.questions.filter(question => decision_paths.question === question.title);\r\n    const payload = {\r\n      name: \"Time horizon question node\",\r\n      questionID: parentNode[0].id,\r\n      is_first: true\r\n    }\r\n    const nodeResponse = await onCreateNode(payload);\r\n\r\n    for (const relation of decision_paths.answers) {\r\n      const childQuestion = questionnaire.questions.filter(q => q.title.localeCompare(relation.leads_to.question) === 0);\r\n      const payload = {\r\n        name: \"Risk question, \" + relation.answer,\r\n        questionID: childQuestion[0].id,\r\n        is_first: false\r\n      }\r\n      const nodeChildResponse = await onCreateNode(payload);\r\n\r\n      for (const answer of parentNode[0].answers) {\r\n        answer.value = answer.value.replace('&lt;', '<');\r\n        answer.value = answer.value.replace('&gt;', '>');\r\n\r\n        if (answer.value === relation.answer) {\r\n          const { IDs } = this.state.decisionTree;\r\n          const payload = {\r\n            answer: answer,\r\n            decisionTreeID: IDs,\r\n            nodeParentID: nodeResponse.data.id,\r\n            nodeChildID: nodeChildResponse.data.id,\r\n            isLeaf: false\r\n          }\r\n          await onCreateNodeRelationship(payload);\r\n        }\r\n      }\r\n\r\n      const riskQuestion = questionnaire.questions.filter(question => relation.leads_to.question === question.title);\r\n\r\n      const leafRelationships = riskQuestion[0].answers.filter(async answer => relation.leads_to.answers.includes(answer));\r\n      for (const leaf of leafRelationships) {\r\n        const data = {\r\n          answer: leaf,\r\n          decisionTreeID: IDs,\r\n          nodeParentID: nodeChildResponse.data.id,\r\n          isLeaf: true\r\n        }\r\n\r\n        await onCreateNodeRelationship(data);\r\n      }\r\n      for (const leaf of relation.leads_to.answers) {\r\n        const filter = listAllAllocations.data.content.filter(allocation => leaf.leads_to.allocation.localeCompare(allocation.name) === 0);\r\n        const node_map = filter[0].node_map;\r\n        node_map.push({ node_id: nodeChildResponse.data.id });\r\n        await updateAllocation(accessToken, filter[0].id, node_map);\r\n      }\r\n    }\r\n    this.setState({ isNodePassed: true });\r\n    this.setState({ isNodeRelationshipPassed: true });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      resetingState,\r\n      isAccountTypePassed,\r\n      isAllocationPassed,\r\n      isSubcriptionPassed,\r\n      isGoalPassed,\r\n      isModelPassed,\r\n      isModelHoldingPassed,\r\n      isClientPassed,\r\n      isDecisionTreePassed,\r\n      isQuestionnairePassed,\r\n      isNodePassed,\r\n      isNodeRelationshipPassed,\r\n      isAccountPassed,\r\n      isSecurityPassed,\r\n      accountMessage\r\n    } = this.state;\r\n\r\n    const arrayRequests = [\r\n      {\r\n        name: 'Reseting state',\r\n        isPassed: resetingState,\r\n      },\r\n      {\r\n        name: 'Account types',\r\n        isPassed: isAccountTypePassed\r\n      },\r\n      {\r\n        name: 'Securities',\r\n        isPassed: isSecurityPassed\r\n      },\r\n      {\r\n        name: 'Allocations',\r\n        isPassed: isAllocationPassed\r\n      },\r\n      {\r\n        name: 'Models',\r\n        isPassed: isModelPassed\r\n      },\r\n      {\r\n        name: 'Model holdings',\r\n        isPassed: isModelHoldingPassed\r\n      },\r\n      {\r\n        name: 'Goals',\r\n        isPassed: isGoalPassed\r\n      },\r\n      {\r\n        name: 'Clients ' + accountMessage,\r\n        isPassed: isClientPassed\r\n      },\r\n      {\r\n        name: 'Account',\r\n        isPassed: isAccountPassed\r\n      },\r\n      {\r\n        name: 'Subscription',\r\n        isPassed: isSubcriptionPassed\r\n      },\r\n      {\r\n        name: 'Decision Tree',\r\n        isPassed: isDecisionTreePassed\r\n      },\r\n      {\r\n        name: 'Questionnaire',\r\n        isPassed: isQuestionnairePassed\r\n      },\r\n      {\r\n        name: 'Nodes',\r\n        isPassed: isNodePassed\r\n      },\r\n      {\r\n        name: 'Node relationships',\r\n        isPassed: isNodeRelationshipPassed\r\n      }\r\n    ];\r\n    const listItems = arrayRequests.map((req, index) => {\r\n      if (req.isPassed)\r\n        return <AlertComponent key={index} name={req.name} variant='success'> </AlertComponent>\r\n      else {\r\n        return <AlertComponent key={index} name={req.name} variant='warning'> </AlertComponent>\r\n      }\r\n    });\r\n\r\n    const isButtonRender = (\r\n      isAccountTypePassed &&\r\n      isSecurityPassed &&\r\n      isAllocationPassed &&\r\n      isGoalPassed &&\r\n      isModelPassed &&\r\n      isModelHoldingPassed &&\r\n      isClientPassed &&\r\n      isSubcriptionPassed &&\r\n      isAccountPassed &&\r\n      isDecisionTreePassed &&\r\n      isQuestionnairePassed &&\r\n      isNodePassed &&\r\n      isNodeRelationshipPassed\r\n    );\r\n    \r\n    return (\r\n      <div ref={(el) => { this.messagesEnd = el; }} className=\"requestsStateItems\">\r\n        <Card className=\"jsonCard\">\r\n          <Card.Header as=\"h4\">\r\n            Initialization {isButtonRender ? <SmallButton /> : <DisabledButton />}\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {listItems}\r\n          </Card.Body>\r\n        </Card>\r\n        {isButtonRender ? <LoginButton /> : <></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userAccessToken: state.user.userAccessToken,\r\n  accountTypes: state.initialize.accountTypes,\r\n  securities: state.initialize.securities,\r\n  allocation: state.initialize.allocations,\r\n  goals: state.initialize.goals,\r\n  models: state.initialize.models,\r\n  modelHoldings: state.initialize.modelHoldings,\r\n  accounts: state.initialize.accounts,\r\n  portfolios: state.initialize.portfolios,\r\n  portfolioHoldings: state.initialize.portfolioHoldings,\r\n  decisionTree: state.initialize.decisionTree,\r\n  questionnaire: state.initialize.questionnaire,\r\n  nodes: state.initialize.nodes,\r\n  nodeRelationships: state.initialize.nodeRelationships,\r\n  clientsAdminService: state.initialize.clientsAdminService,\r\n  clientsNucleusService: state.initialize.clientsNucleusService,\r\n  subscriptions: state.initialize.subscriptions,\r\n  transactionCodes: state.initialize.transactionCodes,\r\n  allAccountPortfolios: state.accounts.accountPortifolio,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateSecurity: payload => dispatch(createSecurity(payload)),\r\n  onCreateAllocation: payload => dispatch(createAllocation(payload)),\r\n  onCreateModel: payload => dispatch(createModel(payload)),\r\n  onCreateModelHolding: (payload, security_id, model_id) => dispatch(createModelHolding(payload, security_id, model_id)),\r\n  onCreateGoal: (payload, parentGoal) => dispatch(createGoal(payload, parentGoal)),\r\n  onCreateDecisionTree: payload => dispatch(createDecisionTree(payload)),\r\n  onCreateQuestionnaire: (payload, decisionTreeID) => dispatch(createQuestionnaire(payload, decisionTreeID)),\r\n  onCreateNode: (payload) => dispatch(createNode(payload)),\r\n  onCreateNodeRelationship: (payload) => dispatch(createNodeRelationShip(payload)),\r\n  onCreateAccountType: (payload) => dispatch(createAccountType(payload)),\r\n  onCreateClientOnNucleusService: (payload) => dispatch(createClientNucleusService(payload)),\r\n  onCreateClientOnAdminService: (payload, username) => dispatch(createClientAdminService(payload, username)),\r\n  onCreateAccount: (payload, clientNucleus, accountTypeID, client) => dispatch(createAccount(payload, clientNucleus, accountTypeID, client)),\r\n  onCreatePortfolio: (payload, accountID, modelID) => dispatch(createPortfolio(payload, accountID, modelID)),\r\n  onCreatePortfolioHolding: (payload) => dispatch(createPortfolioHolding(payload)),\r\n  onSubcribeAccount: payload => dispatch(subscribeAccount(payload)),\r\n  onCreateTransactionCodes: payload => dispatch(createTransactionCodes(payload)),\r\n  onGetAccountPortifolio: payload => dispatch(getAccountPortifolio(payload)),\r\n  onCreatePortfolioTransactions: payload => dispatch(createPortfolioTransactions(payload)),\r\n  onCreatePortfolioAssetSize: payload => dispatch(createPortfolioAssetSize(payload)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RequestCheckerComponent);","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\nimport { BASE_PATH, ADMIN_SERVICE_PATH } from '../../configuration'\r\n\r\nexport const createSecurity = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, security_class, ticker, asset_class, is_active } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}security`,\r\n    data: {\r\n      name: name,\r\n      security_class: security_class,\r\n      ticker: ticker,\r\n      asset_class: asset_class,\r\n      is_active: is_active\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_SECURITY,\r\n    security: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createAllocation = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, description, is_active, volatility, performance } = payload;\r\n  try {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}allocation`,\r\n      data: {\r\n        name: name,\r\n        description: description,\r\n        is_active: is_active,\r\n        volatility: volatility,\r\n        performance: performance\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: actionTypes.CREATE_ALLOCATION,\r\n        allocation: response.data\r\n      })\r\n      return response;\r\n    }\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n}\r\n\r\nexport const createAccountType = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, code, is_taxable, short_name } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account_type`,\r\n    data: {\r\n      name: name,\r\n      code: code,\r\n      is_taxable: is_taxable,\r\n      short_name: short_name\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_ACCOUNT_TYPE,\r\n    accountType: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createPortfolioTransactions = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { price, quantity, date, portfolio_id, security_id, model_id, transaction_code_id,account_id } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_transaction`,\r\n    data: {\r\n      price,\r\n      quantity,\r\n      date,\r\n      security_id,\r\n      portfolio_id,\r\n      model_id,\r\n      account_id,\r\n      transaction_code_id\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_PORTFOLIO_TRANSACTIONS,\r\n    portfolioTransactions: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createPortfolioAssetSize = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { asset_size, cash_flow, date, portfolio_id, currency_code } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_asset_size`,\r\n    data: {\r\n      asset_size,\r\n      cash_flow,\r\n      date,\r\n      currency_code,\r\n      portfolio_id\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_PORTFOLIO_ASSET_SIZE,\r\n    portfolioAssetSize: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\n\r\nexport const createModel = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, description } = payload;\r\n  try {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}model`,\r\n      data: {\r\n        name: name,\r\n        description: description\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: actionTypes.CREATE_MODEL,\r\n        model: response.data\r\n      })\r\n      return response;\r\n    }\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const createModelHolding = (payload, securityID, modelID) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { current_weight, strategic_weight, date } = payload;\r\n\r\n  try {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}model_holding`,\r\n      data: {\r\n        current_weight: current_weight,\r\n        strategic_weight: strategic_weight,\r\n        date: date,\r\n        security_id: securityID,\r\n        model_id: modelID\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      dispatch({\r\n        type: actionTypes.CREATE_MODEL_HOLDING,\r\n        modelHolding: response.data\r\n      })\r\n      return response;\r\n    }\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n}\r\n\r\nexport const createGoal = (payload, parentGoalID) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, is_decumulation, image } = payload;\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}goal`,\r\n    data: {\r\n      name: name,\r\n      is_decumulation: is_decumulation,\r\n      parent_goal_id: parentGoalID || null,\r\n      metadata: {\r\n        image: image\r\n      }\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_GOAL,\r\n    goal: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createClientAdminService = (payload, username) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { password, authorities } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${ADMIN_SERVICE_PATH}`,\r\n    data: {\r\n      username: username,\r\n      password: password,\r\n      authorities: authorities\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_CLIENT_ADMIN_SERVICE,\r\n    clientAdminService: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createClientNucleusService = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { first_name, last_name, username, email, phone_number, client_type } = payload;\r\n  console.log('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!',payload);\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}client`,\r\n    data: {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      username: username,\r\n      client_type: client_type,\r\n      email: email,\r\n      phone_number: phone_number,\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_CLIENT_NUCLEUS_SERVICE,\r\n    clientNucleusService: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createAccount = (payload, clientNucleus, accountTypeID, client) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name } = payload;\r\n  const { client_account_association_type } = client;\r\n  const { id } = clientNucleus.data;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account`,\r\n    data: {\r\n      name: name,\r\n      account_type_id: accountTypeID,\r\n      clients: [{\r\n        client_id: id,\r\n        client_account_association_type: client_account_association_type\r\n      }]\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_ACCOUNT,\r\n    account: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const subscribeAccount = (payload) => async (dispatch, getState) => {\r\n  console.log(\"payloaddddd\", payload);\r\n\r\n  const { accessToken } = getState().user;\r\n  const { current_weight, strategic_weight, date, account_id, goal_id, allocation_id } = payload;\r\n  console.log(\"payloaddddd\", payload);\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}account/${account_id}/subscribe`,\r\n    data: {\r\n      current_weight: current_weight,\r\n      strategic_weight: strategic_weight,\r\n      date: date,\r\n      allocation_id: allocation_id,\r\n      goal_id: goal_id\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.SUBSCRIBE_ACCOUNT,\r\n    subscription: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createPortfolio = (payload, accountID, modelID) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, percentage } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio`,\r\n    data: {\r\n      name: name,\r\n      percentage: percentage,\r\n      account_id: accountID,\r\n      model_id: modelID\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_PORTFOLIO,\r\n    portfolio: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\n\r\nexport const createPortfolioHolding = (payload) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { amount, shares, date, weight, portfolio_id, security_id } = payload;\r\n  console.log(\"payload create \", payload);\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}portfolio_holding`,\r\n    data: {\r\n      portfolio_id: portfolio_id,\r\n      amount: amount,\r\n      shares: shares,\r\n      date: date,\r\n      weight: weight,\r\n      security_id: security_id\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_PORTFOLIO_HOLDING,\r\n    portfolioHolding: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createDecisionTree = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, description } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}decision_tree`,\r\n    data: {\r\n      name: name,\r\n      description: description\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_DECISION_TREE,\r\n    decisionTree: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createQuestionnaire = (payload, decisionTreeID) => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, description, questions } = payload;\r\n\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}questionnaire`,\r\n    data: {\r\n      name: name,\r\n      description: description,\r\n      decision_tree_id: decisionTreeID,\r\n      questions: questions\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_QUESTIONNAIRE,\r\n    questionnaire: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createNode = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { name, questionID, is_first } = payload;\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}node`,\r\n    data: {\r\n      name: name,\r\n      question_id: questionID,\r\n      is_first: is_first\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_NODE,\r\n    node: response.data\r\n  })\r\n  return response;\r\n}\r\n\r\nexport const createNodeRelationShip = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { answer, decisionTreeID, nodeParentID, isLeaf } = payload;\r\n  if (payload && payload.nodeChildID) {\r\n    const nodeChildID = payload.nodeChildID;\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}node_relationship`,\r\n      data: {\r\n        value: answer.value,\r\n        answer_id: answer.id,\r\n        decision_tree_id: decisionTreeID,\r\n        node_parent_id: nodeParentID,\r\n        node_child_id: nodeChildID,\r\n        is_leaf: isLeaf\r\n      }\r\n    })\r\n    dispatch({\r\n      type: actionTypes.CREATE_NODE_RELATIONSHIP,\r\n      nodeRelationship: response.data\r\n    })\r\n    return response;\r\n\r\n  } else {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'content-type': 'application/json'\r\n      },\r\n      url: `${BASE_PATH}node_relationship`,\r\n      data: {\r\n        value: answer.value,\r\n        answer_id: answer.id,\r\n        decision_tree_id: decisionTreeID,\r\n        node_parent_id: nodeParentID,\r\n        is_leaf: isLeaf\r\n      }\r\n    })\r\n    dispatch({\r\n      type: actionTypes.CREATE_NODE_RELATIONSHIP,\r\n      nodeRelationship: response.data\r\n    })\r\n    return response;\r\n  }\r\n}\r\n\r\nexport const createTransactionCodes = payload => async (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  const { category, is_buy, transaction_code, transaction_code_description } = payload;\r\n  const response = await axios({\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}transaction_code`,\r\n    data: {\r\n      category,\r\n      is_buy,\r\n      transaction_code,\r\n      transaction_code_description,\r\n    }\r\n  })\r\n  dispatch({\r\n    type: actionTypes.CREATE_TRANSACTION_CODES,\r\n    transactionCodes: response.data\r\n  })\r\n  return response;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateState } from '../store/actions/index';\r\nimport JsonEditorComponent from '../components/JsonEditorComponent';\r\nimport PurgeButton from '../components/PurgeButton';\r\nimport RequestCheckerComponent from './RequestCheckerComponent';\r\nimport StepZilla from 'react-stepzilla';\r\nimport '../styles/element/css/element.min.css';\r\n\r\n\r\nconst StepTitle = ({ title, description, icon, doneIcon }) => {\r\n  return (\r\n    <span>\r\n      {doneIcon ? <span className={`stepzilla-done-icon ${doneIcon}`} /> : ''}\r\n      <span className={`stepzilla-icon ${icon}`} />\r\n      <span className=\"stepzilla-title\">{title}</span>\r\n      {description ? <span className=\"stepzilla-desctiption\">{description}</span> : ''}\r\n    </span>\r\n  )\r\n}\r\nclass InitPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      initialData: {},\r\n      hideNextButton: false,\r\n      accessToken: null\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    const { initState } = this.props;\r\n    this.setState({ initialData: initState });\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    this.setState({ accessToken });\r\n  }\r\n\r\n  handleInputChange = (values) => {\r\n    this.setState({ initialData: values.updated_src });\r\n  }\r\n\r\n  handleRenderButton = (isShow) => {\r\n    this.setState({ hideNextButton: isShow });\r\n  }\r\n \r\n  render() {\r\n    const { initState } = this.props;\r\n    const { initialData, hideNextButton, accessToken } = this.state;\r\n    const stepzillaDefaultProps = {\r\n      nextButtonCls: hideNextButton ? 'd-none' : 'btn btn-primary jsonInitializeButtton',\r\n      backButtonCls: 'btn btn-default',\r\n      nextButtonText: 'Initialize →',\r\n      stepsNavigation: false,\r\n      backButtonText: '← Back'\r\n    }\r\n\r\n    return (\r\n      <div className=\"container init-container\">\r\n        <div className=\"initPageContainer container d-flex flex-column\">\r\n          <StepZilla className=\"stepperInitPage\" {...stepzillaDefaultProps}\r\n            steps={[\r\n              {\r\n                name: <StepTitle icon=\"icon-settings\" doneIcon=\"icon-circle-tick\" title=\"Configure JSON file\" description=\"Set up enviroment\" />\r\n                , component: <JsonEditorComponent\r\n                  onSubmit={this.onSubmit}\r\n                  state={this.state}\r\n                  accessToken={accessToken}\r\n                  initState={initState}\r\n                  handleInputChange={this.handleInputChange}\r\n                  handleRenderButton={this.handleRenderButton}\r\n                  isShow={this.state.hideNextButton}\r\n                />\r\n              },\r\n              {\r\n                name: <StepTitle icon=\"icon-download\" doneIcon=\"icon-circle-tick\" title=\"Initialization from JSON file\" description=\"Creating enviroment\" />\r\n                , component: <RequestCheckerComponent\r\n                  initialData={initialData}\r\n                  accessToken={accessToken}\r\n                  handleRenderButton={this.handleRenderButton}\r\n                  isShow={this.state.hideNextButton}\r\n                />\r\n              },\r\n              {\r\n                name: <StepTitle icon=\"icon-profile-group\" doneIcon=\"icon-circle-tick\" title=\"Go to Login page\" description=\"Set up completed\" />\r\n                , component:\r\n                  <div></div>\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  initState: state.updateState,\r\n  accessToken: state.user.accessToken\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateState })(InitPage);","import { UPDATE_INIT_STATE } from \"./actionTypes\";\r\n\r\nexport const updateState = (state) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_INIT_STATE,\r\n    payload: state\r\n  });\r\n}","import React from 'react';\r\nimport { Card, Row, Col, Button, Form } from 'react-bootstrap'\r\nimport SpinnerComponent from '../components/SpinnerComponent';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport '../styles/steps.scss'\r\nimport '../styles/element/css/element.min.css'\r\n\r\nexport const SelectGoal = ({ goals, handleGoalSelect, selectedGoal }) => (\r\n  <Row>\r\n    <Col md={{ span: 6, offset: 3 }}>\r\n      <Card className=\"main-card w-100\">\r\n        {goals.map(goal => {\r\n          return (\r\n            <Row className=\"\">\r\n              <Card className={`goal-card w-100 ${selectedGoal.id === goal.id ? 'selected' : ''}`} onClick={() => handleGoalSelect(goal)}>\r\n                <span className={`goal-icon ${goal.metadata.image}`}></span>\r\n                <span className=\"text-big ml-3\">{goal.name}</span><br />\r\n              </Card>\r\n            </Row>\r\n          )\r\n        })}\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport const CustumizeGoal = ({ selectedGoal, customizeGoal, disableNext, customGoal, isNextDisabled }) => {\r\nif(!customGoal.goal_amount && !(customGoal.decumulation_horizon || customGoal.accumulation_horizon) && !isNextDisabled) disableNext(true);\r\nif (customGoal.goal_amount && (customGoal.decumulation_horizon || customGoal.accumulation_horizon) && isNextDisabled) disableNext(false);\r\nreturn (\r\n  <Row>\r\n    <Col md={{ span: 6, offset: 3 }}>\r\n      <Card className=\"w-100 p-3 main-card\">\r\n        <Card.Header>\r\n        <Row>\r\n            <span className={`goal-icon mx-3 ${selectedGoal.metadata.image}`}></span>\r\n            <h1 className=\"display-3\">{selectedGoal.name}</h1>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <p className=\"lead mr-auto\">Goal Amount</p>\r\n            <Form.Group>\r\n              <Form.Control onChange={customizeGoal} defaultValue={customGoal.goal_amount} type='number' name=\"goal_amount\"/>\r\n            </Form.Group>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"lead mr-auto\">Period of achievement (years)</p>\r\n            <Form.Group>\r\n              <Form.Control onChange={customizeGoal} defaultValue={customGoal.decumulation_horizon || customGoal.accumulation_horizon} type='number' name=\"horizon\" />\r\n            </Form.Group>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n)}\r\n\r\nexport const Questionnaire = ({ question, showQuestion, jumpToStep, allocationSelected, props, answerChecked, isNextDisabled, disableNext, findFirstQuestion }) => {\r\n  if(!isNextDisabled) disableNext(true);\r\n  // let visible = true;\r\n  // const handleSelect = answerId => {\r\n  //   showQuestion(answerId);\r\n  // }\r\n  return (\r\n    <Row>\r\n      <Col md={{ span: 6, offset: 3 }}>\r\n          {/* <Card className={`main-card ${visible ? 'fadeIn' : 'fadeOut'}`}> */}\r\n          <Card className={`main-card`}>\r\n            <Card.Header as=\"h6\" className=\"text-center\">\r\n              <h2 className=\"m-3\">{question.title}</h2>\r\n            </Card.Header>\r\n            <Card.Body className=\"questionnaire\">\r\n            <div className=\"custom-controls-stacked\">\r\n              {question && question.answers && question.answers.map((answer, index) => {\r\n                return (\r\n                  <Form.Check\r\n                    custom type=\"radio\"\r\n                    className='mb-4 add-account-form-check'\r\n                    checked={answer.id === answerChecked}\r\n                    onChange={() => showQuestion(answer.id, jumpToStep)}\r\n                    id={index + 1}\r\n                    label={answer.label}\r\n                  />\r\n                )\r\n              })}\r\n          </div>\r\n          </Card.Body>\r\n            {/* <Card.Footer className=\"d-flex flex-column align-items-end\">\r\n              <div onClick={showQuestion} className={`questionnaire-btn ${answerChecked ? '' : 'disable-click'}`}>\r\n                <span className=\"icon-circle-right questionnaire-next float-right\"></span>\r\n              </div>\r\n            </Card.Footer> */}\r\n          </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\nexport const FundAccount = ({ accountTypes, createAccount, onChangeAccountType, onChangeCurr }) => (\r\n  <Row>\r\n    <Col md={{ span: 6, offset: 3 }}>\r\n      <Card className=\"main-card\">\r\n        <Form onSubmit={createAccount}>\r\n          <Card.Body className=\"py-4\">\r\n            <Form.Row>\r\n              <p className=\"lead ml-3 mr-auto\">Account Number</p>\r\n              <Form.Group>\r\n                <Form.Control name=\"accountNumber\" disabled value={`${Math.floor(100000 + Math.random() * 900000)}${Math.floor(100000 + Math.random() * 900000)}`} />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <hr className=\"mt-0 mb-4\" />\r\n            <Row>\r\n              <p className=\"lead ml-3 mr-auto\">Currency Code</p>\r\n              <CreatableSelect className=\"react-select add-account-select mr-1\" classNamePrefix=\"react-select\"\r\n                options={[{value: 'USD', label: 'USD'}, {value: 'EUR', label: 'EUR'}]}\r\n                onChange={onChangeCurr}\r\n                defaultValue={{value: 'USD', label: 'USD'}} />\r\n              {/* <Form.Group as={Col} md={4}>\r\n                <Form.Control className=\"custom-select\" name=\"currency_code\" as=\"select\">\r\n                  <option value=\"USD\">USD</option>\r\n                  <option value=\"EUR\">EUR</option>\r\n                </Form.Control>\r\n              </Form.Group> */}\r\n            </Row>\r\n            <hr className=\"mt-0 mb-4\" />\r\n            <Row>\r\n              <p className=\"lead ml-3 mr-auto\">Account Type</p>\r\n              <CreatableSelect className=\"react-select add-account-select mr-1\" classNamePrefix=\"react-select\"\r\n                options={\r\n                  accountTypes.map(type => {\r\n                    return { value: type.id, label: type.name}\r\n                  })\r\n                }\r\n                onChange={onChangeAccountType}\r\n                defaultValue={{value: accountTypes[0].id, label: accountTypes[0].name}} />\r\n              {/* <Form.Group as={Col} md={4}>\r\n                <Form.Control className=\"custom-select\" name=\"account_type\" as=\"select\">\r\n                  {accountTypes.map(type => {\r\n                      return (\r\n                        <option value={type.id}>{type.name}</option>\r\n                      )\r\n                    })}\r\n                </Form.Control>\r\n              </Form.Group> */}\r\n            </Row>\r\n        </Card.Body>\r\n          <Card.Footer className=\"d-flex justify-content-center\">\r\n            <Button variant=\"primary\" type=\"submit\" className=\"my-3 w-75\">Create Account</Button>\r\n          </Card.Footer>\r\n        </Form>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport StepZilla from 'react-stepzilla'\r\n\r\nimport { SelectGoal, CustumizeGoal, Questionnaire, FundAccount } from './steps'\r\nimport { getGoals, getGoal, getQuestionnaires, getNodes, getNodeRelationships, getAllocations, getAccountTypes, createAccountt, getUser } from '../store/actions/index'\r\nimport SpinnerComponent from '.././components/SpinnerComponent';\r\n\r\nimport Navbar from '../components/Navbar';\r\n\r\nimport '../styles/react-stepzilla/react-stepzilla.scss'\r\nimport '../styles/steps.scss'\r\nimport '../styles/element/css/element.min.css'\r\n\r\nconst StepTitle = ({ title, description, icon, doneIcon }) => {\r\n  return (\r\n    <span>\r\n      {doneIcon ? <span className={`stepzilla-done-icon ${doneIcon}`} /> : ''}\r\n      <span className={`stepzilla-icon ${icon}`} />\r\n      <span className=\"stepzilla-title\">{title}</span>\r\n      {description ? <span className=\"stepzilla-desctiption\">{description}</span> : ''}\r\n    </span>\r\n  )\r\n}\r\n\r\nclass AddAccount extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      step: 0,\r\n      currentQuestion: {},\r\n      allocation: {},\r\n      selectedGoal: {},\r\n      customGoal: {},\r\n      answerChecked: '',\r\n      loading: false,\r\n      isNextDisabled: true,\r\n      accType: '',\r\n      currency: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { onGetGoals, onGetQuestionnaires, onGetNodes, onGetNodeRelationships, onGetAllocations, onGetAccountTypes, onGetUser } = this.props;\r\n    const username = localStorage.getItem('username')\r\n    onGetUser({ username: username });\r\n    onGetGoals();\r\n    onGetQuestionnaires();\r\n    onGetNodes();\r\n    onGetNodeRelationships();\r\n    onGetAllocations();\r\n    onGetAccountTypes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { accountSubscription, history } = this.props;\r\n    if (accountSubscription !== prevProps.accountSubscription) {\r\n      history.push('/dashboard')\r\n    }\r\n  }\r\n\r\n  createAccount = event => {\r\n    const { customGoal, selectedGoal, allocation, currency, accType } = this.state;\r\n    const { onCreateAccount, user, accountTypes } = this.props;\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const payload = {\r\n      accountNumber: form.elements.accountNumber.value,\r\n      allocationId: allocation.id,\r\n      currencyCode: currency || 'USD',\r\n      accountTypeId: accType || accountTypes[0].id,\r\n      goalId: selectedGoal.id,\r\n      isDecomulation: selectedGoal.is_decumulation,\r\n      decumulationHorizon: customGoal.decumulation_horizon,\r\n      accumulationHorizon: customGoal.accumulation_horizon,\r\n      goalAmount: customGoal.goal_amount,\r\n      clientId: user.id,\r\n      accountName: `${selectedGoal.name} ${allocation.name}`\r\n    }\r\n    console.log('jadi createAccount payload', payload)\r\n    onCreateAccount(payload);\r\n    this.setState({ loading: true })\r\n  }\r\n\r\n  customizeGoal = event => {\r\n    const { selectedGoal, customGoal } = this.state;\r\n\r\n    if (event.target.name === 'goal_amount') customGoal.goal_amount = parseFloat(event.target.value);\r\n    if (event.target.name === 'horizon' && selectedGoal.is_decumulation) customGoal.decumulation_horizon = parseFloat(event.target.value);\r\n    if (event.target.name === 'horizon' && !selectedGoal.is_decumulation) customGoal.accumulation_horizon = parseFloat(event.target.value);\r\n\r\n    if (customGoal.goal_amount && (customGoal.decumulation_horizon || customGoal.accumulation_horizon)) {\r\n      this.setState({ isNextDisabled: false })\r\n    } else {\r\n      this.setState({ isNextDisabled: true })\r\n    }\r\n    this.setState({ customGoal });\r\n  }\r\n\r\n  showQuestion = (answerId, jumpToStep) => {\r\n    const { questionnaire, nodes, nodeRelationships, allocations } = this.props;\r\n\r\n    const nextNodeRelationships = nodeRelationships.find(nr => nr.answer_id === answerId);\r\n    if (nextNodeRelationships.is_leaf) {\r\n      const allocation = allocations.find(a => {\r\n        const allocationFound = a.node_map.find(nm => nm.node_id === nextNodeRelationships.node_parent_id);\r\n        if (allocationFound) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n      if (allocation && allocation.id) {\r\n        this.findFirstQuestion(nodes, questionnaire)\r\n        this.setState({ allocation })\r\n        jumpToStep(3)\r\n      }\r\n    } else {\r\n      const nextNode = nodes.find(n => n.id === nextNodeRelationships.node_child_id);\r\n      const nextQuestion = questionnaire.questions.find(q => q.id === nextNode.question_id);\r\n      this.setState({ currentQuestion: nextQuestion });\r\n    }\r\n  }\r\n\r\n  handleGoalSelect = goal => {\r\n    this.setState({ selectedGoal: goal });\r\n    this.setState({ isNextDisabled: false })\r\n  }\r\n\r\n  findFirstQuestion = () => {\r\n    const { questionnaire, nodes } = this.props;\r\n    console.log('jadi ulaziiiiii')\r\n    const firstNode = nodes.find(n => n.is_first);\r\n    const firstQuestion = questionnaire.questions.find(q => q.id === firstNode.question_id)\r\n    this.setState({ currentQuestion: firstQuestion, allocation: {} });\r\n  }\r\n\r\n  disableNext = (isNextDisabled) => {\r\n    this.setState({ isNextDisabled })\r\n  }\r\n\r\n  onChangeCurr = (e) => {\r\n    console.log('onChange jadiiiiiii', e);\r\n    this.setState({ currency: e.value})\r\n  }\r\n\r\n  onChangeAccountType = (e) => {\r\n    console.log('onChange jadiiiiiii', e);\r\n    this.setState({ accType: e.value})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { currentQuestion, answerChecked, selectedGoal, loading, isNextDisabled, customGoal } = this.state;\r\n    const {  goals, questionnaire, nodes, accountTypes, user, history } = this.props;\r\n    console.log('jadi userrrrrrrr', user)\r\n    const stepzillaDefaultProps = {\r\n      nextButtonCls: `btn btn-primary ${isNextDisabled ? 'disabled' : ''}`,\r\n      backButtonCls: 'btn btn-default',\r\n      nextButtonText: 'Next →',\r\n      backButtonText: '← Back',\r\n      stepsNavigation: false,\r\n    }\r\n    if (Object.entries(currentQuestion).length === 0 && currentQuestion.constructor === Object && questionnaire && nodes.length > 0) this.findFirstQuestion();\r\n    const mainGoals = goals.filter(g => !g.parent_goal_id);\r\n    return !loading && goals.length ? (\r\n      <div>\r\n        <Navbar routerHistory={history} user={user}/>\r\n\r\n        <div className=\"container d-flex flex-column mt-5\">\r\n        <div className=\"react-stepzilla\">\r\n            <StepZilla {...stepzillaDefaultProps}\r\n              steps={[\r\n                { name: <StepTitle icon=\"icon-goal\" doneIcon=\"icon-circle-tick\" title=\"Goal\" description=\"Select your goal\" />, component:\r\n                  <SelectGoal\r\n                    goals={mainGoals}\r\n                    handleGoalSelect={this.handleGoalSelect}\r\n                    selectedGoal={selectedGoal}\r\n                  />\r\n                },\r\n                { name: <StepTitle icon=\"icon-money\" doneIcon=\"icon-circle-tick\" title=\"Customize Goal\" description=\"Tailor goal to your needs\" />, component:\r\n                  <CustumizeGoal\r\n                    selectedGoal={selectedGoal}\r\n                    customizeGoal={this.customizeGoal}\r\n                    disableNext={this.disableNext}\r\n                    isNextDisabled={isNextDisabled}\r\n                    customGoal={customGoal}\r\n                  />\r\n                },\r\n                { name: <StepTitle icon=\"icon-write\" doneIcon=\"icon-circle-tick\" title=\"Questionnaire\" description=\"Answer few questions\" />, component:\r\n                  <Questionnaire\r\n                    showQuestion={this.showQuestion}\r\n                    question={currentQuestion}\r\n                    answerChecked={answerChecked}\r\n                    isNextDisabled={isNextDisabled}\r\n                    disableNext={this.disableNext}\r\n                    findFirstQuestion={this.findFirstQuestion}\r\n                  />\r\n                },\r\n                { name: <StepTitle icon=\"icon-document\" doneIcon=\"icon-circle-tick\" title=\"Account\" description=\"Create your account\" />, component:\r\n                  <FundAccount \r\n                    accountTypes={accountTypes}\r\n                    onChangeCurr={this.onChangeCurr}\r\n                    onChangeAccountType={this.onChangeAccountType}\r\n                    createAccount={this.createAccount}\r\n                  />\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <SpinnerComponent />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  goals: state.goals.goals,\r\n  goal: state.goals.goal,\r\n  username: state.user.username,\r\n  questionnaire: state.questionnaire.questionnaires[0],\r\n  nodes: state.questionnaire.nodes,\r\n  allocations: state.questionnaire.allocations,\r\n  nodeRelationships: state.questionnaire.nodeRelationships,\r\n  accountTypes: state.accounts.accountTypes,\r\n  user: state.user.user,\r\n  accountSubscription: state.accounts.accountSubscription\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetGoals: payload => dispatch(getGoals(payload)),\r\n  onGetUser: payload => dispatch(getUser(payload)),\r\n  onGetGoal: payload => dispatch(getGoal(payload)),\r\n  onGetQuestionnaires: payload => dispatch(getQuestionnaires(payload)),\r\n  onGetNodes: payload => dispatch(getNodes(payload)),\r\n  onGetNodeRelationships: payload => dispatch(getNodeRelationships(payload)),\r\n  onGetAllocations: payload => dispatch(getAllocations(payload)),\r\n  onGetAccountTypes: payload => dispatch(getAccountTypes(payload)),\r\n  onCreateAccount: payload => dispatch(createAccountt(payload))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddAccount);","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\nimport { BASE_PATH } from '../../configuration';\r\n\r\nexport const getQuestionnairesSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_QUESTIONNAIRES_SUCCESS,\r\n      questionnaires: res.data.content\r\n  }\r\n}\r\n\r\nexport const getQuestionnairesFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_QUESTIONNAIRES_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getQuestionnairesStart = () => {\r\n  return {\r\n      type: actionTypes.GET_QUESTIONNAIRES_START\r\n  }\r\n}\r\n\r\nexport const getQuestionnaires = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getQuestionnaires accessToken', accessToken);\r\n  dispatch(getQuestionnairesStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}questionnaire`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getQuestionnaires res', res);\r\n      dispatch(getQuestionnairesSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getQuestionnairesFail(err)))\r\n}\r\n\r\nexport const getNodesSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_NODES_SUCCESS,\r\n      nodes: res.data.content\r\n  }\r\n}\r\n\r\nexport const getNodesFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_NODES_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getNodesStart = () => {\r\n  return {\r\n      type: actionTypes.GET_NODES_START\r\n  }\r\n}\r\n\r\nexport const getNodes = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getNodes accessToken', accessToken);\r\n  dispatch(getNodesStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}node`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getNodes res', res);\r\n      dispatch(getNodesSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getNodesFail(err)))\r\n}\r\n\r\nexport const getNodeRelationshipsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_NODE_RELATIONSHIPS_SUCCESS,\r\n      nodeRelationships: res.data.content\r\n  }\r\n}\r\n\r\nexport const getNodeRelationshipsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_NODE_RELATIONSHIPS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getNodeRelationshipsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_NODE_RELATIONSHIPS_START\r\n  }\r\n}\r\n\r\nexport const getNodeRelationships = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getNodeRelationships accessToken', accessToken);\r\n  dispatch(getNodeRelationshipsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}node_relationship`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getNodeRelationships res', res);\r\n      dispatch(getNodeRelationshipsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getNodeRelationshipsFail(err)))\r\n}\r\n\r\nexport const getAllocationsSuccess = ( res ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATIONS_SUCCESS,\r\n      allocations: res.data.content\r\n  }\r\n}\r\n\r\nexport const getAllocationsFail = ( error ) => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATIONS_FAIL,\r\n      error: error\r\n  }\r\n}\r\n\r\nexport const getAllocationsStart = () => {\r\n  return {\r\n      type: actionTypes.GET_ALLOCATIONS_START\r\n  }\r\n}\r\n\r\nexport const getAllocations = payload => (dispatch, getState) => {\r\n  const { accessToken } = getState().user;\r\n  console.log('jadi getAllocations accessToken', accessToken);\r\n  dispatch(getAllocationsStart())\r\n  axios({\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': `Bearer ${accessToken}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    url: `${BASE_PATH}allocation`,\r\n  })\r\n    .then(res => {\r\n      console.log('jadi getAllocations res', res);\r\n      dispatch(getAllocationsSuccess(res));\r\n    })\r\n    .catch(err => dispatch(getAllocationsFail(err)))\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\nimport * as Chartjs from 'react-chartjs-2'\r\nimport {\r\n  DonutChart,\r\n  ColorListTable,\r\n  ColorListTableRow,\r\n  ColorListTableCell\r\n} from '@hydrogenapi/react-components'\r\nimport Navbar from '../components/Navbar';\r\nimport {\r\n  getUser,\r\n  getAllSecurities,\r\n  getClientAnnualVolume,\r\n  getClientHoldings,\r\n  getClientCumulativeReturn,\r\n  getClientAssetSize,\r\n} from '../store/actions/index'\r\nimport '../App.css'\r\n\r\n\r\n\r\nclass ClientPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // props.setTitle('Dashboard 2 - Dashboards')\r\n    this.state = {\r\n      showModal: '',\r\n      price: null,\r\n      isDeleting: false,\r\n      currentBalance: null,\r\n      accountName: ''\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {  onGetClientHoldings, onGetClientAssetSize, onGetClientCumulativeReturn, onGetClientAnnualVolume, user, clientAssetSize, accessToken } = this.props;\r\n    if (accessToken !== prevProps.accessToken) {\r\n      this.setState({ accessToken: accessToken });\r\n    }\r\n    if (user !== prevProps.user) {\r\n      onGetClientAssetSize(user.id);\r\n      onGetClientHoldings(user.id);\r\n      onGetClientCumulativeReturn(user.id)\r\n      onGetClientAnnualVolume(user.id)\r\n    }\r\n    if (clientAssetSize !== prevProps.clientAssetSize) {\r\n      this.setState({ currentBalance: clientAssetSize.slice(-1)[0].value });\r\n    }\r\n  }\r\n\r\n  handleShowAccountName = (name) => {\r\n    this.setState({accountName: name})\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    const {  onGetUser, onGetAllSecurities } = this.props;\r\n    const username = localStorage.getItem('username')\r\n    onGetAllSecurities();\r\n    onGetUser({ username: username });\r\n  }\r\n  render() {\r\n    const { clientAssetSize, clientHoldings, clientAnnualVolume, clientCumulativeReturn, securities, user, history } = this.props;\r\n    const { currentBalance } = this.state;\r\n\r\n    let totalEarnings;\r\n    if(clientAssetSize.length > 0) {\r\n      const firstCashFlow = clientAssetSize[0];\r\n      const allAdditions = clientAssetSize.map(s => s.additions).reduce((prev, next) => prev + next);\r\n      totalEarnings = currentBalance - firstCashFlow.value - allAdditions;\r\n    }\r\n    const colors = ['#16D9F0', '#0D96A6', '#327fa8', '#133080', '#335fd6']\r\n    const data = (clientHoldings && clientHoldings.length > 0 && securities.length > 0) ? clientHoldings.map((ch, index) => {\r\n      const security = securities.find(s => s.id === ch.security_id);\r\n      let securityType;\r\n      if (security.ticker === 'VTI') securityType = 'Stocks';\r\n      if (security.ticker === 'BND') securityType = 'Bonds';\r\n      return {\r\n        value: ch.weight,\r\n        label: securityType,\r\n        asset_class: security.asset_class,\r\n        color: colors[index],\r\n        amount: ch.amount,\r\n        name: security.name,\r\n        ticker: security.ticker\r\n      }\r\n    }) : [];\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <Navbar handleShowAccountName= {(name) => this.handleShowAccountName(name)} onResetClick={this.onResetClick} user={user} routerHistory={history} />\r\n        <div className=\"container\">\r\n          <Row className=\"mt-3 mb-2 ml-2\">\r\n            <h3 className=\"font-weight-light client-page-title\">All accounts</h3>\r\n          </Row>\r\n          <Row>\r\n            <Card className=\"goal-card-dashboard m-2 float-left\">\r\n              <Row>\r\n                <Col className=\"d-lg-block align-items-stretch\">\r\n                    <a href=\"#d\" className=\"card-body media align-items-center text-body\">\r\n                      <i className=\"lnr lnr-checkmark-circle display-4 d-block text-primary\"></i>\r\n                      <span className=\"media-body d-block ml-3\">\r\n                      <span className=\"text-big\"><span className=\"font-weight-bolder\">$ {currentBalance}</span></span><br />\r\n                        <small className=\"text-muted\">Current balance</small>\r\n                      </span>\r\n                  </a> \r\n                  <a href=\"#d\" className=\"card-body media align-items-center text-body\">\r\n                      <i className=\"lnr lnr-checkmark-circle display-4 d-block text-primary\"></i>\r\n                      <span className=\"media-body d-block ml-3\">\r\n                      <span className=\"text-big\"><span className=\"font-weight-bolder\">$ {totalEarnings}</span></span><br />\r\n                        <small className=\"text-muted\">Total earnings</small>\r\n                      </span>\r\n                  </a> \r\n                </Col>\r\n                <Col className=\"d-lg-block align-items-stretch\">\r\n                  <a href=\"#d\" className=\"card-body media align-items-center text-body\">\r\n                      <i className=\"lnr lnr-checkmark-circle display-4 d-block text-primary\"></i>\r\n                      <span className=\"media-body d-block ml-3\">\r\n                      <span className=\"text-big\"><span className=\"font-weight-bolder\">{clientCumulativeReturn.cum_return && clientCumulativeReturn.cum_return.toFixed(4)} %</span></span><br />\r\n                        <small className=\"text-muted\">Performance</small>\r\n                      </span>\r\n                  </a> \r\n                  <a href=\"#d\" className=\"card-body media align-items-center text-body\">\r\n                      <i className=\"lnr lnr-checkmark-circle display-4 d-block text-primary\"></i>\r\n                      <span className=\"media-body d-block ml-3\">\r\n                      <span className=\"text-big\"><span className=\"font-weight-bolder\">{clientAnnualVolume.ann_vol && clientAnnualVolume.ann_vol.toFixed(4)} %</span></span><br />\r\n                        <small className=\"text-muted\">Volatility</small>\r\n                      </span>\r\n                    </a>\r\n                  </Col>\r\n              </Row>\r\n            </Card>\r\n            <Card className=\"client-page-dashboard m-2 pt-4 flex-grow-1 float-right\">\r\n              <DonutChart\r\n                  width={200}\r\n                  height={250}\r\n                  data={data.map(d => {return {value: d.value/100, color: d.color}})}\r\n              />\r\n              <div className=\"client-page-table-dashboard\">\r\n                <ColorListTable data={data.map(d => { return { value: d.value, label: d.label, color: d.color } })}>\r\n                  {data.map((d, index) => {\r\n                      return (\r\n                        <div>\r\n                          <ColorListTableRow key={index}>\r\n                            <ColorListTableCell>Weight:</ColorListTableCell>\r\n                            <ColorListTableCell>{d.value}%</ColorListTableCell>\r\n                            <ColorListTableCell>Balance:</ColorListTableCell>\r\n                            <ColorListTableCell>${d.amount}</ColorListTableCell>\r\n                          </ColorListTableRow>    \r\n                          <ColorListTableRow key={index+1}>\r\n                            <ColorListTableCell>{d.ticker}</ColorListTableCell>\r\n                            <ColorListTableCell>{d.name}</ColorListTableCell>\r\n                          </ColorListTableRow>\r\n                        </div>\r\n                      )\r\n                  })}\r\n                </ColorListTable>\r\n              </div>          \r\n            </Card>\r\n            </Row>\r\n            <Row>\r\n              <Card className=\"m-2 mt-3 w-100 client-chart\">\r\n              <h5 style={{paddingLeft: '5px', paddingTop: '10px', marginBottom: '-2px'}}>Account growth</h5>\r\n                <Chartjs.Line\r\n                  height={210}\r\n                  data={{\r\n                    labels: clientAssetSize.map(ca => ca.date),\r\n                    datasets: [{\r\n                      label: 'Assets value growth',\r\n                      data: clientAssetSize.map(ca => ca.value),\r\n                      borderWidth: 1,\r\n                      backgroundColor: 'rgba(28,180,255,.05)',\r\n                      borderColor: 'rgba(28,180,255,1)'\r\n                    }]\r\n                  }}\r\n                  options={{\r\n                    scales: {\r\n                      xAxes: [{\r\n                        gridLines: {\r\n                          display: false\r\n                        },\r\n                        ticks: {\r\n                          fontColor: '#aaa'\r\n                        }\r\n                      }],\r\n                      yAxes: [{\r\n                        gridLines: {\r\n                          display: false\r\n                        },\r\n                        ticks: {\r\n                          fontColor: '#aaa',\r\n                          stepSize: 20\r\n                        }\r\n                      }]\r\n                    },\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                  }}\r\n                />\r\n                </Card>\r\n\r\n            </Row>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  accessToken: state.user.accessToken,\r\n  user: state.user.user,\r\n  securities: state.models.securities,\r\n  clientAssetSize: state.user.clientAssetSize,\r\n  clientCumulativeReturn: state.user.clientCumulativeReturn,\r\n  clientAnnualVolume: state.user.clientAnnualVolume,\r\n  clientHoldings: state.user.clientHoldings,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetUser: payload => dispatch(getUser(payload)),\r\n  onGetAllSecurities: payload => dispatch(getAllSecurities(payload)),\r\n  onGetClientAssetSize: payload => dispatch(getClientAssetSize(payload)),\r\n  onGetClientAnnualVolume: payload => dispatch(getClientAnnualVolume(payload)),\r\n  onGetClientCumulativeReturn: payload => dispatch(getClientCumulativeReturn(payload)),\r\n  onGetClientHoldings: payload => dispatch(getClientHoldings(payload)),\r\n\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClientPage);\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport history from './history';\r\nimport auth from './auth';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport InitPage from './pages/InitPage';\r\nimport AddAccount from './pages/AddAccount';\r\nimport RequestCheckerComponent from './pages/RequestCheckerComponent';\r\nimport ClientPage from './pages/ClientPage';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    auth.isAuthenticated === true\r\n      ? <Component {...props} />\r\n      : <Redirect to={{pathname: '/login', state: { from: props.location }}} />\r\n  )} />\r\n)\r\nconst app = (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute exact path=\"/client\" component={ClientPage} />\r\n        <Route exact path=\"/initialize\" component={InitPage} />\r\n        <Route exact path=\"/checkrequests\" component={RequestCheckerComponent} />\r\n        <PrivateRoute exaxt path=\"/add-account\" component={AddAccount} />\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render( app, document.getElementById( 'root' ) );\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}